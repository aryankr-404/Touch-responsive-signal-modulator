ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSD.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_CSD_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	CapSense_CSD_Enable, %function
  25              	CapSense_CSD_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSD.c"
   1:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:Generated_Source\PSoC5/CapSense_CSD.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSD.c **** *
   5:Generated_Source\PSoC5/CapSense_CSD.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSD.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense_CSD.c **** *  component.
   8:Generated_Source\PSoC5/CapSense_CSD.c **** *
   9:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSD.c **** *
  11:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSD.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSD.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSD.c **** 
  18:Generated_Source\PSoC5/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:Generated_Source\PSoC5/CapSense_CSD.c **** #include "cyapicallbacks.h"
  20:Generated_Source\PSoC5/CapSense_CSD.c **** 
  21:Generated_Source\PSoC5/CapSense_CSD.c **** 
  22:Generated_Source\PSoC5/CapSense_CSD.c **** static uint8 CapSense_CSD_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense_CSD.c ****             
  24:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense_CSD.c **** 
  28:Generated_Source\PSoC5/CapSense_CSD.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 1u;
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 2


  31:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense_CSD.c **** 
  33:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8  CapSense_CSD_extRbCh0Cur = CapSense_CSD_RBLEED1;
  35:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8  CapSense_CSD_extRbCh1Cur = (CapSense_CSD_RBLEED1 + CapSense_CSD_TOTAL_RB_NUMBER__CH0
  37:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense_CSD.c ****         
  40:Generated_Source\PSoC5/CapSense_CSD.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense_CSD.c **** 
  43:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense_CSD.c **** 0x7Fu, };
  45:Generated_Source\PSoC5/CapSense_CSD.c **** 
  46:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button1__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PC, 
  50:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PC, 
  51:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PC, 
  52:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PC, 
  53:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PC, 
  54:Generated_Source\PSoC5/CapSense_CSD.c **** };
  55:Generated_Source\PSoC5/CapSense_CSD.c **** 
  56:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_portTable[] = {
  57:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__PORT, 
  58:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button1__BTN__PORT, 
  59:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PORT, 
  60:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PORT, 
  61:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PORT, 
  62:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PORT, 
  63:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PORT, 
  64:Generated_Source\PSoC5/CapSense_CSD.c **** };
  65:Generated_Source\PSoC5/CapSense_CSD.c **** 
  66:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_maskTable[] = {
  67:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__MASK,
  68:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button1__BTN__MASK,
  69:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__MASK,
  70:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__MASK,
  71:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__MASK,
  72:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__MASK,
  73:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__MASK,
  74:Generated_Source\PSoC5/CapSense_CSD.c **** };
  75:Generated_Source\PSoC5/CapSense_CSD.c **** 
  76:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_csTable[] = {
  77:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  78:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  79:Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  80:Generated_Source\PSoC5/CapSense_CSD.c **** };
  81:Generated_Source\PSoC5/CapSense_CSD.c **** 
  82:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_idacSettings[] = {
  83:Generated_Source\PSoC5/CapSense_CSD.c ****     43u,41u,48u,49u,41u,38u,34u,
  84:Generated_Source\PSoC5/CapSense_CSD.c **** };
  85:Generated_Source\PSoC5/CapSense_CSD.c **** 
  86:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetResolution[] = {
  87:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 3


  88:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
  89:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_13_BITS,
  90:Generated_Source\PSoC5/CapSense_CSD.c **** };
  91:Generated_Source\PSoC5/CapSense_CSD.c **** 
  92:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_analogSwitchDivider[CapSense_CSD_TOTAL_SCANSLOT_COUNT] = {
  93:Generated_Source\PSoC5/CapSense_CSD.c ****     2u, 2u, 3u, 3u, 3u, 3u, 3u, 
  94:Generated_Source\PSoC5/CapSense_CSD.c **** };
  95:Generated_Source\PSoC5/CapSense_CSD.c **** 
  96:Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetNumber[] = {
  97:Generated_Source\PSoC5/CapSense_CSD.c ****     1u, /* Button0__BTN */
  98:Generated_Source\PSoC5/CapSense_CSD.c ****     2u, /* Button1__BTN */
  99:Generated_Source\PSoC5/CapSense_CSD.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
 100:Generated_Source\PSoC5/CapSense_CSD.c ****     
 101:Generated_Source\PSoC5/CapSense_CSD.c **** };
 102:Generated_Source\PSoC5/CapSense_CSD.c **** 
 103:Generated_Source\PSoC5/CapSense_CSD.c **** 
 104:Generated_Source\PSoC5/CapSense_CSD.c **** 
 105:Generated_Source\PSoC5/CapSense_CSD.c **** 
 106:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
 108:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 109:Generated_Source\PSoC5/CapSense_CSD.c **** *
 110:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 111:Generated_Source\PSoC5/CapSense_CSD.c **** *  Inits default CapSense configuration provided with customizer that defines 
 112:Generated_Source\PSoC5/CapSense_CSD.c **** *  mode of component operations and resets all sensors to an inactive state.
 113:Generated_Source\PSoC5/CapSense_CSD.c **** *
 114:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 115:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 116:Generated_Source\PSoC5/CapSense_CSD.c **** *
 117:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 118:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 119:Generated_Source\PSoC5/CapSense_CSD.c **** *
 120:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 121:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Init(void) 
 122:Generated_Source\PSoC5/CapSense_CSD.c **** {
 123:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ( (CapSense_CSD_PRS_OPTIONS) || \
 124:Generated_Source\PSoC5/CapSense_CSD.c ****           (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 125:Generated_Source\PSoC5/CapSense_CSD.c ****           ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 126:Generated_Source\PSoC5/CapSense_CSD.c ****             (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) )
 127:Generated_Source\PSoC5/CapSense_CSD.c ****         
 128:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enableInterrupts;
 129:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* ( (CapSense_CSD_PRS_OPTIONS) || \
 130:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 131:Generated_Source\PSoC5/CapSense_CSD.c ****            * ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 132:Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) ) 
 133:Generated_Source\PSoC5/CapSense_CSD.c ****            */
 134:Generated_Source\PSoC5/CapSense_CSD.c ****     
 135:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 136:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 137:Generated_Source\PSoC5/CapSense_CSD.c **** 
 138:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Prescaler */
 139:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 140:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 141:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 142:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL_REG   = (CapSense_CSD_PRESCALER_CTRL_ENABLE |
 143:Generated_Source\PSoC5/CapSense_CSD.c ****                                                     CapSense_CSD_PRESCALER_CTRL_MODE_CMP);
 144:Generated_Source\PSoC5/CapSense_CSD.c ****                                                
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 4


 145:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL2_REG |= CapSense_CSD_PRESCALER_CTRL_CMP_LESS_EQ;
 146:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 147:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 148:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 149:Generated_Source\PSoC5/CapSense_CSD.c **** 
 150:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set PRS */
 151:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS)
 152:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SetAnalogSwitchesSource(CapSense_CSD_ANALOG_SWITCHES_SRC_PRS);
 153:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS) */
 154:Generated_Source\PSoC5/CapSense_CSD.c **** 
 155:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS)
 156:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 157:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 158:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 159:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 160:Generated_Source\PSoC5/CapSense_CSD.c ****         
 161:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 162:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_REG   = CapSense_CSD_PRS8_DEFAULT_POLYNOM;
 163:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 164:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 165:Generated_Source\PSoC5/CapSense_CSD.c ****         
 166:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS)
 167:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */ 
 168:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();  
 169:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 170:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_B_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 171:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 172:Generated_Source\PSoC5/CapSense_CSD.c ****         
 173:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 174:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_POLYNOM_PTR, CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 175:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 176:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_SEED_COPY_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 177:Generated_Source\PSoC5/CapSense_CSD.c ****                 
 178:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS_4X)
 179:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 180:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 181:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG  |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 182:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 183:Generated_Source\PSoC5/CapSense_CSD.c ****         
 184:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 185:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D1_REG   = HI8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 186:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D0_REG   = LO8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 187:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 188:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F1_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 189:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F0_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW; 
 190:Generated_Source\PSoC5/CapSense_CSD.c ****         
 191:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 192:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without PRS */
 193:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS) */ 
 194:Generated_Source\PSoC5/CapSense_CSD.c ****     
 195:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set ScanSpeed */
 196:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = CapSense_CSD_SCANSPEED_VALUE;
 197:Generated_Source\PSoC5/CapSense_CSD.c ****     
 198:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set the Measure */
 199:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 200:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 201:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 5


 202:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 203:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_PWM_CH0_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 204:Generated_Source\PSoC5/CapSense_CSD.c ****         
 205:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 206:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 207:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 208:Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_RAW_CH0_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 209:Generated_Source\PSoC5/CapSense_CSD.c ****     
 210:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 211:Generated_Source\PSoC5/CapSense_CSD.c ****         /*Window PWM and Raw Counter AUX set */
 212:Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 213:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 214:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 215:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 216:Generated_Source\PSoC5/CapSense_CSD.c ****         
 217:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 218:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 219:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 220:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 221:Generated_Source\PSoC5/CapSense_CSD.c ****         
 222:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 223:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 224:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 225:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 226:Generated_Source\PSoC5/CapSense_CSD.c ****         
 227:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 228:Generated_Source\PSoC5/CapSense_CSD.c ****     
 229:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 230:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 231:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 232:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 233:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 234:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH1_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 235:Generated_Source\PSoC5/CapSense_CSD.c ****             
 236:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 237:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 238:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 239:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_RAW_CH1_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 240:Generated_Source\PSoC5/CapSense_CSD.c ****            
 241:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 242:Generated_Source\PSoC5/CapSense_CSD.c ****             /*Window PWM and Raw Counter AUX set */
 243:Generated_Source\PSoC5/CapSense_CSD.c ****             enableInterrupts = CyEnterCriticalSection();
 244:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 245:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 246:Generated_Source\PSoC5/CapSense_CSD.c ****             CyExitCriticalSection(enableInterrupts);
 247:Generated_Source\PSoC5/CapSense_CSD.c ****             
 248:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 249:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 250:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 251:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 252:Generated_Source\PSoC5/CapSense_CSD.c ****             
 253:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 254:Generated_Source\PSoC5/CapSense_CSD.c ****             
 255:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 256:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 257:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 258:Generated_Source\PSoC5/CapSense_CSD.c ****             
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 6


 259:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 260:Generated_Source\PSoC5/CapSense_CSD.c ****     
 261:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 262:Generated_Source\PSoC5/CapSense_CSD.c ****     
 263:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup ISR */
 264:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 265:Generated_Source\PSoC5/CapSense_CSD.c ****     (void)CyIntSetVector(CapSense_CSD_IsrCH0_ISR_NUMBER, &CapSense_CSD_IsrCH0_ISR);
 266:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntSetPriority(CapSense_CSD_IsrCH0_ISR_NUMBER, CapSense_CSD_IsrCH0_ISR_PRIORITY);
 267:Generated_Source\PSoC5/CapSense_CSD.c ****     
 268:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 269:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 270:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetVector(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR);
 271:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetPriority(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR_PRIORITY);
 272:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 273:Generated_Source\PSoC5/CapSense_CSD.c ****     
 274:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 275:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Init();
 276:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMOD_CHANNEL);
 277:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMP_VP_CHANNEL);
 278:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 279:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
 280:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 281:Generated_Source\PSoC5/CapSense_CSD.c ****     
 282:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 283:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Init();
 284:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMOD_CHANNEL);
 285:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMP_VP_CHANNEL);
 286:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 287:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
 288:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 289:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 290:Generated_Source\PSoC5/CapSense_CSD.c ****     
 291:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Int Rb */
 292:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
 293:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_InitRb();
 294:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */
 295:Generated_Source\PSoC5/CapSense_CSD.c ****     
 296:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable window generation */
 297:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 298:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 299:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 300:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 301:Generated_Source\PSoC5/CapSense_CSD.c ****     
 302:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Cmp and Idac */
 303:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Init();
 304:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 305:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Init();
 306:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetPolarity(CapSense_CSD_IdacCH0_IDIR);
 307:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 308:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 309:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 310:Generated_Source\PSoC5/CapSense_CSD.c ****     
 311:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 312:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Init();
 313:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 314:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Init();
 315:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetPolarity(CapSense_CSD_IdacCH1_IDIR);
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 7


 316:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 317:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 318:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 319:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 320:Generated_Source\PSoC5/CapSense_CSD.c ****     
 321:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Vref if as VDAC */
 322:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 323:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Init();
 324:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 325:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Init();
 326:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 327:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 328:Generated_Source\PSoC5/CapSense_CSD.c **** }
 329:Generated_Source\PSoC5/CapSense_CSD.c **** 
 330:Generated_Source\PSoC5/CapSense_CSD.c **** 
 331:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 332:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 333:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 334:Generated_Source\PSoC5/CapSense_CSD.c **** *
 335:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 336:Generated_Source\PSoC5/CapSense_CSD.c **** *  Enables active mode power template bits for number of component used within 
 337:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense.
 338:Generated_Source\PSoC5/CapSense_CSD.c **** *
 339:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 340:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 341:Generated_Source\PSoC5/CapSense_CSD.c **** *
 342:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 343:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 344:Generated_Source\PSoC5/CapSense_CSD.c **** *
 345:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 346:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Enable(void) 
 347:Generated_Source\PSoC5/CapSense_CSD.c **** {
  28              		.loc 1 347 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 348:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 enableInterrupts;
 349:Generated_Source\PSoC5/CapSense_CSD.c ****     
 350:Generated_Source\PSoC5/CapSense_CSD.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 350 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
  39 0006 0446     		mov	r4, r0
  40              	.LVL1:
 351:Generated_Source\PSoC5/CapSense_CSD.c ****     
 352:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Prescaler */
 353:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 354:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 355:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 356:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  |= CapSense_CSD_PRESCALER_ACT_PWR_EN;
 357:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG |= CapSense_CSD_PRESCALER_STBY_PWR_EN;
 358:Generated_Source\PSoC5/CapSense_CSD.c ****         
 359:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 8


 360:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 361:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 362:Generated_Source\PSoC5/CapSense_CSD.c ****     
 363:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable ScanSpeed */
 364:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG |= CapSense_CSD_SCANSPEED_CTRL_ENABLE;
  41              		.loc 1 364 0
  42 0008 134A     		ldr	r2, .L3
  43 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  44 000c 43F02003 		orr	r3, r3, #32
  45 0010 1370     		strb	r3, [r2]
 365:Generated_Source\PSoC5/CapSense_CSD.c ****     
 366:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH0 */
 367:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 368:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 369:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 370:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 371:Generated_Source\PSoC5/CapSense_CSD.c ****         
 372:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 373:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 374:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 375:Generated_Source\PSoC5/CapSense_CSD.c ****         
 376:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 377:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 378:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 379:Generated_Source\PSoC5/CapSense_CSD.c ****         
 380:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 381:Generated_Source\PSoC5/CapSense_CSD.c ****     
 382:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH1*/
 383:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 384:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 385:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 386:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 387:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 388:Generated_Source\PSoC5/CapSense_CSD.c ****             
 389:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 390:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 391:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 392:Generated_Source\PSoC5/CapSense_CSD.c ****            
 393:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 394:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 395:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 396:Generated_Source\PSoC5/CapSense_CSD.c ****         
 397:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 398:Generated_Source\PSoC5/CapSense_CSD.c ****     
 399:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 400:Generated_Source\PSoC5/CapSense_CSD.c ****     
 401:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable the Clock */
 402:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 403:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Enable();
  46              		.loc 1 403 0
  47 0012 FFF7FEFF 		bl	CapSense_CSD_IntClock_Start
  48              	.LVL2:
 404:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 405:Generated_Source\PSoC5/CapSense_CSD.c ****     
 406:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup Cmp and Idac */
 407:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Enable();
  49              		.loc 1 407 0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 9


  50 0016 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Enable
  51              	.LVL3:
 408:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 409:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Enable();
  52              		.loc 1 409 0
  53 001a FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Enable
  54              	.LVL4:
 410:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 411:Generated_Source\PSoC5/CapSense_CSD.c ****     
 412:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 413:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Enable();
 414:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 415:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Enable();
 416:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 417:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 418:Generated_Source\PSoC5/CapSense_CSD.c ****     
 419:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Vref */
 420:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 421:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Enable();
 422:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_SetValue(CapSense_CSD_VdacRefCH0_DEFAULT_DATA);
 423:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 424:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Enable();
 425:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_SetValue(CapSense_CSD_VdacRefCH1_DEFAULT_DATA);
 426:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 427:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 428:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 429:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG |= CapSense_CSD_BufCH0_STBY_PWR_EN;
  55              		.loc 1 429 0
  56 001e 0F4A     		ldr	r2, .L3+4
  57 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  58 0022 43F01003 		orr	r3, r3, #16
  59 0026 1370     		strb	r3, [r2]
 430:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH0_ACT_PWR_EN;
  60              		.loc 1 430 0
  61 0028 103A     		subs	r2, r2, #16
  62 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  63 002c 43F01003 		orr	r3, r3, #16
  64 0030 1370     		strb	r3, [r2]
 431:Generated_Source\PSoC5/CapSense_CSD.c ****         
 432:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 433:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG |= CapSense_CSD_BufCH1_STBY_PWR_EN;
 434:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH1_ACT_PWR_EN;
 435:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 436:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 437:Generated_Source\PSoC5/CapSense_CSD.c ****     
 438:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set reference on AMux Bus */
 439:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 440:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Connect Vdac to AMux Bus */
 441:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
 442:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 443:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
 444:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 445:Generated_Source\PSoC5/CapSense_CSD.c ****         
 446:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 447:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 448:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
  65              		.loc 1 448 0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 10


  66 0032 02F5A652 		add	r2, r2, #5312
  67 0036 0532     		adds	r2, r2, #5
  68 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 003a 43F00103 		orr	r3, r3, #1
  70 003e 1370     		strb	r3, [r2]
 449:Generated_Source\PSoC5/CapSense_CSD.c ****         
 450:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 451:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 452:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 453:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)*/
 454:Generated_Source\PSoC5/CapSense_CSD.c ****     
 455:Generated_Source\PSoC5/CapSense_CSD.c ****     CyExitCriticalSection(enableInterrupts);
  71              		.loc 1 455 0
  72 0040 2046     		mov	r0, r4
  73 0042 FFF7FEFF 		bl	CyExitCriticalSection
  74              	.LVL5:
 456:Generated_Source\PSoC5/CapSense_CSD.c ****     
 457:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable interrupt */
 458:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_IsrCH0_ISR_NUMBER);
  75              		.loc 1 458 0
  76 0046 0122     		movs	r2, #1
  77 0048 054B     		ldr	r3, .L3+8
  78 004a 1A60     		str	r2, [r3]
 459:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 460:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntEnable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 461:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 462:Generated_Source\PSoC5/CapSense_CSD.c ****     
 463:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Enable state */
 464:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_CAPSENSE_EN;
  79              		.loc 1 464 0
  80 004c 054A     		ldr	r2, .L3+12
  81 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0050 43F08003 		orr	r3, r3, #128
  83 0054 1370     		strb	r3, [r2]
  84 0056 10BD     		pop	{r4, pc}
  85              	.LVL6:
  86              	.L4:
  87              		.align	2
  88              	.L3:
  89 0058 99640040 		.word	1073767577
  90 005c BB430040 		.word	1073759163
  91 0060 00E100E0 		.word	-536813312
  92 0064 7A640040 		.word	1073767546
  93              		.cfi_endproc
  94              	.LFE1:
  95              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
  96              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
  97              		.align	2
  98              		.global	CapSense_CSD_FindNextSensor
  99              		.thumb
 100              		.thumb_func
 101              		.type	CapSense_CSD_FindNextSensor, %function
 102              	CapSense_CSD_FindNextSensor:
 103              	.LFB4:
 465:Generated_Source\PSoC5/CapSense_CSD.c **** }
 466:Generated_Source\PSoC5/CapSense_CSD.c **** 
 467:Generated_Source\PSoC5/CapSense_CSD.c **** 
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 11


 468:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 469:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
 470:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 471:Generated_Source\PSoC5/CapSense_CSD.c **** *
 472:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 473:Generated_Source\PSoC5/CapSense_CSD.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 474:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 475:Generated_Source\PSoC5/CapSense_CSD.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 476:Generated_Source\PSoC5/CapSense_CSD.c **** *  applied for all sensors.
 477:Generated_Source\PSoC5/CapSense_CSD.c **** *
 478:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 479:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 480:Generated_Source\PSoC5/CapSense_CSD.c **** *
 481:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 482:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 483:Generated_Source\PSoC5/CapSense_CSD.c **** *
 484:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 485:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_initVar - used to check initial configuration, modified on 
 486:Generated_Source\PSoC5/CapSense_CSD.c **** *  first function call.
 487:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - used to notify the Tuner GUI that 
 488:Generated_Source\PSoC5/CapSense_CSD.c **** *  tuning of scanning parameters are done.
 489:Generated_Source\PSoC5/CapSense_CSD.c **** *
 490:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 491:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 492:Generated_Source\PSoC5/CapSense_CSD.c **** *
 493:Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
 494:Generated_Source\PSoC5/CapSense_CSD.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 495:Generated_Source\PSoC5/CapSense_CSD.c **** *  must be manually enabled as their long scan time is incompatible 
 496:Generated_Source\PSoC5/CapSense_CSD.c **** *  with the fast response required of other widget types. 
 497:Generated_Source\PSoC5/CapSense_CSD.c **** *
 498:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 499:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Start(void)  
 500:Generated_Source\PSoC5/CapSense_CSD.c **** {
 501:Generated_Source\PSoC5/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 502:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 503:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_Init();
 504:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 505:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 506:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_Enable();
 507:Generated_Source\PSoC5/CapSense_CSD.c ****     
 508:Generated_Source\PSoC5/CapSense_CSD.c ****     /* AutoTunning start */
 509:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 510:Generated_Source\PSoC5/CapSense_CSD.c ****         /* AutoTune by sensor or pair of sensor basis */
 511:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AutoTune();
 512:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_lowLevelTuningDone = 1u;
 513:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 514:Generated_Source\PSoC5/CapSense_CSD.c **** }
 515:Generated_Source\PSoC5/CapSense_CSD.c **** 
 516:Generated_Source\PSoC5/CapSense_CSD.c **** 
 517:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 518:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 519:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 520:Generated_Source\PSoC5/CapSense_CSD.c **** *
 521:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 522:Generated_Source\PSoC5/CapSense_CSD.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 523:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 524:Generated_Source\PSoC5/CapSense_CSD.c **** *  number of component used within CapSense.
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 12


 525:Generated_Source\PSoC5/CapSense_CSD.c **** *
 526:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 527:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 528:Generated_Source\PSoC5/CapSense_CSD.c **** *
 529:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 530:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 531:Generated_Source\PSoC5/CapSense_CSD.c **** *
 532:Generated_Source\PSoC5/CapSense_CSD.c **** * Side Effects:
 533:Generated_Source\PSoC5/CapSense_CSD.c **** *  This function should be called after scans will be completed.
 534:Generated_Source\PSoC5/CapSense_CSD.c **** *
 535:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 536:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Stop(void) 
 537:Generated_Source\PSoC5/CapSense_CSD.c **** {
 538:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Stop Capsensing */
 539:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_START);
 540:Generated_Source\PSoC5/CapSense_CSD.c ****     
 541:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable interrupt */
 542:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 543:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 544:Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 545:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 546:Generated_Source\PSoC5/CapSense_CSD.c ****     
 547:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 548:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 549:Generated_Source\PSoC5/CapSense_CSD.c ****     
 550:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Prescaler */
 551:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 552:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 553:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)        
 554:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_CSD_PRESCALER_ACT_PWR_EN;
 555:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_CSD_PRESCALER_STBY_PWR_EN;
 556:Generated_Source\PSoC5/CapSense_CSD.c ****         
 557:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 558:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 559:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 560:Generated_Source\PSoC5/CapSense_CSD.c ****     
 561:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable ScanSpeed */
 562:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_CSD_SCANSPEED_CTRL_ENABLE);
 563:Generated_Source\PSoC5/CapSense_CSD.c ****     
 564:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH0 */
 565:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 566:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 567:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 568:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 569:Generated_Source\PSoC5/CapSense_CSD.c **** 
 570:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 571:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 572:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 573:Generated_Source\PSoC5/CapSense_CSD.c **** 
 574:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 575:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 576:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 577:Generated_Source\PSoC5/CapSense_CSD.c ****         
 578:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 579:Generated_Source\PSoC5/CapSense_CSD.c ****     
 580:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH1 */
 581:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 13


 582:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 583:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 584:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 585:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 586:Generated_Source\PSoC5/CapSense_CSD.c ****     
 587:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 588:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 589:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 590:Generated_Source\PSoC5/CapSense_CSD.c ****            
 591:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 592:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 593:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 594:Generated_Source\PSoC5/CapSense_CSD.c ****         
 595:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 596:Generated_Source\PSoC5/CapSense_CSD.c ****     
 597:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 598:Generated_Source\PSoC5/CapSense_CSD.c ****     
 599:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable the Clock */
 600:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 601:Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Stop();
 602:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 603:Generated_Source\PSoC5/CapSense_CSD.c ****     
 604:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable power from Cmp and Idac */
 605:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Stop();
 606:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 607:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Stop();
 608:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 609:Generated_Source\PSoC5/CapSense_CSD.c ****     
 610:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 611:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Stop();
 612:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 613:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Stop();
 614:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 615:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */    
 616:Generated_Source\PSoC5/CapSense_CSD.c ****     
 617:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Vref if as VDAC */
 618:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 619:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Stop();
 620:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 621:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Stop();
 622:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 623:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 624:Generated_Source\PSoC5/CapSense_CSD.c **** 
 625:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
 626:Generated_Source\PSoC5/CapSense_CSD.c ****         /* The Idac turn off before */
 627:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 628:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 629:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 630:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_ACT_PWR_EN);
 631:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_STBY_PWR_EN);
 632:Generated_Source\PSoC5/CapSense_CSD.c ****         
 633:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 634:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 635:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_ACT_PWR_EN);
 636:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_STBY_PWR_EN);
 637:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /*(CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 638:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 14


 639:Generated_Source\PSoC5/CapSense_CSD.c ****     
 640:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Disable state */
 641:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_CAPSENSE_EN);
 642:Generated_Source\PSoC5/CapSense_CSD.c **** }
 643:Generated_Source\PSoC5/CapSense_CSD.c **** 
 644:Generated_Source\PSoC5/CapSense_CSD.c **** 
 645:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 646:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 647:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextSensor
 648:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 649:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 650:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 651:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next sensor to scan. 
 652:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 653:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 654:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index of sensor.
 655:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 656:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 657:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next sensor index to scan.
 658:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 659:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 660:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 661:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 662:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 663:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 664:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 665:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 666:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 667:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 668:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 669:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 670:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on current scanning scanning and should not
 671:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 672:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 673:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 674:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex) CYREENTRANT
 675:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 104              		.loc 1 675 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              	.LVL7:
 110              	.L7:
 676:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 pos;
 677:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMask;
 678:Generated_Source\PSoC5/CapSense_CSD.c ****         
 679:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor enabled */
 680:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 681:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 682:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Proceed with the next sensor */
 683:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex++;
 111              		.loc 1 683 0
 112 0000 0130     		adds	r0, r0, #1
 113 0002 C0B2     		uxtb	r0, r0
 114              	.LVL8:
 684:Generated_Source\PSoC5/CapSense_CSD.c ****             if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 15


 115              		.loc 1 684 0
 116 0004 0728     		cmp	r0, #7
 117 0006 08D0     		beq	.L6
 685:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 686:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 687:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 688:Generated_Source\PSoC5/CapSense_CSD.c ****             pos = (snsIndex >> 3u);
 118              		.loc 1 688 0
 119 0008 C208     		lsrs	r2, r0, #3
 689:Generated_Source\PSoC5/CapSense_CSD.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 120              		.loc 1 689 0
 121 000a 00F00701 		and	r1, r0, #7
 122 000e 0123     		movs	r3, #1
 123 0010 8B40     		lsls	r3, r3, r1
 124              	.LVL9:
 690:Generated_Source\PSoC5/CapSense_CSD.c ****         }    
 691:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u);
 125              		.loc 1 691 0
 126 0012 0249     		ldr	r1, .L8
 127 0014 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 128 0016 1342     		tst	r3, r2
 129 0018 F2D0     		beq	.L7
 130              	.LVL10:
 131              	.L6:
 692:Generated_Source\PSoC5/CapSense_CSD.c ****         
 693:Generated_Source\PSoC5/CapSense_CSD.c ****         return snsIndex;
 694:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 132              		.loc 1 694 0
 133 001a 7047     		bx	lr
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 001c 00000000 		.word	.LANCHOR0
 138              		.cfi_endproc
 139              	.LFE4:
 140              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 141              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
 142              		.align	2
 143              		.global	CapSense_CSD_IsBusy
 144              		.thumb
 145              		.thumb_func
 146              		.type	CapSense_CSD_IsBusy, %function
 147              	CapSense_CSD_IsBusy:
 148              	.LFB8:
 695:Generated_Source\PSoC5/CapSense_CSD.c ****  #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
 696:Generated_Source\PSoC5/CapSense_CSD.c ****  
 697:Generated_Source\PSoC5/CapSense_CSD.c ****  
 698:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 699:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 700:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextPair
 701:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 702:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 703:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 704:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 705:Generated_Source\PSoC5/CapSense_CSD.c ****     *  
 706:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 707:Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index pair of sensors.
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 16


 708:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 709:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 710:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next pair of sensors index to scan.
 711:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 712:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 713:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 714:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 715:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 716:Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 717:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 718:Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 719:Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 720:Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 721:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 722:Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 723:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on control signals set for scanning and should not
 724:Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 725:Generated_Source\PSoC5/CapSense_CSD.c ****     *
 726:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 727:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextPair(uint8 snsIndex) CYREENTRANT
 728:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 729:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 posCh;
 730:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMaskCh;
 731:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 newRegValue;
 732:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh0 = snsIndex;
 733:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh1 = snsIndex + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 734:Generated_Source\PSoC5/CapSense_CSD.c ****         
 735:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 0 */
 736:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 737:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 738:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 739:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh0++;
 740:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh0 >= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 741:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 742:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH1 */
 743:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh0 = CapSense_CSD_END_OF_SCAN__CH0;
 744:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 745:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 746:Generated_Source\PSoC5/CapSense_CSD.c ****             
 747:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh0 >> 3u);
 748:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 749:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 750:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 751:Generated_Source\PSoC5/CapSense_CSD.c ****         
 752:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 1 */
 753:Generated_Source\PSoC5/CapSense_CSD.c ****         do
 754:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 755:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 756:Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh1++;        
 757:Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh1 >= CapSense_CSD_TOTAL_SENSOR_COUNT)
 758:Generated_Source\PSoC5/CapSense_CSD.c ****             {
 759:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH0 */
 760:Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh1 = CapSense_CSD_END_OF_SCAN__CH1;
 761:Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 762:Generated_Source\PSoC5/CapSense_CSD.c ****             }
 763:Generated_Source\PSoC5/CapSense_CSD.c ****             
 764:Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh1 >> 3u);
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 17


 765:Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 766:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
 767:Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 768:Generated_Source\PSoC5/CapSense_CSD.c ****         
 769:Generated_Source\PSoC5/CapSense_CSD.c ****         indexCh1 -= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 770:Generated_Source\PSoC5/CapSense_CSD.c ****         
 771:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find the pair to scan */
 772:Generated_Source\PSoC5/CapSense_CSD.c ****         if(indexCh0 == indexCh1)
 773:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 774:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans TWO Channels */
 775:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh0;
 776:Generated_Source\PSoC5/CapSense_CSD.c ****             
 777:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= (CapSense_CSD_CTRL_WINDOW_EN__CH0 | 
 778:Generated_Source\PSoC5/CapSense_CSD.c ****                                              CapSense_CSD_CTRL_WINDOW_EN__CH1);
 779:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 780:Generated_Source\PSoC5/CapSense_CSD.c ****         else if(indexCh0 < indexCh1)
 781:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 782:Generated_Source\PSoC5/CapSense_CSD.c ****            /* Scans Channel ONE only */
 783:Generated_Source\PSoC5/CapSense_CSD.c ****            snsIndex = indexCh0;
 784:Generated_Source\PSoC5/CapSense_CSD.c ****            
 785:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 786:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 787:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 788:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 789:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 790:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 791:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 792:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans Channel TWO only */
 793:Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh1;
 794:Generated_Source\PSoC5/CapSense_CSD.c ****             
 795:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 796:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 797:Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 798:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 799:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 800:Generated_Source\PSoC5/CapSense_CSD.c ****         
 801:Generated_Source\PSoC5/CapSense_CSD.c ****         return (snsIndex);
 802:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 803:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN */
 804:Generated_Source\PSoC5/CapSense_CSD.c **** 
 805:Generated_Source\PSoC5/CapSense_CSD.c **** 
 806:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 807:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSlotSettings
 808:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 809:Generated_Source\PSoC5/CapSense_CSD.c **** *
 810:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 811:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 812:Generated_Source\PSoC5/CapSense_CSD.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 813:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 814:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 815:Generated_Source\PSoC5/CapSense_CSD.c **** *
 816:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 817:Generated_Source\PSoC5/CapSense_CSD.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 818:Generated_Source\PSoC5/CapSense_CSD.c **** *
 819:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 820:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 821:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 18


 822:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 823:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_idacSettings[] - used to store idac value for every sensor.
 824:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every 
 825:Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 826:Generated_Source\PSoC5/CapSense_CSD.c **** *
 827:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 828:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSlotSettings(uint8 slot) CYREENTRANT
 829:Generated_Source\PSoC5/CapSense_CSD.c **** {
 830:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 widget;
 831:Generated_Source\PSoC5/CapSense_CSD.c ****     
 832:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 833:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Define widget sensor belongs to */
 834:Generated_Source\PSoC5/CapSense_CSD.c ****         widget = CapSense_CSD_widgetNumber[slot];
 835:Generated_Source\PSoC5/CapSense_CSD.c ****         
 836:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Idac Value */
 837:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 838:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 839:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 840:Generated_Source\PSoC5/CapSense_CSD.c ****         
 841:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 842:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 843:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 844:Generated_Source\PSoC5/CapSense_CSD.c ****                 ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FULL_
 845:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 846:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 847:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 848:Generated_Source\PSoC5/CapSense_CSD.c **** 
 849:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 850:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 851:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 852:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 853:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 854:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 855:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 856:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 857:Generated_Source\PSoC5/CapSense_CSD.c **** 
 858:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 859:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 860:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 861:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Define widget sensor belongs to */
 862:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot];
 863:Generated_Source\PSoC5/CapSense_CSD.c ****             
 864:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 865:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 866:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 867:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 868:Generated_Source\PSoC5/CapSense_CSD.c ****             
 869:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 870:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 871:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 872:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 873:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 874:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 875:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 876:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 877:Generated_Source\PSoC5/CapSense_CSD.c ****         
 878:Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 19


 879:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 880:Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot+CapSense_CSD_TOTAL_SENSOR_COUNT__CH0];
 881:Generated_Source\PSoC5/CapSense_CSD.c ****         
 882:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 883:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 884:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_idacSettings[slot+
 885:Generated_Source\PSoC5/CapSense_CSD.c ****                                                                              CapSense_CSD_TOTAL_SEN
 886:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 887:Generated_Source\PSoC5/CapSense_CSD.c ****             
 888:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 889:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 890:Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH1_PERIOD_PTR,
 891:Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 892:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 893:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH1_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 894:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 895:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 896:Generated_Source\PSoC5/CapSense_CSD.c **** 
 897:Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 898:Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 899:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 900:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 901:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 902:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 903:Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 904:Generated_Source\PSoC5/CapSense_CSD.c ****                */
 905:Generated_Source\PSoC5/CapSense_CSD.c **** 
 906:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 907:Generated_Source\PSoC5/CapSense_CSD.c **** }
 908:Generated_Source\PSoC5/CapSense_CSD.c **** 
 909:Generated_Source\PSoC5/CapSense_CSD.c **** 
 910:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 911:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 912:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 913:Generated_Source\PSoC5/CapSense_CSD.c **** *
 914:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 915:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 916:Generated_Source\PSoC5/CapSense_CSD.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 917:Generated_Source\PSoC5/CapSense_CSD.c **** *  at the same time. After scanning is complete the isr copies the measured 
 918:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 919:Generated_Source\PSoC5/CapSense_CSD.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 920:Generated_Source\PSoC5/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 921:Generated_Source\PSoC5/CapSense_CSD.c **** *
 922:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 923:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
 924:Generated_Source\PSoC5/CapSense_CSD.c **** *
 925:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 926:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 927:Generated_Source\PSoC5/CapSense_CSD.c **** *
 928:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 929:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 930:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 931:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 932:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one.
 933:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 934:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to provided sensor argument.
 935:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 20


 936:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 937:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 938:Generated_Source\PSoC5/CapSense_CSD.c **** *
 939:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 940:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint8 sensor)  
 941:Generated_Source\PSoC5/CapSense_CSD.c **** {
 942:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 943:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 944:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = sensor;
 945:Generated_Source\PSoC5/CapSense_CSD.c ****     
 946:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 947:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start of sensor scan */
 948:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_csv = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 949:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan(sensor);
 950:Generated_Source\PSoC5/CapSense_CSD.c ****         
 951:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 952:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH0: check end of scan conditions */
 953:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 954:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 955:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 956:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 957:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 958:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 959:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 960:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 961:Generated_Source\PSoC5/CapSense_CSD.c ****         
 962:Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH1: check end of scan conditions */
 963:Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 964:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 965:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 966:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 967:Generated_Source\PSoC5/CapSense_CSD.c ****         else
 968:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 969:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 970:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 971:Generated_Source\PSoC5/CapSense_CSD.c ****         
 972:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
 973:Generated_Source\PSoC5/CapSense_CSD.c ****         if( ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u) || 
 974:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u) )
 975:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 976:Generated_Source\PSoC5/CapSense_CSD.c ****         
 977:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 978:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(sensor);
 979:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 980:Generated_Source\PSoC5/CapSense_CSD.c ****         
 981:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 982:Generated_Source\PSoC5/CapSense_CSD.c **** }
 983:Generated_Source\PSoC5/CapSense_CSD.c **** 
 984:Generated_Source\PSoC5/CapSense_CSD.c **** 
 985:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 986:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 987:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 988:Generated_Source\PSoC5/CapSense_CSD.c **** *
 989:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 990:Generated_Source\PSoC5/CapSense_CSD.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 991:Generated_Source\PSoC5/CapSense_CSD.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 992:Generated_Source\PSoC5/CapSense_CSD.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 21


 993:Generated_Source\PSoC5/CapSense_CSD.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 994:Generated_Source\PSoC5/CapSense_CSD.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 995:Generated_Source\PSoC5/CapSense_CSD.c **** *  incompatible with fast response desired of other widget types.
 996:Generated_Source\PSoC5/CapSense_CSD.c **** *
 997:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 998:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 999:Generated_Source\PSoC5/CapSense_CSD.c **** *
1000:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1001:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1002:Generated_Source\PSoC5/CapSense_CSD.c **** *
1003:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1004:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1005:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1006:Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
1007:Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one. 
1008:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
1009:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
1010:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_FindNextPair, these functions starts with sensor index
1011:Generated_Source\PSoC5/CapSense_CSD.c **** *  increment and overflow of uint8 gives desired index 0.
1012:Generated_Source\PSoC5/CapSense_CSD.c **** *
1013:Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
1014:Generated_Source\PSoC5/CapSense_CSD.c **** *  No
1015:Generated_Source\PSoC5/CapSense_CSD.c **** *
1016:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1017:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void) 
1018:Generated_Source\PSoC5/CapSense_CSD.c **** {
1019:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
1020:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
1021:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
1022:Generated_Source\PSoC5/CapSense_CSD.c ****     
1023:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1024:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor */
1025:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
1026:Generated_Source\PSoC5/CapSense_CSD.c **** 
1027:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check end of scan condition */
1028:Generated_Source\PSoC5/CapSense_CSD.c ****         if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
1029:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1030:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
1031:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
1032:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1033:Generated_Source\PSoC5/CapSense_CSD.c ****         
1034:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1035:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor and set proper control register */
1036:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextPair(CapSense_CSD_sensorIndex);
1037:Generated_Source\PSoC5/CapSense_CSD.c ****         
1038:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
1039:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) || 
1040:Generated_Source\PSoC5/CapSense_CSD.c ****            (CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1))
1041:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1042:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
1043:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
1044:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1045:Generated_Source\PSoC5/CapSense_CSD.c ****         
1046:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1047:Generated_Source\PSoC5/CapSense_CSD.c **** }
1048:Generated_Source\PSoC5/CapSense_CSD.c **** 
1049:Generated_Source\PSoC5/CapSense_CSD.c **** 
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 22


1050:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1051:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
1052:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1053:Generated_Source\PSoC5/CapSense_CSD.c **** *
1054:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1055:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1056:Generated_Source\PSoC5/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
1057:Generated_Source\PSoC5/CapSense_CSD.c **** *
1058:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1059:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1060:Generated_Source\PSoC5/CapSense_CSD.c **** *
1061:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1062:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1063:Generated_Source\PSoC5/CapSense_CSD.c **** *  completed.
1064:Generated_Source\PSoC5/CapSense_CSD.c **** *
1065:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1066:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1067:Generated_Source\PSoC5/CapSense_CSD.c **** *  Checks the busy status.
1068:Generated_Source\PSoC5/CapSense_CSD.c **** *
1069:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1070:Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_IsBusy(void) 
1071:Generated_Source\PSoC5/CapSense_CSD.c **** {
 149              		.loc 1 1071 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
1072:Generated_Source\PSoC5/CapSense_CSD.c ****     return ((0u != (CapSense_CSD_csv & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u);
 154              		.loc 1 1072 0
 155 0000 024B     		ldr	r3, .L11
 156 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1073:Generated_Source\PSoC5/CapSense_CSD.c **** }
 157              		.loc 1 1073 0
 158 0004 00F00100 		and	r0, r0, #1
 159 0008 7047     		bx	lr
 160              	.L12:
 161 000a 00BF     		.align	2
 162              	.L11:
 163 000c 00000000 		.word	CapSense_CSD_csv
 164              		.cfi_endproc
 165              	.LFE8:
 166              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 167              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_CSD_ReadSensorRaw
 170              		.thumb
 171              		.thumb_func
 172              		.type	CapSense_CSD_ReadSensorRaw, %function
 173              	CapSense_CSD_ReadSensorRaw:
 174              	.LFB9:
1074:Generated_Source\PSoC5/CapSense_CSD.c **** 
1075:Generated_Source\PSoC5/CapSense_CSD.c **** 
1076:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1077:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
1078:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1079:Generated_Source\PSoC5/CapSense_CSD.c **** *
1080:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 23


1081:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns scan sensor raw data from the CapSense_CSD_sensorRaw[] array. 
1082:Generated_Source\PSoC5/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1083:Generated_Source\PSoC5/CapSense_CSD.c **** *  is assigned by the CapSense customizer in sequence.
1084:Generated_Source\PSoC5/CapSense_CSD.c **** *
1085:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1086:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1087:Generated_Source\PSoC5/CapSense_CSD.c **** *
1088:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1089:Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns current raw data value for defined sensor number.
1090:Generated_Source\PSoC5/CapSense_CSD.c **** *
1091:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1092:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1093:Generated_Source\PSoC5/CapSense_CSD.c **** *
1094:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1095:Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint8 sensor) 
1096:Generated_Source\PSoC5/CapSense_CSD.c **** {
 175              		.loc 1 1096 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL11:
1097:Generated_Source\PSoC5/CapSense_CSD.c ****     return (CapSense_CSD_sensorRaw[sensor]);
1098:Generated_Source\PSoC5/CapSense_CSD.c **** }
 181              		.loc 1 1098 0
 182 0000 014B     		ldr	r3, .L14
 183 0002 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 184              	.LVL12:
 185 0006 7047     		bx	lr
 186              	.L15:
 187              		.align	2
 188              	.L14:
 189 0008 00000000 		.word	CapSense_CSD_sensorRaw
 190              		.cfi_endproc
 191              	.LFE9:
 192              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 193              		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 194              		.align	2
 195              		.global	CapSense_CSD_EnableSensor
 196              		.thumb
 197              		.thumb_func
 198              		.type	CapSense_CSD_EnableSensor, %function
 199              	CapSense_CSD_EnableSensor:
 200              	.LFB11:
1099:Generated_Source\PSoC5/CapSense_CSD.c **** 
1100:Generated_Source\PSoC5/CapSense_CSD.c **** 
1101:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1102:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
1103:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1104:Generated_Source\PSoC5/CapSense_CSD.c **** *
1105:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1106:Generated_Source\PSoC5/CapSense_CSD.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1107:Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1108:Generated_Source\PSoC5/CapSense_CSD.c **** *
1109:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1110:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1111:Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 24


1112:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1113:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1114:Generated_Source\PSoC5/CapSense_CSD.c **** *
1115:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1116:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void) 
1117:Generated_Source\PSoC5/CapSense_CSD.c **** {
1118:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 i;
1119:Generated_Source\PSoC5/CapSense_CSD.c ****    
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     for (i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
1121:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1122:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(i);
1123:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1124:Generated_Source\PSoC5/CapSense_CSD.c **** }
1125:Generated_Source\PSoC5/CapSense_CSD.c **** 
1126:Generated_Source\PSoC5/CapSense_CSD.c **** 
1127:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1128:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1129:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
1130:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1131:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1132:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1133:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement 
1134:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1135:Generated_Source\PSoC5/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1136:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1137:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1138:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1139:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1140:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1141:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1142:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1143:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Constants:
1144:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1145:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1146:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1147:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1148:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1149:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1150:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1151:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1152:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1153:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1154:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint8 slot) CYREENTRANT
1155:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1156:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1157:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1158:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1159:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1160:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1161:Generated_Source\PSoC5/CapSense_CSD.c ****         
1162:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1163:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1164:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1165:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable sensor (signle) */
1166:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
1167:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1168:Generated_Source\PSoC5/CapSense_CSD.c ****         else
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 25


1169:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1170:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable complex sensor */
1171:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1172:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1173:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1174:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1175:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1176:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1177:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
1178:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1179:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1180:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1181:Generated_Source\PSoC5/CapSense_CSD.c ****     
1182:Generated_Source\PSoC5/CapSense_CSD.c ****     
1183:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1184:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
1185:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1186:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1187:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1188:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1189:Generated_Source\PSoC5/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1190:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1191:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1192:Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1193:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1194:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1195:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1196:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1197:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1198:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1199:Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1200:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1201:Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1202:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1203:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1204:Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1205:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1206:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1207:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1208:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint8 slot) CYREENTRANT
1209:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1210:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1211:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1212:Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1213:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1214:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1215:Generated_Source\PSoC5/CapSense_CSD.c ****         
1216:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1217:Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1218:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1219:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable sensor (signle) */
1220:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1221:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1222:Generated_Source\PSoC5/CapSense_CSD.c ****         else
1223:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1224:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable complex sensor */
1225:Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 26


1226:Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1227:Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1228:Generated_Source\PSoC5/CapSense_CSD.c ****                         
1229:Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1230:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1231:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1232:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1233:Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1234:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1235:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1236:Generated_Source\PSoC5/CapSense_CSD.c **** 
1237:Generated_Source\PSoC5/CapSense_CSD.c **** 
1238:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1239:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1240:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1241:Generated_Source\PSoC5/CapSense_CSD.c **** *
1242:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1243:Generated_Source\PSoC5/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1244:Generated_Source\PSoC5/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1245:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1246:Generated_Source\PSoC5/CapSense_CSD.c **** *
1247:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1248:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1249:Generated_Source\PSoC5/CapSense_CSD.c **** *
1250:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1251:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1252:Generated_Source\PSoC5/CapSense_CSD.c **** *
1253:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1254:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1255:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1256:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1257:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1258:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1259:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1260:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1261:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1262:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1263:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1264:Generated_Source\PSoC5/CapSense_CSD.c **** *
1265:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1266:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_EnableSensor(uint8 sensor) CYREENTRANT
1267:Generated_Source\PSoC5/CapSense_CSD.c **** {
 201              		.loc 1 1267 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              	.LVL13:
 206 0000 10B5     		push	{r4, lr}
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
1268:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 210              		.loc 1 1268 0
 211 0002 0B4B     		ldr	r3, .L20
 212 0004 195C     		ldrb	r1, [r3, r0]	@ zero_extendqisi2
 213              	.LVL14:
1269:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 27


 214              		.loc 1 1269 0
 215 0006 1A18     		adds	r2, r3, r0
 216 0008 147A     		ldrb	r4, [r2, #8]	@ zero_extendqisi2
 217              	.LVL15:
1270:Generated_Source\PSoC5/CapSense_CSD.c ****     
1271:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1272:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1273:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1274:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1275:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1276:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1277:Generated_Source\PSoC5/CapSense_CSD.c ****     
1278:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Make sensor High-Z */
1279:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 218              		.loc 1 1279 0
 219 000a 03EB8003 		add	r3, r3, r0, lsl #2
 220 000e 1B69     		ldr	r3, [r3, #16]
 221 0010 0922     		movs	r2, #9
 222 0012 1A70     		strb	r2, [r3]
1280:Generated_Source\PSoC5/CapSense_CSD.c ****     
1281:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to DSI output */
1282:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 223              		.loc 1 1282 0
 224 0014 0F29     		cmp	r1, #15
 225 0016 00D1     		bne	.L17
1283:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1284:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 226              		.loc 1 1284 0
 227 0018 0721     		movs	r1, #7
 228              	.LVL16:
 229              	.L17:
1285:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1286:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] |= mask;
 230              		.loc 1 1286 0
 231 001a 054A     		ldr	r2, .L20
 232 001c 02EB8102 		add	r2, r2, r1, lsl #2
 233 0020 D26A     		ldr	r2, [r2, #44]
 234 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 235 0024 2343     		orrs	r3, r3, r4
 236 0026 1370     		strb	r3, [r2]
1287:Generated_Source\PSoC5/CapSense_CSD.c ****     
1288:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to AMUX */
1289:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1290:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1291:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_amuxIndex[sensor]);
1292:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1293:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(sensor);
 237              		.loc 1 1293 0
 238 0028 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 239              	.LVL17:
 240 002c 10BD     		pop	{r4, pc}
 241              	.LVL18:
 242              	.L21:
 243 002e 00BF     		.align	2
 244              	.L20:
 245 0030 00000000 		.word	.LANCHOR1
 246              		.cfi_endproc
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 28


 247              	.LFE11:
 248              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 249              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 250              		.align	2
 251              		.global	CapSense_CSD_DisableSensor
 252              		.thumb
 253              		.thumb_func
 254              		.type	CapSense_CSD_DisableSensor, %function
 255              	CapSense_CSD_DisableSensor:
 256              	.LFB12:
1294:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1295:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1296:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1297:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1298:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1299:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1300:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(amuxCh);
1301:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1302:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1303:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1304:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1305:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(amuxCh);
1306:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1307:Generated_Source\PSoC5/CapSense_CSD.c ****             
1308:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1309:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1310:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1311:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(sensor);
1312:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1313:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1314:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1315:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1316:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1317:Generated_Source\PSoC5/CapSense_CSD.c ****             
1318:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1319:Generated_Source\PSoC5/CapSense_CSD.c ****         
1320:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
1321:Generated_Source\PSoC5/CapSense_CSD.c **** }
1322:Generated_Source\PSoC5/CapSense_CSD.c **** 
1323:Generated_Source\PSoC5/CapSense_CSD.c **** 
1324:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1325:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
1326:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1327:Generated_Source\PSoC5/CapSense_CSD.c **** *
1328:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1329:Generated_Source\PSoC5/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1330:Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1331:Generated_Source\PSoC5/CapSense_CSD.c **** *
1332:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1333:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number
1334:Generated_Source\PSoC5/CapSense_CSD.c **** *
1335:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1336:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1337:Generated_Source\PSoC5/CapSense_CSD.c **** *
1338:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1339:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1340:Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 29


1341:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1342:Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1343:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1344:Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1345:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1346:Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1347:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1348:Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1349:Generated_Source\PSoC5/CapSense_CSD.c **** *
1350:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1351:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_DisableSensor(uint8 sensor) CYREENTRANT
1352:Generated_Source\PSoC5/CapSense_CSD.c **** {
 257              		.loc 1 1352 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL19:
 262 0000 70B5     		push	{r4, r5, r6, lr}
 263              		.cfi_def_cfa_offset 16
 264              		.cfi_offset 4, -16
 265              		.cfi_offset 5, -12
 266              		.cfi_offset 6, -8
 267              		.cfi_offset 14, -4
 268 0002 0546     		mov	r5, r0
1353:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 269              		.loc 1 1353 0
 270 0004 0B4B     		ldr	r3, .L26
 271 0006 1C5C     		ldrb	r4, [r3, r0]	@ zero_extendqisi2
 272              	.LVL20:
1354:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 273              		.loc 1 1354 0
 274 0008 0344     		add	r3, r3, r0
 275 000a 1E7A     		ldrb	r6, [r3, #8]	@ zero_extendqisi2
 276              	.LVL21:
1355:Generated_Source\PSoC5/CapSense_CSD.c ****     
1356:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1357:Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1358:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1359:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1360:Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1361:Generated_Source\PSoC5/CapSense_CSD.c ****             */
1362:Generated_Source\PSoC5/CapSense_CSD.c ****     
1363:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from AMUX */
1364:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1365:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1366:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_amuxIndex[sensor]);
1367:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1368:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(sensor);
 277              		.loc 1 1368 0
 278 000c FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Unset
 279              	.LVL22:
1369:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1370:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1371:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1372:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1373:Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1374:Generated_Source\PSoC5/CapSense_CSD.c ****             {
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 30


1375:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(amuxCh);
1376:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1377:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1378:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1379:Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1380:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(amuxCh);
1381:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1382:Generated_Source\PSoC5/CapSense_CSD.c ****             
1383:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1384:Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1385:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1386:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(sensor);
1387:Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1388:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1389:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1390:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1391:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1392:Generated_Source\PSoC5/CapSense_CSD.c ****             
1393:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1394:Generated_Source\PSoC5/CapSense_CSD.c ****         
1395:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1396:Generated_Source\PSoC5/CapSense_CSD.c ****     
1397:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from DSI output */
1398:Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 280              		.loc 1 1398 0
 281 0010 0F2C     		cmp	r4, #15
 282 0012 00D1     		bne	.L23
1399:Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1400:Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 283              		.loc 1 1400 0
 284 0014 0724     		movs	r4, #7
 285              	.LVL23:
 286              	.L23:
1401:Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1402:Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] &= (uint8)~mask;
 287              		.loc 1 1402 0
 288 0016 0748     		ldr	r0, .L26
 289 0018 00EB8404 		add	r4, r0, r4, lsl #2
 290              	.LVL24:
 291 001c E26A     		ldr	r2, [r4, #44]
 292 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 293 0020 23EA0603 		bic	r3, r3, r6
 294 0024 1370     		strb	r3, [r2]
1403:Generated_Source\PSoC5/CapSense_CSD.c ****     
1404:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set sensor to inactive state */
1405:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND)
1406:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_GND;
 295              		.loc 1 1406 0
 296 0026 00EB8500 		add	r0, r0, r5, lsl #2
 297 002a 0369     		ldr	r3, [r0, #16]
 298 002c 0822     		movs	r2, #8
 299 002e 1A70     		strb	r2, [r3]
 300 0030 70BD     		pop	{r4, r5, r6, pc}
 301              	.LVL25:
 302              	.L27:
 303 0032 00BF     		.align	2
 304              	.L26:
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 31


 305 0034 00000000 		.word	.LANCHOR1
 306              		.cfi_endproc
 307              	.LFE12:
 308              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 309              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 310              		.align	2
 311              		.global	CapSense_CSD_ClearSensors
 312              		.thumb
 313              		.thumb_func
 314              		.type	CapSense_CSD_ClearSensors, %function
 315              	CapSense_CSD_ClearSensors:
 316              	.LFB10:
1117:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 i;
 317              		.loc 1 1117 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 10B5     		push	{r4, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 4, -8
 324              		.cfi_offset 14, -4
 325              	.LVL26:
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 326              		.loc 1 1120 0
 327 0002 0024     		movs	r4, #0
 328 0004 04E0     		b	.L29
 329              	.LVL27:
 330              	.L30:
1122:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 331              		.loc 1 1122 0 discriminator 3
 332 0006 2046     		mov	r0, r4
 333 0008 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
 334              	.LVL28:
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 335              		.loc 1 1120 0 discriminator 3
 336 000c 0134     		adds	r4, r4, #1
 337              	.LVL29:
 338 000e E4B2     		uxtb	r4, r4
 339              	.LVL30:
 340              	.L29:
1120:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 341              		.loc 1 1120 0 is_stmt 0 discriminator 1
 342 0010 062C     		cmp	r4, #6
 343 0012 F8D9     		bls	.L30
1124:Generated_Source\PSoC5/CapSense_CSD.c **** 
 344              		.loc 1 1124 0 is_stmt 1
 345 0014 10BD     		pop	{r4, pc}
 346              		.cfi_endproc
 347              	.LFE10:
 348              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
 349 0016 00BF     		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 350              		.align	2
 351              		.global	CapSense_CSD_Stop
 352              		.thumb
 353              		.thumb_func
 354              		.type	CapSense_CSD_Stop, %function
 355              	CapSense_CSD_Stop:
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 32


 356              	.LFB3:
 537:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Stop Capsensing */
 357              		.loc 1 537 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361 0000 10B5     		push	{r4, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 539:Generated_Source\PSoC5/CapSense_CSD.c ****     
 365              		.loc 1 539 0
 366 0002 154C     		ldr	r4, .L34
 367 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 368 0006 03F0FD03 		and	r3, r3, #253
 369 000a 2370     		strb	r3, [r4]
 542:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 370              		.loc 1 542 0
 371 000c 0122     		movs	r2, #1
 372 000e 134B     		ldr	r3, .L34+4
 373 0010 1A60     		str	r2, [r3]
 548:Generated_Source\PSoC5/CapSense_CSD.c ****     
 374              		.loc 1 548 0
 375 0012 FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 376              	.LVL31:
 562:Generated_Source\PSoC5/CapSense_CSD.c ****     
 377              		.loc 1 562 0
 378 0016 124A     		ldr	r2, .L34+8
 379 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 380 001a 03F0DF03 		and	r3, r3, #223
 381 001e 1370     		strb	r3, [r2]
 601:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 382              		.loc 1 601 0
 383 0020 FFF7FEFF 		bl	CapSense_CSD_IntClock_Stop
 384              	.LVL32:
 605:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 385              		.loc 1 605 0
 386 0024 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Stop
 387              	.LVL33:
 607:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 388              		.loc 1 607 0
 389 0028 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Stop
 390              	.LVL34:
 629:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_ACT_PWR_EN);
 391              		.loc 1 629 0
 392 002c 0D4A     		ldr	r2, .L34+12
 393 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 394 0030 03F0FE03 		and	r3, r3, #254
 395 0034 1370     		strb	r3, [r2]
 630:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_STBY_PWR_EN);
 396              		.loc 1 630 0
 397 0036 A2F5A652 		sub	r2, r2, #5312
 398 003a 053A     		subs	r2, r2, #5
 399 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 400 003e 03F0EF03 		and	r3, r3, #239
 401 0042 1370     		strb	r3, [r2]
 631:Generated_Source\PSoC5/CapSense_CSD.c ****         
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 33


 402              		.loc 1 631 0
 403 0044 1032     		adds	r2, r2, #16
 404 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 405 0048 03F0EF03 		and	r3, r3, #239
 406 004c 1370     		strb	r3, [r2]
 641:Generated_Source\PSoC5/CapSense_CSD.c **** }
 407              		.loc 1 641 0
 408 004e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 409 0050 03F07F03 		and	r3, r3, #127
 410 0054 2370     		strb	r3, [r4]
 411 0056 10BD     		pop	{r4, pc}
 412              	.L35:
 413              		.align	2
 414              	.L34:
 415 0058 7A640040 		.word	1073767546
 416 005c 80E100E0 		.word	-536813184
 417 0060 99640040 		.word	1073767577
 418 0064 70580040 		.word	1073764464
 419              		.cfi_endproc
 420              	.LFE3:
 421              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 422              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 423              		.align	2
 424              		.global	CapSense_CSD_PostScan
 425              		.thumb
 426              		.thumb_func
 427              		.type	CapSense_CSD_PostScan, %function
 428              	CapSense_CSD_PostScan:
 429              	.LFB14:
1407:Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_HIGHZ)
1408:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
1409:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1410:Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_SHIELD;
1411:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND) */
1412:Generated_Source\PSoC5/CapSense_CSD.c **** }
1413:Generated_Source\PSoC5/CapSense_CSD.c **** 
1414:Generated_Source\PSoC5/CapSense_CSD.c **** 
1415:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1416:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1417:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1418:Generated_Source\PSoC5/CapSense_CSD.c **** *
1419:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1420:Generated_Source\PSoC5/CapSense_CSD.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1421:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanning process of the sensor.
1422:Generated_Source\PSoC5/CapSense_CSD.c **** *
1423:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1424:Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1425:Generated_Source\PSoC5/CapSense_CSD.c **** *
1426:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1427:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1428:Generated_Source\PSoC5/CapSense_CSD.c **** *
1429:Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1430:Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_rbTable[] - used to store pointers to PC pin registers for 
1431:Generated_Source\PSoC5/CapSense_CSD.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1432:Generated_Source\PSoC5/CapSense_CSD.c **** *  resistor.
1433:Generated_Source\PSoC5/CapSense_CSD.c **** *
1434:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 34


1435:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint8 sensor) CYREENTRANT
1436:Generated_Source\PSoC5/CapSense_CSD.c **** {
1437:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Sensor Settings */
1438:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SetScanSlotSettings(sensor);
1439:Generated_Source\PSoC5/CapSense_CSD.c ****     
1440:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1441:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_DisableInt` */
1442:Generated_Source\PSoC5/CapSense_CSD.c **** 
1443:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1444:Generated_Source\PSoC5/CapSense_CSD.c ****     
1445:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK
1446:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PreScan_DisableInt_Callback();
1447:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK */
1448:Generated_Source\PSoC5/CapSense_CSD.c **** 
1449:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Resets digital and pre-charge clocks */
1450:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_SYNC_EN;
1451:Generated_Source\PSoC5/CapSense_CSD.c ****         
1452:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1453:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1454:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable Vref from AMux */
1455:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1456:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1457:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1458:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1459:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1460:Generated_Source\PSoC5/CapSense_CSD.c **** 
1461:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1462:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1463:Generated_Source\PSoC5/CapSense_CSD.c ****             
1464:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1465:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect IDAC */
1466:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1467:Generated_Source\PSoC5/CapSense_CSD.c ****             
1468:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1469:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1470:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1471:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1472:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSD_CSBUF_ENABLE;
1473:Generated_Source\PSoC5/CapSense_CSD.c ****             
1474:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1475:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect DSI output to Rb */
1476:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1477:Generated_Source\PSoC5/CapSense_CSD.c ****             
1478:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1479:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1480:Generated_Source\PSoC5/CapSense_CSD.c ****              
1481:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1482:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1483:Generated_Source\PSoC5/CapSense_CSD.c ****         
1484:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1485:Generated_Source\PSoC5/CapSense_CSD.c ****         
1486:Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1487:Generated_Source\PSoC5/CapSense_CSD.c **** 
1488:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u)
1489:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1490:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1491:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 35


1492:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1493:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1494:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else
1495:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1496:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1497:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1498:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1499:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1500:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1501:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1502:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1503:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1504:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1505:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1506:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1507:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1508:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1509:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1510:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1511:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1512:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1513:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1514:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1515:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1516:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1517:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1518:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1519:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1520:Generated_Source\PSoC5/CapSense_CSD.c ****             
1521:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1522:Generated_Source\PSoC5/CapSense_CSD.c ****             
1523:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1524:Generated_Source\PSoC5/CapSense_CSD.c ****         
1525:Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u)
1526:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1527:Generated_Source\PSoC5/CapSense_CSD.c ****             sensor += CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
1528:Generated_Source\PSoC5/CapSense_CSD.c ****             
1529:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1530:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1531:Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1532:Generated_Source\PSoC5/CapSense_CSD.c ****                    CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1533:Generated_Source\PSoC5/CapSense_CSD.c ****                 #else 
1534:Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1535:Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1536:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1537:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1538:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1539:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1540:Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1541:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1542:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1543:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1544:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1545:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1546:Generated_Source\PSoC5/CapSense_CSD.c ****                     
1547:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1548:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 36


1549:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1550:Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1551:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1552:Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] |= CapSense_CSD_BYP_MASK;
1553:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1554:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1555:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1556:Generated_Source\PSoC5/CapSense_CSD.c ****                 
1557:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1558:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1559:Generated_Source\PSoC5/CapSense_CSD.c ****             
1560:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1561:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1562:Generated_Source\PSoC5/CapSense_CSD.c ****     
1563:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
1564:Generated_Source\PSoC5/CapSense_CSD.c ****     
1565:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1566:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_START;
1567:Generated_Source\PSoC5/CapSense_CSD.c ****     
1568:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1569:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_EnableInt` */
1570:Generated_Source\PSoC5/CapSense_CSD.c **** 
1571:Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1572:Generated_Source\PSoC5/CapSense_CSD.c **** 
1573:Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK
1574:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan_EnableInt_Callback();
1575:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK */
1576:Generated_Source\PSoC5/CapSense_CSD.c **** }
1577:Generated_Source\PSoC5/CapSense_CSD.c **** 
1578:Generated_Source\PSoC5/CapSense_CSD.c **** 
1579:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1580:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1581:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1582:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1583:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1584:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1585:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1586:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1587:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1588:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only one channel designs.
1589:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1590:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1591:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1592:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1593:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1594:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1595:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1596:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1597:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1598:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1599:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1600:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1601:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1602:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1603:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScan(uint8 sensor) CYREENTRANT
1604:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 430              		.loc 1 1604 0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 37


 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL35:
 435 0000 10B5     		push	{r4, lr}
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 4, -8
 438              		.cfi_offset 14, -4
1605:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Stop Capsensing and rearm sync */
1606:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG &= (uint8)~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
 439              		.loc 1 1606 0
 440 0002 0E4A     		ldr	r2, .L38
 441 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 442 0006 03F0FC03 		and	r3, r3, #252
 443 000a 1370     		strb	r3, [r2]
1607:Generated_Source\PSoC5/CapSense_CSD.c ****         
1608:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1609:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1610:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1611:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1612:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1613:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
 444              		.loc 1 1613 0
 445 000c 0C4B     		ldr	r3, .L38+4
 446 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 447 0010 1B02     		lsls	r3, r3, #8
 448 0012 0C49     		ldr	r1, .L38+8
 449 0014 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1614:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
 450              		.loc 1 1614 0
 451 0018 6D3A     		subs	r2, r2, #109
 452 001a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 453 001c 1343     		orrs	r3, r3, r2
1615:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 454              		.loc 1 1615 0
 455 001e DB43     		mvns	r3, r3
 456 0020 21F81030 		strh	r3, [r1, r0, lsl #1]	@ movhi
1616:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1617:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
1618:Generated_Source\PSoC5/CapSense_CSD.c ****         
1619:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1620:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
 457              		.loc 1 1620 0
 458 0024 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
 459              	.LVL36:
1621:Generated_Source\PSoC5/CapSense_CSD.c ****         
1622:Generated_Source\PSoC5/CapSense_CSD.c ****         #if(CapSense_CSD_CURRENT_SOURCE)
1623:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1624:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 460              		.loc 1 1624 0
 461 0028 0020     		movs	r0, #0
 462 002a FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 463              	.LVL37:
1625:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1626:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1627:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1628:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 38


1629:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1630:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1631:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1632:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1633:Generated_Source\PSoC5/CapSense_CSD.c ****             
1634:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1635:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1636:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1637:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1638:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 464              		.loc 1 1638 0
 465 002e 064A     		ldr	r2, .L38+12
 466 0030 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 467 0032 43F00103 		orr	r3, r3, #1
 468 0036 1370     		strb	r3, [r2]
 469 0038 10BD     		pop	{r4, pc}
 470              	.L39:
 471 003a 00BF     		.align	2
 472              	.L38:
 473 003c 7A640040 		.word	1073767546
 474 0040 1D640040 		.word	1073767453
 475 0044 00000000 		.word	CapSense_CSD_sensorRaw
 476 0048 70580040 		.word	1073764464
 477              		.cfi_endproc
 478              	.LFE14:
 479              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 480              		.section	.text.CapSense_CSD_SetPrescaler,"ax",%progbits
 481              		.align	2
 482              		.global	CapSense_CSD_SetPrescaler
 483              		.thumb
 484              		.thumb_func
 485              		.type	CapSense_CSD_SetPrescaler, %function
 486              	CapSense_CSD_SetPrescaler:
 487              	.LFB15:
1639:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1640:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1641:Generated_Source\PSoC5/CapSense_CSD.c ****     
1642:Generated_Source\PSoC5/CapSense_CSD.c **** #else
1643:Generated_Source\PSoC5/CapSense_CSD.c **** 
1644:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1645:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1646:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1647:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1648:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1649:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1650:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1651:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1652:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 0 in two channes designs.
1653:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1654:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1655:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1656:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1657:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1658:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1659:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1660:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1661:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 39


1662:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1663:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1664:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1665:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1666:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1667:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh0(uint8 sensor) CYREENTRANT
1668:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1669:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1670:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u)) 
1671:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1672:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1673:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1674:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1675:Generated_Source\PSoC5/CapSense_CSD.c ****         
1676:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1677:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1678:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1679:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1680:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1681:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
1682:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
1683:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1684:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1685:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1686:Generated_Source\PSoC5/CapSense_CSD.c ****         
1687:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1688:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1689:Generated_Source\PSoC5/CapSense_CSD.c ****         
1690:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1691:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1692:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1693:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1694:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1695:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1696:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1697:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1698:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1699:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1700:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1701:Generated_Source\PSoC5/CapSense_CSD.c ****         
1702:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1703:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1704:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1705:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1706:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1707:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1708:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1709:Generated_Source\PSoC5/CapSense_CSD.c ****     
1710:Generated_Source\PSoC5/CapSense_CSD.c ****     
1711:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1712:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScanCh1
1713:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1714:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1715:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1716:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1717:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1718:Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 40


1719:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 1 in two channes designs.
1720:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1721:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1722:Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1723:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1724:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1725:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1726:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1727:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1728:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1729:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1730:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1731:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1732:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1733:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1734:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh1(uint8 sensor) CYREENTRANT
1735:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1736:Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1737:Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u))
1738:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1739:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1740:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1741:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1742:Generated_Source\PSoC5/CapSense_CSD.c ****         
1743:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1744:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1745:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1746:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH1_COUNTER_PTR
1747:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1748:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH1_COUNTER_HI_REG << 8u);
1749:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH1_COUNTER_LO_REG;
1750:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1751:Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1752:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1753:Generated_Source\PSoC5/CapSense_CSD.c ****         
1754:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1755:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1756:Generated_Source\PSoC5/CapSense_CSD.c ****         
1757:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1758:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1759:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1760:Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1761:Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1762:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1763:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1764:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1765:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1766:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] &= ~CapSense_CSD_BYP_MASK; 
1767:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1768:Generated_Source\PSoC5/CapSense_CSD.c **** 
1769:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1770:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1771:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1772:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1773:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1774:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1775:Generated_Source\PSoC5/CapSense_CSD.c ****     }
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 41


1776:Generated_Source\PSoC5/CapSense_CSD.c ****     
1777:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE */
1778:Generated_Source\PSoC5/CapSense_CSD.c **** 
1779:Generated_Source\PSoC5/CapSense_CSD.c **** 
1780:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
1781:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1782:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name:  CapSense_CSD_InitRb
1783:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1784:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1785:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1786:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1787:Generated_Source\PSoC5/CapSense_CSD.c ****     *  while next measure.
1788:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1789:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1790:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1791:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1792:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1793:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1794:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1795:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1796:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************/
1797:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_InitRb(void) 
1798:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1799:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 i;
1800:Generated_Source\PSoC5/CapSense_CSD.c ****         
1801:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable all Rb */
1802:Generated_Source\PSoC5/CapSense_CSD.c ****         for(i = 0u; i < CapSense_CSD_TOTAL_RB_NUMBER; i++)
1803:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1804:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Make High-Z */
1805:Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[i] = CapSense_CSD_PRT_PC_HIGHZ;
1806:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1807:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1808:Generated_Source\PSoC5/CapSense_CSD.c ****     
1809:Generated_Source\PSoC5/CapSense_CSD.c ****     
1810:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1811:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetRBleed
1812:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1813:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1814:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1815:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1816:Generated_Source\PSoC5/CapSense_CSD.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1817:Generated_Source\PSoC5/CapSense_CSD.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1818:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1819:Generated_Source\PSoC5/CapSense_CSD.c ****     * 
1820:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1821:Generated_Source\PSoC5/CapSense_CSD.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1822:Generated_Source\PSoC5/CapSense_CSD.c ****     *  customizer.
1823:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1824:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1825:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1826:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1827:Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1828:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh0Cur - used to store current number of active 
1829:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 0.
1830:Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh1Cur - used to store current number of active 
1831:Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 1.
1832:Generated_Source\PSoC5/CapSense_CSD.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 42


1833:Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle.
1834:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1835:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1836:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1837:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1838:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1839:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetRBleed(uint8 rbleed) 
1840:Generated_Source\PSoC5/CapSense_CSD.c ****     {
1841:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1842:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_extRbCh0Cur = rbleed;
1843:Generated_Source\PSoC5/CapSense_CSD.c ****             
1844:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1845:Generated_Source\PSoC5/CapSense_CSD.c ****             if(rbleed < CapSense_CSD_TOTAL_RB_NUMBER__CH0)
1846:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1847:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh0Cur = rbleed;
1848:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1849:Generated_Source\PSoC5/CapSense_CSD.c ****             else
1850:Generated_Source\PSoC5/CapSense_CSD.c ****             {
1851:Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh1Cur = (rbleed - CapSense_CSD_TOTAL_RB_NUMBER__CH0);   
1852:Generated_Source\PSoC5/CapSense_CSD.c ****             }
1853:Generated_Source\PSoC5/CapSense_CSD.c ****     
1854:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */ 
1855:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1856:Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB */ 
1857:Generated_Source\PSoC5/CapSense_CSD.c **** 
1858:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRESCALER_OPTIONS)
1859:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1860:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetPrescaler
1861:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1862:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1863:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1864:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets analog switch divider.
1865:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1866:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1867:Generated_Source\PSoC5/CapSense_CSD.c ****     *  prescaler:  Sets prescaler divider values.
1868:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1869:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1870:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1871:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1872:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1873:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetPrescaler(uint8 prescaler) CYREENTRANT
1874:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 488              		.loc 1 1874 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL38:
1875:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Prescaler */
1876:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1877:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_PERIOD_REG = prescaler;
 494              		.loc 1 1877 0
 495 0000 024B     		ldr	r3, .L41
 496 0002 1870     		strb	r0, [r3]
1878:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 497              		.loc 1 1878 0
 498 0004 4008     		lsrs	r0, r0, #1
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 43


 499              	.LVL39:
 500 0006 1033     		adds	r3, r3, #16
 501              	.LVL40:
 502 0008 1870     		strb	r0, [r3]
 503              	.LVL41:
 504 000a 7047     		bx	lr
 505              	.L42:
 506              		.align	2
 507              	.L41:
 508 000c 28640040 		.word	1073767464
 509              		.cfi_endproc
 510              	.LFE15:
 511              		.size	CapSense_CSD_SetPrescaler, .-CapSense_CSD_SetPrescaler
 512              		.section	.text.CapSense_CSD_SetScanSlotSettings,"ax",%progbits
 513              		.align	2
 514              		.global	CapSense_CSD_SetScanSlotSettings
 515              		.thumb
 516              		.thumb_func
 517              		.type	CapSense_CSD_SetScanSlotSettings, %function
 518              	CapSense_CSD_SetScanSlotSettings:
 519              	.LFB5:
 829:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 widget;
 520              		.loc 1 829 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              	.LVL42:
 525 0000 70B5     		push	{r4, r5, r6, lr}
 526              		.cfi_def_cfa_offset 16
 527              		.cfi_offset 4, -16
 528              		.cfi_offset 5, -12
 529              		.cfi_offset 6, -8
 530              		.cfi_offset 14, -4
 531 0002 0446     		mov	r4, r0
 834:Generated_Source\PSoC5/CapSense_CSD.c ****         
 532              		.loc 1 834 0
 533 0004 094E     		ldr	r6, .L45
 534 0006 3318     		adds	r3, r6, r0
 535 0008 93F84C50 		ldrb	r5, [r3, #76]	@ zero_extendqisi2
 536              	.LVL43:
 838:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 537              		.loc 1 838 0
 538 000c 93F85400 		ldrb	r0, [r3, #84]	@ zero_extendqisi2
 539              	.LVL44:
 540 0010 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 541              	.LVL45:
 846:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 542              		.loc 1 846 0
 543 0014 3544     		add	r5, r5, r6
 544              	.LVL46:
 545 0016 95F85C20 		ldrb	r2, [r5, #92]	@ zero_extendqisi2
 546 001a 054B     		ldr	r3, .L45+4
 547 001c 1A70     		strb	r2, [r3]
 851:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 548              		.loc 1 851 0
 549 001e 054B     		ldr	r3, .L45+8
 550 0020 1C44     		add	r4, r4, r3
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 44


 551 0022 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 552 0024 FFF7FEFF 		bl	CapSense_CSD_SetPrescaler
 553              	.LVL47:
 554 0028 70BD     		pop	{r4, r5, r6, pc}
 555              	.LVL48:
 556              	.L46:
 557 002a 00BF     		.align	2
 558              	.L45:
 559 002c 00000000 		.word	.LANCHOR1
 560 0030 5C640040 		.word	1073767516
 561 0034 00000000 		.word	.LANCHOR0
 562              		.cfi_endproc
 563              	.LFE5:
 564              		.size	CapSense_CSD_SetScanSlotSettings, .-CapSense_CSD_SetScanSlotSettings
 565              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 566              		.align	2
 567              		.global	CapSense_CSD_PreScan
 568              		.thumb
 569              		.thumb_func
 570              		.type	CapSense_CSD_PreScan, %function
 571              	CapSense_CSD_PreScan:
 572              	.LFB13:
1436:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Sensor Settings */
 573              		.loc 1 1436 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              	.LVL49:
 578 0000 38B5     		push	{r3, r4, r5, lr}
 579              		.cfi_def_cfa_offset 16
 580              		.cfi_offset 3, -16
 581              		.cfi_offset 4, -12
 582              		.cfi_offset 5, -8
 583              		.cfi_offset 14, -4
 584 0002 0546     		mov	r5, r0
1438:Generated_Source\PSoC5/CapSense_CSD.c ****     
 585              		.loc 1 1438 0
 586 0004 FFF7FEFF 		bl	CapSense_CSD_SetScanSlotSettings
 587              	.LVL50:
1450:Generated_Source\PSoC5/CapSense_CSD.c ****         
 588              		.loc 1 1450 0
 589 0008 084C     		ldr	r4, .L49
 590 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 591 000c 43F00103 		orr	r3, r3, #1
 592 0010 2370     		strb	r3, [r4]
1458:Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
 593              		.loc 1 1458 0
 594 0012 074A     		ldr	r2, .L49+4
 595 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 596 0016 03F0FE03 		and	r3, r3, #254
 597 001a 1370     		strb	r3, [r2]
1462:Generated_Source\PSoC5/CapSense_CSD.c ****             
 598              		.loc 1 1462 0
 599 001c 2846     		mov	r0, r5
 600 001e FFF7FEFF 		bl	CapSense_CSD_EnableSensor
 601              	.LVL51:
1566:Generated_Source\PSoC5/CapSense_CSD.c ****     
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 45


 602              		.loc 1 1566 0
 603 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 604 0024 43F00203 		orr	r3, r3, #2
 605 0028 2370     		strb	r3, [r4]
 606 002a 38BD     		pop	{r3, r4, r5, pc}
 607              	.L50:
 608              		.align	2
 609              	.L49:
 610 002c 7A640040 		.word	1073767546
 611 0030 70580040 		.word	1073764464
 612              		.cfi_endproc
 613              	.LFE13:
 614              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 615              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 616              		.align	2
 617              		.global	CapSense_CSD_ScanSensor
 618              		.thumb
 619              		.thumb_func
 620              		.type	CapSense_CSD_ScanSensor, %function
 621              	CapSense_CSD_ScanSensor:
 622              	.LFB6:
 941:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 623              		.loc 1 941 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              	.LVL52:
 628 0000 08B5     		push	{r3, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 3, -8
 631              		.cfi_offset 14, -4
 943:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = sensor;
 632              		.loc 1 943 0
 633 0002 054B     		ldr	r3, .L53
 634 0004 0022     		movs	r2, #0
 635 0006 1A70     		strb	r2, [r3]
 944:Generated_Source\PSoC5/CapSense_CSD.c ****     
 636              		.loc 1 944 0
 637 0008 044A     		ldr	r2, .L53+4
 638 000a 1070     		strb	r0, [r2]
 948:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan(sensor);
 639              		.loc 1 948 0
 640 000c 8122     		movs	r2, #129
 641 000e 1A70     		strb	r2, [r3]
 949:Generated_Source\PSoC5/CapSense_CSD.c ****         
 642              		.loc 1 949 0
 643 0010 FFF7FEFF 		bl	CapSense_CSD_PreScan
 644              	.LVL53:
 645 0014 08BD     		pop	{r3, pc}
 646              	.L54:
 647 0016 00BF     		.align	2
 648              	.L53:
 649 0018 00000000 		.word	CapSense_CSD_csv
 650 001c 00000000 		.word	CapSense_CSD_sensorIndex
 651              		.cfi_endproc
 652              	.LFE6:
 653              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 46


 654              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
 655              		.align	2
 656              		.global	CapSense_CSD_ScanEnabledWidgets
 657              		.thumb
 658              		.thumb_func
 659              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 660              	CapSense_CSD_ScanEnabledWidgets:
 661              	.LFB7:
1018:Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 662              		.loc 1 1018 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666 0000 10B5     		push	{r4, lr}
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 4, -8
 669              		.cfi_offset 14, -4
1020:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
 670              		.loc 1 1020 0
 671 0002 0022     		movs	r2, #0
 672 0004 0A4B     		ldr	r3, .L58
 673 0006 1A70     		strb	r2, [r3]
1021:Generated_Source\PSoC5/CapSense_CSD.c ****     
 674              		.loc 1 1021 0
 675 0008 0A4C     		ldr	r4, .L58+4
 676 000a FF23     		movs	r3, #255
 677 000c 2370     		strb	r3, [r4]
1025:Generated_Source\PSoC5/CapSense_CSD.c **** 
 678              		.loc 1 1025 0
 679 000e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 680 0010 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 681              	.LVL54:
 682 0014 2070     		strb	r0, [r4]
1028:Generated_Source\PSoC5/CapSense_CSD.c ****         {
 683              		.loc 1 1028 0
 684 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 685 0018 DBB2     		uxtb	r3, r3
 686 001a 062B     		cmp	r3, #6
 687 001c 07D8     		bhi	.L55
1030:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
 688              		.loc 1 1030 0
 689 001e 044A     		ldr	r2, .L58
 690 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 691 0022 43F00103 		orr	r3, r3, #1
 692 0026 1370     		strb	r3, [r2]
1031:Generated_Source\PSoC5/CapSense_CSD.c ****         }
 693              		.loc 1 1031 0
 694 0028 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 695 002a FFF7FEFF 		bl	CapSense_CSD_PreScan
 696              	.LVL55:
 697              	.L55:
 698 002e 10BD     		pop	{r4, pc}
 699              	.L59:
 700              		.align	2
 701              	.L58:
 702 0030 00000000 		.word	CapSense_CSD_csv
 703 0034 00000000 		.word	CapSense_CSD_sensorIndex
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 47


 704              		.cfi_endproc
 705              	.LFE7:
 706              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 707              		.section	.text.CapSense_CSD_GetPrescaler,"ax",%progbits
 708              		.align	2
 709              		.global	CapSense_CSD_GetPrescaler
 710              		.thumb
 711              		.thumb_func
 712              		.type	CapSense_CSD_GetPrescaler, %function
 713              	CapSense_CSD_GetPrescaler:
 714              	.LFB16:
1879:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1880:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1881:Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1882:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1883:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1884:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1885:Generated_Source\PSoC5/CapSense_CSD.c ****     }
1886:Generated_Source\PSoC5/CapSense_CSD.c **** 
1887:Generated_Source\PSoC5/CapSense_CSD.c **** 
1888:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1889:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetPrescaler
1890:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1891:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1892:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1893:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Gets analog switch divider.
1894:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1895:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1896:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1897:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1898:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1899:Generated_Source\PSoC5/CapSense_CSD.c ****     *   Returns the prescaler divider value.
1900:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1901:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1902:Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_GetPrescaler(void) 
1903:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 715              		.loc 1 1903 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL56:
1904:Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 prescaler = 0u;
1905:Generated_Source\PSoC5/CapSense_CSD.c **** 
1906:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Get Prescaler */
1907:Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1908:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = CapSense_CSD_PRESCALER_PERIOD_REG;
 721              		.loc 1 1908 0
 722 0000 014B     		ldr	r3, .L61
 723 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 724              	.LVL57:
1909:Generated_Source\PSoC5/CapSense_CSD.c ****             
1910:Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1911:Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR);
1912:Generated_Source\PSoC5/CapSense_CSD.c ****             
1913:Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1914:Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 48


1915:Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1916:Generated_Source\PSoC5/CapSense_CSD.c ****         
1917:Generated_Source\PSoC5/CapSense_CSD.c ****         return (prescaler);
1918:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 725              		.loc 1 1918 0
 726 0004 7047     		bx	lr
 727              	.L62:
 728 0006 00BF     		.align	2
 729              	.L61:
 730 0008 28640040 		.word	1073767464
 731              		.cfi_endproc
 732              	.LFE16:
 733              		.size	CapSense_CSD_GetPrescaler, .-CapSense_CSD_GetPrescaler
 734              		.section	.text.CapSense_CSD_SetScanSpeed,"ax",%progbits
 735              		.align	2
 736              		.global	CapSense_CSD_SetScanSpeed
 737              		.thumb
 738              		.thumb_func
 739              		.type	CapSense_CSD_SetScanSpeed, %function
 740              	CapSense_CSD_SetScanSpeed:
 741              	.LFB17:
1919:Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_PRESCALER_OPTIONS */
1920:Generated_Source\PSoC5/CapSense_CSD.c **** 
1921:Generated_Source\PSoC5/CapSense_CSD.c **** 
1922:Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1923:Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSpeed
1924:Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1925:Generated_Source\PSoC5/CapSense_CSD.c **** *
1926:Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1927:Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets ScanSpeed divider.
1928:Generated_Source\PSoC5/CapSense_CSD.c **** *
1929:Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1930:Generated_Source\PSoC5/CapSense_CSD.c **** *  scanspeed:  Sets ScanSpeed divider.
1931:Generated_Source\PSoC5/CapSense_CSD.c **** *
1932:Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1933:Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1934:Generated_Source\PSoC5/CapSense_CSD.c **** *
1935:Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1936:Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSpeed(uint8 scanSpeed) 
1937:Generated_Source\PSoC5/CapSense_CSD.c **** {
 742              		.loc 1 1937 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747              	.LVL58:
1938:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = scanSpeed; 
 748              		.loc 1 1938 0
 749 0000 014B     		ldr	r3, .L64
 750 0002 1870     		strb	r0, [r3]
 751 0004 7047     		bx	lr
 752              	.L65:
 753 0006 00BF     		.align	2
 754              	.L64:
 755 0008 89640040 		.word	1073767561
 756              		.cfi_endproc
 757              	.LFE17:
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 49


 758              		.size	CapSense_CSD_SetScanSpeed, .-CapSense_CSD_SetScanSpeed
 759              		.section	.text.CapSense_CSD_SetAnalogSwitchesSource,"ax",%progbits
 760              		.align	2
 761              		.global	CapSense_CSD_SetAnalogSwitchesSource
 762              		.thumb
 763              		.thumb_func
 764              		.type	CapSense_CSD_SetAnalogSwitchesSource, %function
 765              	CapSense_CSD_SetAnalogSwitchesSource:
 766              	.LFB18:
1939:Generated_Source\PSoC5/CapSense_CSD.c **** }
1940:Generated_Source\PSoC5/CapSense_CSD.c **** 
1941:Generated_Source\PSoC5/CapSense_CSD.c **** 
1942:Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRS_OPTIONS)
1943:Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1944:Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetAnalogSwitchesSource
1945:Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1946:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1947:Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1948:Generated_Source\PSoC5/CapSense_CSD.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1949:Generated_Source\PSoC5/CapSense_CSD.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1950:Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is used in auto-tuning procedure.
1951:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1952:Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1953:Generated_Source\PSoC5/CapSense_CSD.c ****     *  src:  analog switches source:
1954:Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1955:Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRS - selects PRS
1956:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1957:Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1958:Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1959:Generated_Source\PSoC5/CapSense_CSD.c ****     *
1960:Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1961:Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1962:Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1963:Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetAnalogSwitchesSource(uint8 src)
1964:Generated_Source\PSoC5/CapSense_CSD.c ****                       
1965:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 767              		.loc 1 1965 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772              	.LVL59:
1966:Generated_Source\PSoC5/CapSense_CSD.c ****         if(src == CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER)
 773              		.loc 1 1966 0
 774 0000 0128     		cmp	r0, #1
 775 0002 05D1     		bne	.L67
1967:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1968:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= (uint8)~0x10u;
 776              		.loc 1 1968 0
 777 0004 054A     		ldr	r2, .L69
 778 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 779 0008 03F0EF03 		and	r3, r3, #239
 780 000c 1370     		strb	r3, [r2]
 781 000e 7047     		bx	lr
 782              	.L67:
1969:Generated_Source\PSoC5/CapSense_CSD.c ****         }
1970:Generated_Source\PSoC5/CapSense_CSD.c ****         else
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 50


1971:Generated_Source\PSoC5/CapSense_CSD.c ****         {
1972:Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= 0x10u;
 783              		.loc 1 1972 0
 784 0010 024A     		ldr	r2, .L69
 785 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 786 0014 43F01003 		orr	r3, r3, #16
 787 0018 1370     		strb	r3, [r2]
 788 001a 7047     		bx	lr
 789              	.L70:
 790              		.align	2
 791              	.L69:
 792 001c 7A640040 		.word	1073767546
 793              		.cfi_endproc
 794              	.LFE18:
 795              		.size	CapSense_CSD_SetAnalogSwitchesSource, .-CapSense_CSD_SetAnalogSwitchesSource
 796              		.section	.text.CapSense_CSD_Init,"ax",%progbits
 797              		.align	2
 798              		.global	CapSense_CSD_Init
 799              		.thumb
 800              		.thumb_func
 801              		.type	CapSense_CSD_Init, %function
 802              	CapSense_CSD_Init:
 803              	.LFB0:
 122:Generated_Source\PSoC5/CapSense_CSD.c ****     #if ( (CapSense_CSD_PRS_OPTIONS) || \
 804              		.loc 1 122 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808 0000 38B5     		push	{r3, r4, r5, lr}
 809              		.cfi_def_cfa_offset 16
 810              		.cfi_offset 3, -16
 811              		.cfi_offset 4, -12
 812              		.cfi_offset 5, -8
 813              		.cfi_offset 14, -4
 136:Generated_Source\PSoC5/CapSense_CSD.c **** 
 814              		.loc 1 136 0
 815 0002 FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 816              	.LVL60:
 152:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS) */
 817              		.loc 1 152 0
 818 0006 0220     		movs	r0, #2
 819 0008 FFF7FEFF 		bl	CapSense_CSD_SetAnalogSwitchesSource
 820              	.LVL61:
 168:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 821              		.loc 1 168 0
 822 000c FFF7FEFF 		bl	CyEnterCriticalSection
 823              	.LVL62:
 169:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_B_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 824              		.loc 1 169 0
 825 0010 2E4A     		ldr	r2, .L73
 826 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 827 0014 43F00303 		orr	r3, r3, #3
 828 0018 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 829              		.loc 1 170 0
 830 001a 0132     		adds	r2, r2, #1
 831 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 51


 832 001e 43F00303 		orr	r3, r3, #3
 833 0022 1370     		strb	r3, [r2]
 171:Generated_Source\PSoC5/CapSense_CSD.c ****         
 834              		.loc 1 171 0
 835 0024 FFF7FEFF 		bl	CyExitCriticalSection
 836              	.LVL63:
 174:Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 837              		.loc 1 174 0
 838 0028 4FF43442 		mov	r2, #46080
 839 002c 284B     		ldr	r3, .L73+4
 840 002e 1A80     		strh	r2, [r3]	@ movhi
 176:Generated_Source\PSoC5/CapSense_CSD.c ****                 
 841              		.loc 1 176 0
 842 0030 4FF6FF75 		movw	r5, #65535
 843 0034 2033     		adds	r3, r3, #32
 844 0036 1D80     		strh	r5, [r3]	@ movhi
 196:Generated_Source\PSoC5/CapSense_CSD.c ****     
 845              		.loc 1 196 0
 846 0038 0724     		movs	r4, #7
 847 003a 3F33     		adds	r3, r3, #63
 848 003c 1C70     		strb	r4, [r3]
 212:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 849              		.loc 1 212 0
 850 003e FFF7FEFF 		bl	CyEnterCriticalSection
 851              	.LVL64:
 213:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 852              		.loc 1 213 0
 853 0042 244A     		ldr	r2, .L73+8
 854 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 855 0046 43F00303 		orr	r3, r3, #3
 856 004a 1370     		strb	r3, [r2]
 214:Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 857              		.loc 1 214 0
 858 004c 0132     		adds	r2, r2, #1
 859 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 860 0050 43F00303 		orr	r3, r3, #3
 861 0054 1370     		strb	r3, [r2]
 215:Generated_Source\PSoC5/CapSense_CSD.c ****         
 862              		.loc 1 215 0
 863 0056 FFF7FEFF 		bl	CyExitCriticalSection
 864              	.LVL65:
 218:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 865              		.loc 1 218 0
 866 005a FF23     		movs	r3, #255
 867 005c 1E4A     		ldr	r2, .L73+12
 868 005e 1570     		strb	r5, [r2]
 219:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 869              		.loc 1 219 0
 870 0060 2032     		adds	r2, r2, #32
 871 0062 1370     		strb	r3, [r2]
 220:Generated_Source\PSoC5/CapSense_CSD.c ****         
 872              		.loc 1 220 0
 873 0064 403A     		subs	r2, r2, #64
 874 0066 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 875              		.loc 1 223 0
 876 0068 2132     		adds	r2, r2, #33
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 52


 877 006a 1370     		strb	r3, [r2]
 224:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 878              		.loc 1 224 0
 879 006c 3032     		adds	r2, r2, #48
 880 006e 1370     		strb	r3, [r2]
 225:Generated_Source\PSoC5/CapSense_CSD.c ****         
 881              		.loc 1 225 0
 882 0070 103A     		subs	r2, r2, #16
 883 0072 1370     		strb	r3, [r2]
 264:Generated_Source\PSoC5/CapSense_CSD.c ****     (void)CyIntSetVector(CapSense_CSD_IsrCH0_ISR_NUMBER, &CapSense_CSD_IsrCH0_ISR);
 884              		.loc 1 264 0
 885 0074 0122     		movs	r2, #1
 886 0076 03F1E023 		add	r3, r3, #-536813568
 887 007a 8133     		adds	r3, r3, #129
 888 007c 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntSetPriority(CapSense_CSD_IsrCH0_ISR_NUMBER, CapSense_CSD_IsrCH0_ISR_PRIORITY);
 889              		.loc 1 265 0
 890 007e 1749     		ldr	r1, .L73+16
 891 0080 0020     		movs	r0, #0
 892 0082 FFF7FEFF 		bl	CyIntSetVector
 893              	.LVL66:
 266:Generated_Source\PSoC5/CapSense_CSD.c ****     
 894              		.loc 1 266 0
 895 0086 2146     		mov	r1, r4
 896 0088 0020     		movs	r0, #0
 897 008a FFF7FEFF 		bl	CyIntSetPriority
 898              	.LVL67:
 275:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMOD_CHANNEL);
 899              		.loc 1 275 0
 900 008e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Init
 901              	.LVL68:
 276:Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMP_VP_CHANNEL);
 902              		.loc 1 276 0
 903 0092 2046     		mov	r0, r4
 904 0094 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 905              	.LVL69:
 277:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 906              		.loc 1 277 0
 907 0098 0820     		movs	r0, #8
 908 009a FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 909              	.LVL70:
 279:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 910              		.loc 1 279 0
 911 009e 0920     		movs	r0, #9
 912 00a0 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 913              	.LVL71:
 297:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 914              		.loc 1 297 0
 915 00a4 0E4A     		ldr	r2, .L73+20
 916 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 917 00a8 43F00403 		orr	r3, r3, #4
 918 00ac 1370     		strb	r3, [r2]
 303:Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 919              		.loc 1 303 0
 920 00ae FFF7FEFF 		bl	CapSense_CSD_CompCH0_Init
 921              	.LVL72:
 305:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetPolarity(CapSense_CSD_IdacCH0_IDIR);
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 53


 922              		.loc 1 305 0
 923 00b2 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Init
 924              	.LVL73:
 306:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 925              		.loc 1 306 0
 926 00b6 0020     		movs	r0, #0
 927 00b8 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetPolarity
 928              	.LVL74:
 307:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 929              		.loc 1 307 0
 930 00bc 0420     		movs	r0, #4
 931 00be FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetRange
 932              	.LVL75:
 308:Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 933              		.loc 1 308 0
 934 00c2 0020     		movs	r0, #0
 935 00c4 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 936              	.LVL76:
 937 00c8 38BD     		pop	{r3, r4, r5, pc}
 938              	.L74:
 939 00ca 00BF     		.align	2
 940              	.L73:
 941 00cc 9A640040 		.word	1073767578
 942 00d0 2A640040 		.word	1073767466
 943 00d4 9C640040 		.word	1073767580
 944 00d8 2C640040 		.word	1073767468
 945 00dc 00000000 		.word	CapSense_CSD_IsrCH0_ISR
 946 00e0 7A640040 		.word	1073767546
 947              		.cfi_endproc
 948              	.LFE0:
 949              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 950              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 951              		.align	2
 952              		.global	CapSense_CSD_Start
 953              		.thumb
 954              		.thumb_func
 955              		.type	CapSense_CSD_Start, %function
 956              	CapSense_CSD_Start:
 957              	.LFB2:
 500:Generated_Source\PSoC5/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 958              		.loc 1 500 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962 0000 08B5     		push	{r3, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 3, -8
 965              		.cfi_offset 14, -4
 501:Generated_Source\PSoC5/CapSense_CSD.c ****     {
 966              		.loc 1 501 0
 967 0002 054B     		ldr	r3, .L78
 968 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 969 0006 23B9     		cbnz	r3, .L76
 503:Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 970              		.loc 1 503 0
 971 0008 FFF7FEFF 		bl	CapSense_CSD_Init
 972              	.LVL77:
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 54


 504:Generated_Source\PSoC5/CapSense_CSD.c ****     }
 973              		.loc 1 504 0
 974 000c 0122     		movs	r2, #1
 975 000e 024B     		ldr	r3, .L78
 976 0010 1A70     		strb	r2, [r3]
 977              	.L76:
 506:Generated_Source\PSoC5/CapSense_CSD.c ****     
 978              		.loc 1 506 0
 979 0012 FFF7FEFF 		bl	CapSense_CSD_Enable
 980              	.LVL78:
 981 0016 08BD     		pop	{r3, pc}
 982              	.L79:
 983              		.align	2
 984              	.L78:
 985 0018 00000000 		.word	.LANCHOR2
 986              		.cfi_endproc
 987              	.LFE2:
 988              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 989              		.global	CapSense_CSD_widgetNumber
 990              		.global	CapSense_CSD_analogSwitchDivider
 991              		.global	CapSense_CSD_widgetResolution
 992              		.global	CapSense_CSD_idacSettings
 993              		.global	CapSense_CSD_csTable
 994              		.global	CapSense_CSD_maskTable
 995              		.global	CapSense_CSD_portTable
 996              		.global	CapSense_CSD_pcTable
 997              		.global	CapSense_CSD_sensorEnableMask
 998              		.comm	CapSense_CSD_sensorRaw,14,4
 999              		.comm	CapSense_CSD_sensorIndex,1,1
 1000              		.comm	CapSense_CSD_csv,1,1
 1001              		.section	.rodata
 1002              		.align	2
 1003              		.set	.LANCHOR1,. + 0
 1004              		.type	CapSense_CSD_portTable, %object
 1005              		.size	CapSense_CSD_portTable, 7
 1006              	CapSense_CSD_portTable:
 1007 0000 05       		.byte	5
 1008 0001 05       		.byte	5
 1009 0002 05       		.byte	5
 1010 0003 05       		.byte	5
 1011 0004 05       		.byte	5
 1012 0005 05       		.byte	5
 1013 0006 05       		.byte	5
 1014 0007 00       		.space	1
 1015              		.type	CapSense_CSD_maskTable, %object
 1016              		.size	CapSense_CSD_maskTable, 7
 1017              	CapSense_CSD_maskTable:
 1018 0008 40       		.byte	64
 1019 0009 20       		.byte	32
 1020 000a 01       		.byte	1
 1021 000b 02       		.byte	2
 1022 000c 04       		.byte	4
 1023 000d 08       		.byte	8
 1024 000e 10       		.byte	16
 1025 000f 00       		.space	1
 1026              		.type	CapSense_CSD_pcTable, %object
 1027              		.size	CapSense_CSD_pcTable, 28
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 55


 1028              	CapSense_CSD_pcTable:
 1029 0010 2E500040 		.word	1073762350
 1030 0014 2D500040 		.word	1073762349
 1031 0018 28500040 		.word	1073762344
 1032 001c 29500040 		.word	1073762345
 1033 0020 2A500040 		.word	1073762346
 1034 0024 2B500040 		.word	1073762347
 1035 0028 2C500040 		.word	1073762348
 1036              		.type	CapSense_CSD_csTable, %object
 1037              		.size	CapSense_CSD_csTable, 32
 1038              	CapSense_CSD_csTable:
 1039 002c 06520040 		.word	1073762822
 1040 0030 0E520040 		.word	1073762830
 1041 0034 16520040 		.word	1073762838
 1042 0038 1E520040 		.word	1073762846
 1043 003c 26520040 		.word	1073762854
 1044 0040 2E520040 		.word	1073762862
 1045 0044 36520040 		.word	1073762870
 1046 0048 7E520040 		.word	1073762942
 1047              		.type	CapSense_CSD_widgetNumber, %object
 1048              		.size	CapSense_CSD_widgetNumber, 7
 1049              	CapSense_CSD_widgetNumber:
 1050 004c 01       		.byte	1
 1051 004d 02       		.byte	2
 1052 004e 00       		.byte	0
 1053 004f 00       		.byte	0
 1054 0050 00       		.byte	0
 1055 0051 00       		.byte	0
 1056 0052 00       		.byte	0
 1057 0053 00       		.space	1
 1058              		.type	CapSense_CSD_idacSettings, %object
 1059              		.size	CapSense_CSD_idacSettings, 7
 1060              	CapSense_CSD_idacSettings:
 1061 0054 2B       		.byte	43
 1062 0055 29       		.byte	41
 1063 0056 30       		.byte	48
 1064 0057 31       		.byte	49
 1065 0058 29       		.byte	41
 1066 0059 26       		.byte	38
 1067 005a 22       		.byte	34
 1068 005b 00       		.space	1
 1069              		.type	CapSense_CSD_widgetResolution, %object
 1070              		.size	CapSense_CSD_widgetResolution, 3
 1071              	CapSense_CSD_widgetResolution:
 1072 005c 3F       		.byte	63
 1073 005d 3F       		.byte	63
 1074 005e 1F       		.byte	31
 1075              		.data
 1076              		.align	2
 1077              		.set	.LANCHOR0,. + 0
 1078              		.type	CapSense_CSD_sensorEnableMask, %object
 1079              		.size	CapSense_CSD_sensorEnableMask, 1
 1080              	CapSense_CSD_sensorEnableMask:
 1081 0000 7F       		.byte	127
 1082 0001 000000   		.space	3
 1083              		.type	CapSense_CSD_analogSwitchDivider, %object
 1084              		.size	CapSense_CSD_analogSwitchDivider, 7
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 56


 1085              	CapSense_CSD_analogSwitchDivider:
 1086 0004 02       		.byte	2
 1087 0005 02       		.byte	2
 1088 0006 03       		.byte	3
 1089 0007 03       		.byte	3
 1090 0008 03       		.byte	3
 1091 0009 03       		.byte	3
 1092 000a 03       		.byte	3
 1093              		.bss
 1094              		.set	.LANCHOR2,. + 0
 1095              		.type	CapSense_CSD_initVar, %object
 1096              		.size	CapSense_CSD_initVar, 1
 1097              	CapSense_CSD_initVar:
 1098 0000 00       		.space	1
 1099              		.text
 1100              	.Letext0:
 1101              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1102              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1103              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSD_IntClock.h"
 1104              		.file 5 "Generated_Source\\PSoC5\\CapSense_CSD_CompCH0.h"
 1105              		.file 6 "Generated_Source\\PSoC5\\CapSense_CSD_IdacCH0.h"
 1106              		.file 7 "Generated_Source\\PSoC5\\cyfitter_cfg.h"
 1107              		.file 8 "Generated_Source\\PSoC5\\CapSense_CSD_AMuxCH0.h"
 1108              		.section	.debug_info,"",%progbits
 1109              	.Ldebug_info0:
 1110 0000 42080000 		.4byte	0x842
 1111 0004 0400     		.2byte	0x4
 1112 0006 00000000 		.4byte	.Ldebug_abbrev0
 1113 000a 04       		.byte	0x4
 1114 000b 01       		.uleb128 0x1
 1115 000c D6040000 		.4byte	.LASF79
 1116 0010 0C       		.byte	0xc
 1117 0011 04020000 		.4byte	.LASF80
 1118 0015 89030000 		.4byte	.LASF81
 1119 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1120 001d 00000000 		.4byte	0
 1121 0021 00000000 		.4byte	.Ldebug_line0
 1122 0025 02       		.uleb128 0x2
 1123 0026 01       		.byte	0x1
 1124 0027 06       		.byte	0x6
 1125 0028 C8000000 		.4byte	.LASF0
 1126 002c 02       		.uleb128 0x2
 1127 002d 01       		.byte	0x1
 1128 002e 08       		.byte	0x8
 1129 002f 9B040000 		.4byte	.LASF1
 1130 0033 02       		.uleb128 0x2
 1131 0034 02       		.byte	0x2
 1132 0035 05       		.byte	0x5
 1133 0036 A9040000 		.4byte	.LASF2
 1134 003a 02       		.uleb128 0x2
 1135 003b 02       		.byte	0x2
 1136 003c 07       		.byte	0x7
 1137 003d 7E020000 		.4byte	.LASF3
 1138 0041 02       		.uleb128 0x2
 1139 0042 04       		.byte	0x4
 1140 0043 05       		.byte	0x5
 1141 0044 FF000000 		.4byte	.LASF4
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 57


 1142 0048 02       		.uleb128 0x2
 1143 0049 04       		.byte	0x4
 1144 004a 07       		.byte	0x7
 1145 004b F2010000 		.4byte	.LASF5
 1146 004f 02       		.uleb128 0x2
 1147 0050 08       		.byte	0x8
 1148 0051 05       		.byte	0x5
 1149 0052 BA000000 		.4byte	.LASF6
 1150 0056 02       		.uleb128 0x2
 1151 0057 08       		.byte	0x8
 1152 0058 07       		.byte	0x7
 1153 0059 40000000 		.4byte	.LASF7
 1154 005d 03       		.uleb128 0x3
 1155 005e 04       		.byte	0x4
 1156 005f 05       		.byte	0x5
 1157 0060 696E7400 		.ascii	"int\000"
 1158 0064 02       		.uleb128 0x2
 1159 0065 04       		.byte	0x4
 1160 0066 07       		.byte	0x7
 1161 0067 E5010000 		.4byte	.LASF8
 1162 006b 04       		.uleb128 0x4
 1163 006c 57010000 		.4byte	.LASF9
 1164 0070 02       		.byte	0x2
 1165 0071 E801     		.2byte	0x1e8
 1166 0073 2C000000 		.4byte	0x2c
 1167 0077 04       		.uleb128 0x4
 1168 0078 00000000 		.4byte	.LASF10
 1169 007c 02       		.byte	0x2
 1170 007d E901     		.2byte	0x1e9
 1171 007f 3A000000 		.4byte	0x3a
 1172 0083 04       		.uleb128 0x4
 1173 0084 79010000 		.4byte	.LASF11
 1174 0088 02       		.byte	0x2
 1175 0089 EA01     		.2byte	0x1ea
 1176 008b 48000000 		.4byte	0x48
 1177 008f 02       		.uleb128 0x2
 1178 0090 04       		.byte	0x4
 1179 0091 04       		.byte	0x4
 1180 0092 6C040000 		.4byte	.LASF12
 1181 0096 02       		.uleb128 0x2
 1182 0097 08       		.byte	0x8
 1183 0098 04       		.byte	0x4
 1184 0099 5D010000 		.4byte	.LASF13
 1185 009d 02       		.uleb128 0x2
 1186 009e 01       		.byte	0x1
 1187 009f 08       		.byte	0x8
 1188 00a0 BB050000 		.4byte	.LASF14
 1189 00a4 04       		.uleb128 0x4
 1190 00a5 96040000 		.4byte	.LASF15
 1191 00a9 02       		.byte	0x2
 1192 00aa 9202     		.2byte	0x292
 1193 00ac B0000000 		.4byte	0xb0
 1194 00b0 05       		.uleb128 0x5
 1195 00b1 6B000000 		.4byte	0x6b
 1196 00b5 04       		.uleb128 0x4
 1197 00b6 51010000 		.4byte	.LASF16
 1198 00ba 02       		.byte	0x2
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 58


 1199 00bb 9302     		.2byte	0x293
 1200 00bd C1000000 		.4byte	0xc1
 1201 00c1 05       		.uleb128 0x5
 1202 00c2 77000000 		.4byte	0x77
 1203 00c6 04       		.uleb128 0x4
 1204 00c7 28030000 		.4byte	.LASF17
 1205 00cb 02       		.byte	0x2
 1206 00cc 9402     		.2byte	0x294
 1207 00ce D2000000 		.4byte	0xd2
 1208 00d2 05       		.uleb128 0x5
 1209 00d3 83000000 		.4byte	0x83
 1210 00d7 02       		.uleb128 0x2
 1211 00d8 08       		.byte	0x8
 1212 00d9 04       		.byte	0x4
 1213 00da A0010000 		.4byte	.LASF18
 1214 00de 02       		.uleb128 0x2
 1215 00df 04       		.byte	0x4
 1216 00e0 07       		.byte	0x7
 1217 00e1 80030000 		.4byte	.LASF19
 1218 00e5 06       		.uleb128 0x6
 1219 00e6 34060000 		.4byte	.LASF26
 1220 00ea 01       		.byte	0x1
 1221 00eb 5A01     		.2byte	0x15a
 1222 00ed 00000000 		.4byte	.LFB1
 1223 00f1 68000000 		.4byte	.LFE1-.LFB1
 1224 00f5 01       		.uleb128 0x1
 1225 00f6 9C       		.byte	0x9c
 1226 00f7 40010000 		.4byte	0x140
 1227 00fb 07       		.uleb128 0x7
 1228 00fc 48060000 		.4byte	.LASF20
 1229 0100 01       		.byte	0x1
 1230 0101 5C01     		.2byte	0x15c
 1231 0103 6B000000 		.4byte	0x6b
 1232 0107 00000000 		.4byte	.LLST0
 1233 010b 08       		.uleb128 0x8
 1234 010c 06000000 		.4byte	.LVL0
 1235 0110 7F070000 		.4byte	0x77f
 1236 0114 08       		.uleb128 0x8
 1237 0115 16000000 		.4byte	.LVL2
 1238 0119 8A070000 		.4byte	0x78a
 1239 011d 08       		.uleb128 0x8
 1240 011e 1A000000 		.4byte	.LVL3
 1241 0122 95070000 		.4byte	0x795
 1242 0126 08       		.uleb128 0x8
 1243 0127 1E000000 		.4byte	.LVL4
 1244 012b A0070000 		.4byte	0x7a0
 1245 012f 09       		.uleb128 0x9
 1246 0130 46000000 		.4byte	.LVL5
 1247 0134 AB070000 		.4byte	0x7ab
 1248 0138 0A       		.uleb128 0xa
 1249 0139 01       		.uleb128 0x1
 1250 013a 50       		.byte	0x50
 1251 013b 02       		.uleb128 0x2
 1252 013c 74       		.byte	0x74
 1253 013d 00       		.sleb128 0
 1254 013e 00       		.byte	0
 1255 013f 00       		.byte	0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 59


 1256 0140 0B       		.uleb128 0xb
 1257 0141 73060000 		.4byte	.LASF22
 1258 0145 01       		.byte	0x1
 1259 0146 A202     		.2byte	0x2a2
 1260 0148 6B000000 		.4byte	0x6b
 1261 014c 00000000 		.4byte	.LFB4
 1262 0150 20000000 		.4byte	.LFE4-.LFB4
 1263 0154 01       		.uleb128 0x1
 1264 0155 9C       		.byte	0x9c
 1265 0156 89010000 		.4byte	0x189
 1266 015a 0C       		.uleb128 0xc
 1267 015b 1D000000 		.4byte	.LASF24
 1268 015f 01       		.byte	0x1
 1269 0160 A202     		.2byte	0x2a2
 1270 0162 6B000000 		.4byte	0x6b
 1271 0166 13000000 		.4byte	.LLST1
 1272 016a 0D       		.uleb128 0xd
 1273 016b 706F7300 		.ascii	"pos\000"
 1274 016f 01       		.byte	0x1
 1275 0170 A402     		.2byte	0x2a4
 1276 0172 6B000000 		.4byte	0x6b
 1277 0176 01       		.uleb128 0x1
 1278 0177 52       		.byte	0x52
 1279 0178 07       		.uleb128 0x7
 1280 0179 36040000 		.4byte	.LASF21
 1281 017d 01       		.byte	0x1
 1282 017e A502     		.2byte	0x2a5
 1283 0180 6B000000 		.4byte	0x6b
 1284 0184 3F000000 		.4byte	.LLST2
 1285 0188 00       		.byte	0
 1286 0189 0E       		.uleb128 0xe
 1287 018a 64050000 		.4byte	.LASF82
 1288 018e 01       		.byte	0x1
 1289 018f 2E04     		.2byte	0x42e
 1290 0191 6B000000 		.4byte	0x6b
 1291 0195 00000000 		.4byte	.LFB8
 1292 0199 10000000 		.4byte	.LFE8-.LFB8
 1293 019d 01       		.uleb128 0x1
 1294 019e 9C       		.byte	0x9c
 1295 019f 0B       		.uleb128 0xb
 1296 01a0 E1050000 		.4byte	.LASF23
 1297 01a4 01       		.byte	0x1
 1298 01a5 4704     		.2byte	0x447
 1299 01a7 77000000 		.4byte	0x77
 1300 01ab 00000000 		.4byte	.LFB9
 1301 01af 0C000000 		.4byte	.LFE9-.LFB9
 1302 01b3 01       		.uleb128 0x1
 1303 01b4 9C       		.byte	0x9c
 1304 01b5 CA010000 		.4byte	0x1ca
 1305 01b9 0C       		.uleb128 0xc
 1306 01ba A0020000 		.4byte	.LASF25
 1307 01be 01       		.byte	0x1
 1308 01bf 4704     		.2byte	0x447
 1309 01c1 6B000000 		.4byte	0x6b
 1310 01c5 52000000 		.4byte	.LLST3
 1311 01c9 00       		.byte	0
 1312 01ca 06       		.uleb128 0x6
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 60


 1313 01cb 66030000 		.4byte	.LASF27
 1314 01cf 01       		.byte	0x1
 1315 01d0 F204     		.2byte	0x4f2
 1316 01d2 00000000 		.4byte	.LFB11
 1317 01d6 34000000 		.4byte	.LFE11-.LFB11
 1318 01da 01       		.uleb128 0x1
 1319 01db 9C       		.byte	0x9c
 1320 01dc 1A020000 		.4byte	0x21a
 1321 01e0 0C       		.uleb128 0xc
 1322 01e1 A0020000 		.4byte	.LASF25
 1323 01e5 01       		.byte	0x1
 1324 01e6 F204     		.2byte	0x4f2
 1325 01e8 6B000000 		.4byte	0x6b
 1326 01ec 73000000 		.4byte	.LLST4
 1327 01f0 07       		.uleb128 0x7
 1328 01f1 CB010000 		.4byte	.LASF28
 1329 01f5 01       		.byte	0x1
 1330 01f6 F404     		.2byte	0x4f4
 1331 01f8 6B000000 		.4byte	0x6b
 1332 01fc 94000000 		.4byte	.LLST5
 1333 0200 07       		.uleb128 0x7
 1334 0201 AC010000 		.4byte	.LASF29
 1335 0205 01       		.byte	0x1
 1336 0206 F504     		.2byte	0x4f5
 1337 0208 6B000000 		.4byte	0x6b
 1338 020c A7000000 		.4byte	.LLST6
 1339 0210 08       		.uleb128 0x8
 1340 0211 2C000000 		.4byte	.LVL17
 1341 0215 B6070000 		.4byte	0x7b6
 1342 0219 00       		.byte	0
 1343 021a 06       		.uleb128 0x6
 1344 021b A7020000 		.4byte	.LASF30
 1345 021f 01       		.byte	0x1
 1346 0220 4705     		.2byte	0x547
 1347 0222 00000000 		.4byte	.LFB12
 1348 0226 38000000 		.4byte	.LFE12-.LFB12
 1349 022a 01       		.uleb128 0x1
 1350 022b 9C       		.byte	0x9c
 1351 022c 71020000 		.4byte	0x271
 1352 0230 0C       		.uleb128 0xc
 1353 0231 A0020000 		.4byte	.LASF25
 1354 0235 01       		.byte	0x1
 1355 0236 4705     		.2byte	0x547
 1356 0238 6B000000 		.4byte	0x6b
 1357 023c BA000000 		.4byte	.LLST7
 1358 0240 07       		.uleb128 0x7
 1359 0241 CB010000 		.4byte	.LASF28
 1360 0245 01       		.byte	0x1
 1361 0246 4905     		.2byte	0x549
 1362 0248 6B000000 		.4byte	0x6b
 1363 024c DB000000 		.4byte	.LLST8
 1364 0250 07       		.uleb128 0x7
 1365 0251 AC010000 		.4byte	.LASF29
 1366 0255 01       		.byte	0x1
 1367 0256 4A05     		.2byte	0x54a
 1368 0258 6B000000 		.4byte	0x6b
 1369 025c EE000000 		.4byte	.LLST9
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 61


 1370 0260 09       		.uleb128 0x9
 1371 0261 10000000 		.4byte	.LVL22
 1372 0265 C1070000 		.4byte	0x7c1
 1373 0269 0A       		.uleb128 0xa
 1374 026a 01       		.uleb128 0x1
 1375 026b 50       		.byte	0x50
 1376 026c 02       		.uleb128 0x2
 1377 026d 75       		.byte	0x75
 1378 026e 00       		.sleb128 0
 1379 026f 00       		.byte	0
 1380 0270 00       		.byte	0
 1381 0271 06       		.uleb128 0x6
 1382 0272 B1010000 		.4byte	.LASF31
 1383 0276 01       		.byte	0x1
 1384 0277 5C04     		.2byte	0x45c
 1385 0279 00000000 		.4byte	.LFB10
 1386 027d 16000000 		.4byte	.LFE10-.LFB10
 1387 0281 01       		.uleb128 0x1
 1388 0282 9C       		.byte	0x9c
 1389 0283 A6020000 		.4byte	0x2a6
 1390 0287 0F       		.uleb128 0xf
 1391 0288 6900     		.ascii	"i\000"
 1392 028a 01       		.byte	0x1
 1393 028b 5E04     		.2byte	0x45e
 1394 028d 6B000000 		.4byte	0x6b
 1395 0291 01010000 		.4byte	.LLST10
 1396 0295 09       		.uleb128 0x9
 1397 0296 0C000000 		.4byte	.LVL28
 1398 029a 1A020000 		.4byte	0x21a
 1399 029e 0A       		.uleb128 0xa
 1400 029f 01       		.uleb128 0x1
 1401 02a0 50       		.byte	0x50
 1402 02a1 02       		.uleb128 0x2
 1403 02a2 74       		.byte	0x74
 1404 02a3 00       		.sleb128 0
 1405 02a4 00       		.byte	0
 1406 02a5 00       		.byte	0
 1407 02a6 06       		.uleb128 0x6
 1408 02a7 A9050000 		.4byte	.LASF32
 1409 02ab 01       		.byte	0x1
 1410 02ac 1802     		.2byte	0x218
 1411 02ae 00000000 		.4byte	.LFB3
 1412 02b2 68000000 		.4byte	.LFE3-.LFB3
 1413 02b6 01       		.uleb128 0x1
 1414 02b7 9C       		.byte	0x9c
 1415 02b8 E1020000 		.4byte	0x2e1
 1416 02bc 08       		.uleb128 0x8
 1417 02bd 16000000 		.4byte	.LVL31
 1418 02c1 71020000 		.4byte	0x271
 1419 02c5 08       		.uleb128 0x8
 1420 02c6 24000000 		.4byte	.LVL32
 1421 02ca CC070000 		.4byte	0x7cc
 1422 02ce 08       		.uleb128 0x8
 1423 02cf 28000000 		.4byte	.LVL33
 1424 02d3 D7070000 		.4byte	0x7d7
 1425 02d7 08       		.uleb128 0x8
 1426 02d8 2C000000 		.4byte	.LVL34
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 62


 1427 02dc E2070000 		.4byte	0x7e2
 1428 02e0 00       		.byte	0
 1429 02e1 06       		.uleb128 0x6
 1430 02e2 C2020000 		.4byte	.LASF33
 1431 02e6 01       		.byte	0x1
 1432 02e7 4306     		.2byte	0x643
 1433 02e9 00000000 		.4byte	.LFB14
 1434 02ed 4C000000 		.4byte	.LFE14-.LFB14
 1435 02f1 01       		.uleb128 0x1
 1436 02f2 9C       		.byte	0x9c
 1437 02f3 20030000 		.4byte	0x320
 1438 02f7 0C       		.uleb128 0xc
 1439 02f8 A0020000 		.4byte	.LASF25
 1440 02fc 01       		.byte	0x1
 1441 02fd 4306     		.2byte	0x643
 1442 02ff 6B000000 		.4byte	0x6b
 1443 0303 2B010000 		.4byte	.LLST11
 1444 0307 08       		.uleb128 0x8
 1445 0308 28000000 		.4byte	.LVL36
 1446 030c 1A020000 		.4byte	0x21a
 1447 0310 09       		.uleb128 0x9
 1448 0311 2E000000 		.4byte	.LVL37
 1449 0315 ED070000 		.4byte	0x7ed
 1450 0319 0A       		.uleb128 0xa
 1451 031a 01       		.uleb128 0x1
 1452 031b 50       		.byte	0x50
 1453 031c 01       		.uleb128 0x1
 1454 031d 30       		.byte	0x30
 1455 031e 00       		.byte	0
 1456 031f 00       		.byte	0
 1457 0320 06       		.uleb128 0x6
 1458 0321 26000000 		.4byte	.LASF34
 1459 0325 01       		.byte	0x1
 1460 0326 5107     		.2byte	0x751
 1461 0328 00000000 		.4byte	.LFB15
 1462 032c 10000000 		.4byte	.LFE15-.LFB15
 1463 0330 01       		.uleb128 0x1
 1464 0331 9C       		.byte	0x9c
 1465 0332 47030000 		.4byte	0x347
 1466 0336 0C       		.uleb128 0xc
 1467 0337 72040000 		.4byte	.LASF35
 1468 033b 01       		.byte	0x1
 1469 033c 5107     		.2byte	0x751
 1470 033e 6B000000 		.4byte	0x6b
 1471 0342 4C010000 		.4byte	.LLST12
 1472 0346 00       		.byte	0
 1473 0347 06       		.uleb128 0x6
 1474 0348 C0050000 		.4byte	.LASF36
 1475 034c 01       		.byte	0x1
 1476 034d 3C03     		.2byte	0x33c
 1477 034f 00000000 		.4byte	.LFB5
 1478 0353 38000000 		.4byte	.LFE5-.LFB5
 1479 0357 01       		.uleb128 0x1
 1480 0358 9C       		.byte	0x9c
 1481 0359 A2030000 		.4byte	0x3a2
 1482 035d 0C       		.uleb128 0xc
 1483 035e D8020000 		.4byte	.LASF37
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 63


 1484 0362 01       		.byte	0x1
 1485 0363 3C03     		.2byte	0x33c
 1486 0365 6B000000 		.4byte	0x6b
 1487 0369 88010000 		.4byte	.LLST13
 1488 036d 07       		.uleb128 0x7
 1489 036e B3040000 		.4byte	.LASF38
 1490 0372 01       		.byte	0x1
 1491 0373 3E03     		.2byte	0x33e
 1492 0375 6B000000 		.4byte	0x6b
 1493 0379 A9010000 		.4byte	.LLST14
 1494 037d 10       		.uleb128 0x10
 1495 037e 14000000 		.4byte	.LVL45
 1496 0382 ED070000 		.4byte	0x7ed
 1497 0386 98030000 		.4byte	0x398
 1498 038a 0A       		.uleb128 0xa
 1499 038b 01       		.uleb128 0x1
 1500 038c 50       		.byte	0x50
 1501 038d 09       		.uleb128 0x9
 1502 038e 76       		.byte	0x76
 1503 038f 00       		.sleb128 0
 1504 0390 74       		.byte	0x74
 1505 0391 00       		.sleb128 0
 1506 0392 22       		.byte	0x22
 1507 0393 23       		.byte	0x23
 1508 0394 54       		.uleb128 0x54
 1509 0395 94       		.byte	0x94
 1510 0396 01       		.byte	0x1
 1511 0397 00       		.byte	0
 1512 0398 08       		.uleb128 0x8
 1513 0399 28000000 		.4byte	.LVL47
 1514 039d 20030000 		.4byte	0x320
 1515 03a1 00       		.byte	0
 1516 03a2 06       		.uleb128 0x6
 1517 03a3 D0010000 		.4byte	.LASF39
 1518 03a7 01       		.byte	0x1
 1519 03a8 9B05     		.2byte	0x59b
 1520 03aa 00000000 		.4byte	.LFB13
 1521 03ae 34000000 		.4byte	.LFE13-.LFB13
 1522 03b2 01       		.uleb128 0x1
 1523 03b3 9C       		.byte	0x9c
 1524 03b4 ED030000 		.4byte	0x3ed
 1525 03b8 0C       		.uleb128 0xc
 1526 03b9 A0020000 		.4byte	.LASF25
 1527 03bd 01       		.byte	0x1
 1528 03be 9B05     		.2byte	0x59b
 1529 03c0 6B000000 		.4byte	0x6b
 1530 03c4 CF010000 		.4byte	.LLST15
 1531 03c8 10       		.uleb128 0x10
 1532 03c9 08000000 		.4byte	.LVL50
 1533 03cd 47030000 		.4byte	0x347
 1534 03d1 DC030000 		.4byte	0x3dc
 1535 03d5 0A       		.uleb128 0xa
 1536 03d6 01       		.uleb128 0x1
 1537 03d7 50       		.byte	0x50
 1538 03d8 02       		.uleb128 0x2
 1539 03d9 75       		.byte	0x75
 1540 03da 00       		.sleb128 0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 64


 1541 03db 00       		.byte	0
 1542 03dc 09       		.uleb128 0x9
 1543 03dd 22000000 		.4byte	.LVL51
 1544 03e1 CA010000 		.4byte	0x1ca
 1545 03e5 0A       		.uleb128 0xa
 1546 03e6 01       		.uleb128 0x1
 1547 03e7 50       		.byte	0x50
 1548 03e8 02       		.uleb128 0x2
 1549 03e9 75       		.byte	0x75
 1550 03ea 00       		.sleb128 0
 1551 03eb 00       		.byte	0
 1552 03ec 00       		.byte	0
 1553 03ed 06       		.uleb128 0x6
 1554 03ee F2020000 		.4byte	.LASF40
 1555 03f2 01       		.byte	0x1
 1556 03f3 AC03     		.2byte	0x3ac
 1557 03f5 00000000 		.4byte	.LFB6
 1558 03f9 20000000 		.4byte	.LFE6-.LFB6
 1559 03fd 01       		.uleb128 0x1
 1560 03fe 9C       		.byte	0x9c
 1561 03ff 1D040000 		.4byte	0x41d
 1562 0403 0C       		.uleb128 0xc
 1563 0404 A0020000 		.4byte	.LASF25
 1564 0408 01       		.byte	0x1
 1565 0409 AC03     		.2byte	0x3ac
 1566 040b 6B000000 		.4byte	0x6b
 1567 040f F0010000 		.4byte	.LLST16
 1568 0413 08       		.uleb128 0x8
 1569 0414 14000000 		.4byte	.LVL53
 1570 0418 A2030000 		.4byte	0x3a2
 1571 041c 00       		.byte	0
 1572 041d 06       		.uleb128 0x6
 1573 041e 80010000 		.4byte	.LASF41
 1574 0422 01       		.byte	0x1
 1575 0423 F903     		.2byte	0x3f9
 1576 0425 00000000 		.4byte	.LFB7
 1577 0429 38000000 		.4byte	.LFE7-.LFB7
 1578 042d 01       		.uleb128 0x1
 1579 042e 9C       		.byte	0x9c
 1580 042f 46040000 		.4byte	0x446
 1581 0433 08       		.uleb128 0x8
 1582 0434 14000000 		.4byte	.LVL54
 1583 0438 40010000 		.4byte	0x140
 1584 043c 08       		.uleb128 0x8
 1585 043d 2E000000 		.4byte	.LVL55
 1586 0441 A2030000 		.4byte	0x3a2
 1587 0445 00       		.byte	0
 1588 0446 0B       		.uleb128 0xb
 1589 0447 7C040000 		.4byte	.LASF42
 1590 044b 01       		.byte	0x1
 1591 044c 6E07     		.2byte	0x76e
 1592 044e 6B000000 		.4byte	0x6b
 1593 0452 00000000 		.4byte	.LFB16
 1594 0456 0C000000 		.4byte	.LFE16-.LFB16
 1595 045a 01       		.uleb128 0x1
 1596 045b 9C       		.byte	0x9c
 1597 045c 71040000 		.4byte	0x471
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 65


 1598 0460 07       		.uleb128 0x7
 1599 0461 72040000 		.4byte	.LASF35
 1600 0465 01       		.byte	0x1
 1601 0466 7007     		.2byte	0x770
 1602 0468 6B000000 		.4byte	0x6b
 1603 046c 11020000 		.4byte	.LLST17
 1604 0470 00       		.byte	0
 1605 0471 06       		.uleb128 0x6
 1606 0472 8F050000 		.4byte	.LASF43
 1607 0476 01       		.byte	0x1
 1608 0477 9007     		.2byte	0x790
 1609 0479 00000000 		.4byte	.LFB17
 1610 047d 0C000000 		.4byte	.LFE17-.LFB17
 1611 0481 01       		.uleb128 0x1
 1612 0482 9C       		.byte	0x9c
 1613 0483 96040000 		.4byte	0x496
 1614 0487 11       		.uleb128 0x11
 1615 0488 12040000 		.4byte	.LASF44
 1616 048c 01       		.byte	0x1
 1617 048d 9007     		.2byte	0x790
 1618 048f 6B000000 		.4byte	0x6b
 1619 0493 01       		.uleb128 0x1
 1620 0494 50       		.byte	0x50
 1621 0495 00       		.byte	0
 1622 0496 06       		.uleb128 0x6
 1623 0497 DF060000 		.4byte	.LASF45
 1624 049b 01       		.byte	0x1
 1625 049c AB07     		.2byte	0x7ab
 1626 049e 00000000 		.4byte	.LFB18
 1627 04a2 20000000 		.4byte	.LFE18-.LFB18
 1628 04a6 01       		.uleb128 0x1
 1629 04a7 9C       		.byte	0x9c
 1630 04a8 BB040000 		.4byte	0x4bb
 1631 04ac 12       		.uleb128 0x12
 1632 04ad 73726300 		.ascii	"src\000"
 1633 04b1 01       		.byte	0x1
 1634 04b2 AB07     		.2byte	0x7ab
 1635 04b4 6B000000 		.4byte	0x6b
 1636 04b8 01       		.uleb128 0x1
 1637 04b9 50       		.byte	0x50
 1638 04ba 00       		.byte	0
 1639 04bb 13       		.uleb128 0x13
 1640 04bc ED000000 		.4byte	.LASF46
 1641 04c0 01       		.byte	0x1
 1642 04c1 79       		.byte	0x79
 1643 04c2 00000000 		.4byte	.LFB0
 1644 04c6 E4000000 		.4byte	.LFE0-.LFB0
 1645 04ca 01       		.uleb128 0x1
 1646 04cb 9C       		.byte	0x9c
 1647 04cc D6050000 		.4byte	0x5d6
 1648 04d0 14       		.uleb128 0x14
 1649 04d1 48060000 		.4byte	.LASF20
 1650 04d5 01       		.byte	0x1
 1651 04d6 80       		.byte	0x80
 1652 04d7 6B000000 		.4byte	0x6b
 1653 04db 30020000 		.4byte	.LLST18
 1654 04df 08       		.uleb128 0x8
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 66


 1655 04e0 06000000 		.4byte	.LVL60
 1656 04e4 71020000 		.4byte	0x271
 1657 04e8 10       		.uleb128 0x10
 1658 04e9 0C000000 		.4byte	.LVL61
 1659 04ed 96040000 		.4byte	0x496
 1660 04f1 FB040000 		.4byte	0x4fb
 1661 04f5 0A       		.uleb128 0xa
 1662 04f6 01       		.uleb128 0x1
 1663 04f7 50       		.byte	0x50
 1664 04f8 01       		.uleb128 0x1
 1665 04f9 32       		.byte	0x32
 1666 04fa 00       		.byte	0
 1667 04fb 08       		.uleb128 0x8
 1668 04fc 10000000 		.4byte	.LVL62
 1669 0500 7F070000 		.4byte	0x77f
 1670 0504 08       		.uleb128 0x8
 1671 0505 28000000 		.4byte	.LVL63
 1672 0509 AB070000 		.4byte	0x7ab
 1673 050d 08       		.uleb128 0x8
 1674 050e 42000000 		.4byte	.LVL64
 1675 0512 7F070000 		.4byte	0x77f
 1676 0516 08       		.uleb128 0x8
 1677 0517 5A000000 		.4byte	.LVL65
 1678 051b AB070000 		.4byte	0x7ab
 1679 051f 10       		.uleb128 0x10
 1680 0520 86000000 		.4byte	.LVL66
 1681 0524 F8070000 		.4byte	0x7f8
 1682 0528 32050000 		.4byte	0x532
 1683 052c 0A       		.uleb128 0xa
 1684 052d 01       		.uleb128 0x1
 1685 052e 50       		.byte	0x50
 1686 052f 01       		.uleb128 0x1
 1687 0530 30       		.byte	0x30
 1688 0531 00       		.byte	0
 1689 0532 10       		.uleb128 0x10
 1690 0533 8E000000 		.4byte	.LVL67
 1691 0537 03080000 		.4byte	0x803
 1692 053b 4B050000 		.4byte	0x54b
 1693 053f 0A       		.uleb128 0xa
 1694 0540 01       		.uleb128 0x1
 1695 0541 50       		.byte	0x50
 1696 0542 01       		.uleb128 0x1
 1697 0543 30       		.byte	0x30
 1698 0544 0A       		.uleb128 0xa
 1699 0545 01       		.uleb128 0x1
 1700 0546 51       		.byte	0x51
 1701 0547 02       		.uleb128 0x2
 1702 0548 74       		.byte	0x74
 1703 0549 00       		.sleb128 0
 1704 054a 00       		.byte	0
 1705 054b 08       		.uleb128 0x8
 1706 054c 92000000 		.4byte	.LVL68
 1707 0550 0E080000 		.4byte	0x80e
 1708 0554 10       		.uleb128 0x10
 1709 0555 98000000 		.4byte	.LVL69
 1710 0559 B6070000 		.4byte	0x7b6
 1711 055d 68050000 		.4byte	0x568
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 67


 1712 0561 0A       		.uleb128 0xa
 1713 0562 01       		.uleb128 0x1
 1714 0563 50       		.byte	0x50
 1715 0564 02       		.uleb128 0x2
 1716 0565 74       		.byte	0x74
 1717 0566 00       		.sleb128 0
 1718 0567 00       		.byte	0
 1719 0568 10       		.uleb128 0x10
 1720 0569 9E000000 		.4byte	.LVL70
 1721 056d B6070000 		.4byte	0x7b6
 1722 0571 7B050000 		.4byte	0x57b
 1723 0575 0A       		.uleb128 0xa
 1724 0576 01       		.uleb128 0x1
 1725 0577 50       		.byte	0x50
 1726 0578 01       		.uleb128 0x1
 1727 0579 38       		.byte	0x38
 1728 057a 00       		.byte	0
 1729 057b 10       		.uleb128 0x10
 1730 057c A4000000 		.4byte	.LVL71
 1731 0580 B6070000 		.4byte	0x7b6
 1732 0584 8E050000 		.4byte	0x58e
 1733 0588 0A       		.uleb128 0xa
 1734 0589 01       		.uleb128 0x1
 1735 058a 50       		.byte	0x50
 1736 058b 01       		.uleb128 0x1
 1737 058c 39       		.byte	0x39
 1738 058d 00       		.byte	0
 1739 058e 08       		.uleb128 0x8
 1740 058f B2000000 		.4byte	.LVL72
 1741 0593 19080000 		.4byte	0x819
 1742 0597 08       		.uleb128 0x8
 1743 0598 B6000000 		.4byte	.LVL73
 1744 059c 24080000 		.4byte	0x824
 1745 05a0 10       		.uleb128 0x10
 1746 05a1 BC000000 		.4byte	.LVL74
 1747 05a5 2F080000 		.4byte	0x82f
 1748 05a9 B3050000 		.4byte	0x5b3
 1749 05ad 0A       		.uleb128 0xa
 1750 05ae 01       		.uleb128 0x1
 1751 05af 50       		.byte	0x50
 1752 05b0 01       		.uleb128 0x1
 1753 05b1 30       		.byte	0x30
 1754 05b2 00       		.byte	0
 1755 05b3 10       		.uleb128 0x10
 1756 05b4 C2000000 		.4byte	.LVL75
 1757 05b8 3A080000 		.4byte	0x83a
 1758 05bc C6050000 		.4byte	0x5c6
 1759 05c0 0A       		.uleb128 0xa
 1760 05c1 01       		.uleb128 0x1
 1761 05c2 50       		.byte	0x50
 1762 05c3 01       		.uleb128 0x1
 1763 05c4 34       		.byte	0x34
 1764 05c5 00       		.byte	0
 1765 05c6 09       		.uleb128 0x9
 1766 05c7 C8000000 		.4byte	.LVL76
 1767 05cb ED070000 		.4byte	0x7ed
 1768 05cf 0A       		.uleb128 0xa
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 68


 1769 05d0 01       		.uleb128 0x1
 1770 05d1 50       		.byte	0x50
 1771 05d2 01       		.uleb128 0x1
 1772 05d3 30       		.byte	0x30
 1773 05d4 00       		.byte	0
 1774 05d5 00       		.byte	0
 1775 05d6 06       		.uleb128 0x6
 1776 05d7 DE030000 		.4byte	.LASF47
 1777 05db 01       		.byte	0x1
 1778 05dc F301     		.2byte	0x1f3
 1779 05de 00000000 		.4byte	.LFB2
 1780 05e2 1C000000 		.4byte	.LFE2-.LFB2
 1781 05e6 01       		.uleb128 0x1
 1782 05e7 9C       		.byte	0x9c
 1783 05e8 FF050000 		.4byte	0x5ff
 1784 05ec 08       		.uleb128 0x8
 1785 05ed 0C000000 		.4byte	.LVL77
 1786 05f1 BB040000 		.4byte	0x4bb
 1787 05f5 08       		.uleb128 0x8
 1788 05f6 16000000 		.4byte	.LVL78
 1789 05fa E5000000 		.4byte	0xe5
 1790 05fe 00       		.byte	0
 1791 05ff 15       		.uleb128 0x15
 1792 0600 64010000 		.4byte	.LASF48
 1793 0604 01       		.byte	0x1
 1794 0605 16       		.byte	0x16
 1795 0606 6B000000 		.4byte	0x6b
 1796 060a 05       		.uleb128 0x5
 1797 060b 03       		.byte	0x3
 1798 060c 00000000 		.4byte	CapSense_CSD_initVar
 1799 0610 16       		.uleb128 0x16
 1800 0611 04070000 		.4byte	.LASF49
 1801 0615 01       		.byte	0x1
 1802 0616 19       		.byte	0x19
 1803 0617 B0000000 		.4byte	0xb0
 1804 061b 05       		.uleb128 0x5
 1805 061c 03       		.byte	0x3
 1806 061d 00000000 		.4byte	CapSense_CSD_csv
 1807 0621 16       		.uleb128 0x16
 1808 0622 D4000000 		.4byte	.LASF50
 1809 0626 01       		.byte	0x1
 1810 0627 1A       		.byte	0x1a
 1811 0628 B0000000 		.4byte	0xb0
 1812 062c 05       		.uleb128 0x5
 1813 062d 03       		.byte	0x3
 1814 062e 00000000 		.4byte	CapSense_CSD_sensorIndex
 1815 0632 17       		.uleb128 0x17
 1816 0633 77000000 		.4byte	0x77
 1817 0637 42060000 		.4byte	0x642
 1818 063b 18       		.uleb128 0x18
 1819 063c DE000000 		.4byte	0xde
 1820 0640 06       		.byte	0x6
 1821 0641 00       		.byte	0
 1822 0642 16       		.uleb128 0x16
 1823 0643 78050000 		.4byte	.LASF51
 1824 0647 01       		.byte	0x1
 1825 0648 29       		.byte	0x29
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 69


 1826 0649 32060000 		.4byte	0x632
 1827 064d 05       		.uleb128 0x5
 1828 064e 03       		.byte	0x3
 1829 064f 00000000 		.4byte	CapSense_CSD_sensorRaw
 1830 0653 17       		.uleb128 0x17
 1831 0654 6B000000 		.4byte	0x6b
 1832 0658 63060000 		.4byte	0x663
 1833 065c 18       		.uleb128 0x18
 1834 065d DE000000 		.4byte	0xde
 1835 0661 00       		.byte	0
 1836 0662 00       		.byte	0
 1837 0663 16       		.uleb128 0x16
 1838 0664 3D040000 		.4byte	.LASF52
 1839 0668 01       		.byte	0x1
 1840 0669 2B       		.byte	0x2b
 1841 066a 53060000 		.4byte	0x653
 1842 066e 05       		.uleb128 0x5
 1843 066f 03       		.byte	0x3
 1844 0670 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 1845 0674 17       		.uleb128 0x17
 1846 0675 8A060000 		.4byte	0x68a
 1847 0679 84060000 		.4byte	0x684
 1848 067d 18       		.uleb128 0x18
 1849 067e DE000000 		.4byte	0xde
 1850 0682 06       		.byte	0x6
 1851 0683 00       		.byte	0
 1852 0684 19       		.uleb128 0x19
 1853 0685 04       		.byte	0x4
 1854 0686 6B000000 		.4byte	0x6b
 1855 068a 1A       		.uleb128 0x1a
 1856 068b 84060000 		.4byte	0x684
 1857 068f 16       		.uleb128 0x16
 1858 0690 DD020000 		.4byte	.LASF53
 1859 0694 01       		.byte	0x1
 1860 0695 2E       		.byte	0x2e
 1861 0696 A0060000 		.4byte	0x6a0
 1862 069a 05       		.uleb128 0x5
 1863 069b 03       		.byte	0x3
 1864 069c 00000000 		.4byte	CapSense_CSD_pcTable
 1865 06a0 1A       		.uleb128 0x1a
 1866 06a1 74060000 		.4byte	0x674
 1867 06a5 17       		.uleb128 0x17
 1868 06a6 B5060000 		.4byte	0x6b5
 1869 06aa B5060000 		.4byte	0x6b5
 1870 06ae 18       		.uleb128 0x18
 1871 06af DE000000 		.4byte	0xde
 1872 06b3 06       		.byte	0x6
 1873 06b4 00       		.byte	0
 1874 06b5 1A       		.uleb128 0x1a
 1875 06b6 6B000000 		.4byte	0x6b
 1876 06ba 16       		.uleb128 0x16
 1877 06bb A3000000 		.4byte	.LASF54
 1878 06bf 01       		.byte	0x1
 1879 06c0 38       		.byte	0x38
 1880 06c1 CB060000 		.4byte	0x6cb
 1881 06c5 05       		.uleb128 0x5
 1882 06c6 03       		.byte	0x3
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 70


 1883 06c7 00000000 		.4byte	CapSense_CSD_portTable
 1884 06cb 1A       		.uleb128 0x1a
 1885 06cc A5060000 		.4byte	0x6a5
 1886 06d0 16       		.uleb128 0x16
 1887 06d1 72000000 		.4byte	.LASF55
 1888 06d5 01       		.byte	0x1
 1889 06d6 42       		.byte	0x42
 1890 06d7 E1060000 		.4byte	0x6e1
 1891 06db 05       		.uleb128 0x5
 1892 06dc 03       		.byte	0x3
 1893 06dd 00000000 		.4byte	CapSense_CSD_maskTable
 1894 06e1 1A       		.uleb128 0x1a
 1895 06e2 A5060000 		.4byte	0x6a5
 1896 06e6 17       		.uleb128 0x17
 1897 06e7 8A060000 		.4byte	0x68a
 1898 06eb F6060000 		.4byte	0x6f6
 1899 06ef 18       		.uleb128 0x18
 1900 06f0 DE000000 		.4byte	0xde
 1901 06f4 07       		.byte	0x7
 1902 06f5 00       		.byte	0
 1903 06f6 16       		.uleb128 0x16
 1904 06f7 3C010000 		.4byte	.LASF56
 1905 06fb 01       		.byte	0x1
 1906 06fc 4C       		.byte	0x4c
 1907 06fd 07070000 		.4byte	0x707
 1908 0701 05       		.uleb128 0x5
 1909 0702 03       		.byte	0x3
 1910 0703 00000000 		.4byte	CapSense_CSD_csTable
 1911 0707 1A       		.uleb128 0x1a
 1912 0708 E6060000 		.4byte	0x6e6
 1913 070c 16       		.uleb128 0x16
 1914 070d 1A060000 		.4byte	.LASF57
 1915 0711 01       		.byte	0x1
 1916 0712 52       		.byte	0x52
 1917 0713 1D070000 		.4byte	0x71d
 1918 0717 05       		.uleb128 0x5
 1919 0718 03       		.byte	0x3
 1920 0719 00000000 		.4byte	CapSense_CSD_idacSettings
 1921 071d 1A       		.uleb128 0x1a
 1922 071e A5060000 		.4byte	0x6a5
 1923 0722 17       		.uleb128 0x17
 1924 0723 B5060000 		.4byte	0x6b5
 1925 0727 32070000 		.4byte	0x732
 1926 072b 18       		.uleb128 0x18
 1927 072c DE000000 		.4byte	0xde
 1928 0730 02       		.byte	0x2
 1929 0731 00       		.byte	0
 1930 0732 16       		.uleb128 0x16
 1931 0733 FC050000 		.4byte	.LASF58
 1932 0737 01       		.byte	0x1
 1933 0738 56       		.byte	0x56
 1934 0739 43070000 		.4byte	0x743
 1935 073d 05       		.uleb128 0x5
 1936 073e 03       		.byte	0x3
 1937 073f 00000000 		.4byte	CapSense_CSD_widgetResolution
 1938 0743 1A       		.uleb128 0x1a
 1939 0744 22070000 		.4byte	0x722
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 71


 1940 0748 17       		.uleb128 0x17
 1941 0749 6B000000 		.4byte	0x6b
 1942 074d 58070000 		.4byte	0x758
 1943 0751 18       		.uleb128 0x18
 1944 0752 DE000000 		.4byte	0xde
 1945 0756 06       		.byte	0x6
 1946 0757 00       		.byte	0
 1947 0758 16       		.uleb128 0x16
 1948 0759 2A020000 		.4byte	.LASF59
 1949 075d 01       		.byte	0x1
 1950 075e 5C       		.byte	0x5c
 1951 075f 48070000 		.4byte	0x748
 1952 0763 05       		.uleb128 0x5
 1953 0764 03       		.byte	0x3
 1954 0765 00000000 		.4byte	CapSense_CSD_analogSwitchDivider
 1955 0769 16       		.uleb128 0x16
 1956 076a 22010000 		.4byte	.LASF60
 1957 076e 01       		.byte	0x1
 1958 076f 60       		.byte	0x60
 1959 0770 7A070000 		.4byte	0x77a
 1960 0774 05       		.uleb128 0x5
 1961 0775 03       		.byte	0x3
 1962 0776 00000000 		.4byte	CapSense_CSD_widgetNumber
 1963 077a 1A       		.uleb128 0x1a
 1964 077b A5060000 		.4byte	0x6a5
 1965 077f 1B       		.uleb128 0x1b
 1966 0780 67020000 		.4byte	.LASF61
 1967 0784 67020000 		.4byte	.LASF61
 1968 0788 03       		.byte	0x3
 1969 0789 7D       		.byte	0x7d
 1970 078a 1B       		.uleb128 0x1b
 1971 078b A8060000 		.4byte	.LASF62
 1972 078f A8060000 		.4byte	.LASF62
 1973 0793 04       		.byte	0x4
 1974 0794 27       		.byte	0x27
 1975 0795 1B       		.uleb128 0x1b
 1976 0796 4B020000 		.4byte	.LASF63
 1977 079a 4B020000 		.4byte	.LASF63
 1978 079e 05       		.byte	0x5
 1979 079f 46       		.byte	0x46
 1980 07a0 1B       		.uleb128 0x1b
 1981 07a1 BA040000 		.4byte	.LASF64
 1982 07a5 BA040000 		.4byte	.LASF64
 1983 07a9 06       		.byte	0x6
 1984 07aa 46       		.byte	0x46
 1985 07ab 1B       		.uleb128 0x1b
 1986 07ac 07000000 		.4byte	.LASF65
 1987 07b0 07000000 		.4byte	.LASF65
 1988 07b4 03       		.byte	0x3
 1989 07b5 7E       		.byte	0x7e
 1990 07b6 1B       		.uleb128 0x1b
 1991 07b7 8F060000 		.4byte	.LASF66
 1992 07bb 8F060000 		.4byte	.LASF66
 1993 07bf 07       		.byte	0x7
 1994 07c0 1A       		.byte	0x1a
 1995 07c1 1B       		.uleb128 0x1b
 1996 07c2 57000000 		.4byte	.LASF67
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 72


 1997 07c6 57000000 		.4byte	.LASF67
 1998 07ca 07       		.byte	0x7
 1999 07cb 1B       		.byte	0x1b
 2000 07cc 1B       		.uleb128 0x1b
 2001 07cd C4060000 		.4byte	.LASF68
 2002 07d1 C4060000 		.4byte	.LASF68
 2003 07d5 04       		.byte	0x4
 2004 07d6 28       		.byte	0x28
 2005 07d7 1B       		.uleb128 0x1b
 2006 07d8 89000000 		.4byte	.LASF69
 2007 07dc 89000000 		.4byte	.LASF69
 2008 07e0 05       		.byte	0x5
 2009 07e1 40       		.byte	0x40
 2010 07e2 1B       		.uleb128 0x1b
 2011 07e3 08010000 		.4byte	.LASF70
 2012 07e7 08010000 		.4byte	.LASF70
 2013 07eb 06       		.byte	0x6
 2014 07ec 3D       		.byte	0x3d
 2015 07ed 1B       		.uleb128 0x1b
 2016 07ee 0A030000 		.4byte	.LASF71
 2017 07f2 0A030000 		.4byte	.LASF71
 2018 07f6 06       		.byte	0x6
 2019 07f7 41       		.byte	0x41
 2020 07f8 1B       		.uleb128 0x1b
 2021 07f9 91020000 		.4byte	.LASF72
 2022 07fd 91020000 		.4byte	.LASF72
 2023 0801 03       		.byte	0x3
 2024 0802 88       		.byte	0x88
 2025 0803 1B       		.uleb128 0x1b
 2026 0804 5B040000 		.4byte	.LASF73
 2027 0808 5B040000 		.4byte	.LASF73
 2028 080c 03       		.byte	0x3
 2029 080d 8B       		.byte	0x8b
 2030 080e 1B       		.uleb128 0x1b
 2031 080f 4C030000 		.4byte	.LASF74
 2032 0813 4C030000 		.4byte	.LASF74
 2033 0817 08       		.byte	0x8
 2034 0818 1F       		.byte	0x1f
 2035 0819 1B       		.uleb128 0x1b
 2036 081a 1C040000 		.4byte	.LASF75
 2037 081e 1C040000 		.4byte	.LASF75
 2038 0822 05       		.byte	0x5
 2039 0823 45       		.byte	0x45
 2040 0824 1B       		.uleb128 0x1b
 2041 0825 59060000 		.4byte	.LASF76
 2042 0829 59060000 		.4byte	.LASF76
 2043 082d 06       		.byte	0x6
 2044 082e 45       		.byte	0x45
 2045 082f 1B       		.uleb128 0x1b
 2046 0830 F1030000 		.4byte	.LASF77
 2047 0834 F1030000 		.4byte	.LASF77
 2048 0838 06       		.byte	0x6
 2049 0839 3F       		.byte	0x3f
 2050 083a 1B       		.uleb128 0x1b
 2051 083b 2E030000 		.4byte	.LASF78
 2052 083f 2E030000 		.4byte	.LASF78
 2053 0843 06       		.byte	0x6
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 73


 2054 0844 40       		.byte	0x40
 2055 0845 00       		.byte	0
 2056              		.section	.debug_abbrev,"",%progbits
 2057              	.Ldebug_abbrev0:
 2058 0000 01       		.uleb128 0x1
 2059 0001 11       		.uleb128 0x11
 2060 0002 01       		.byte	0x1
 2061 0003 25       		.uleb128 0x25
 2062 0004 0E       		.uleb128 0xe
 2063 0005 13       		.uleb128 0x13
 2064 0006 0B       		.uleb128 0xb
 2065 0007 03       		.uleb128 0x3
 2066 0008 0E       		.uleb128 0xe
 2067 0009 1B       		.uleb128 0x1b
 2068 000a 0E       		.uleb128 0xe
 2069 000b 55       		.uleb128 0x55
 2070 000c 17       		.uleb128 0x17
 2071 000d 11       		.uleb128 0x11
 2072 000e 01       		.uleb128 0x1
 2073 000f 10       		.uleb128 0x10
 2074 0010 17       		.uleb128 0x17
 2075 0011 00       		.byte	0
 2076 0012 00       		.byte	0
 2077 0013 02       		.uleb128 0x2
 2078 0014 24       		.uleb128 0x24
 2079 0015 00       		.byte	0
 2080 0016 0B       		.uleb128 0xb
 2081 0017 0B       		.uleb128 0xb
 2082 0018 3E       		.uleb128 0x3e
 2083 0019 0B       		.uleb128 0xb
 2084 001a 03       		.uleb128 0x3
 2085 001b 0E       		.uleb128 0xe
 2086 001c 00       		.byte	0
 2087 001d 00       		.byte	0
 2088 001e 03       		.uleb128 0x3
 2089 001f 24       		.uleb128 0x24
 2090 0020 00       		.byte	0
 2091 0021 0B       		.uleb128 0xb
 2092 0022 0B       		.uleb128 0xb
 2093 0023 3E       		.uleb128 0x3e
 2094 0024 0B       		.uleb128 0xb
 2095 0025 03       		.uleb128 0x3
 2096 0026 08       		.uleb128 0x8
 2097 0027 00       		.byte	0
 2098 0028 00       		.byte	0
 2099 0029 04       		.uleb128 0x4
 2100 002a 16       		.uleb128 0x16
 2101 002b 00       		.byte	0
 2102 002c 03       		.uleb128 0x3
 2103 002d 0E       		.uleb128 0xe
 2104 002e 3A       		.uleb128 0x3a
 2105 002f 0B       		.uleb128 0xb
 2106 0030 3B       		.uleb128 0x3b
 2107 0031 05       		.uleb128 0x5
 2108 0032 49       		.uleb128 0x49
 2109 0033 13       		.uleb128 0x13
 2110 0034 00       		.byte	0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 74


 2111 0035 00       		.byte	0
 2112 0036 05       		.uleb128 0x5
 2113 0037 35       		.uleb128 0x35
 2114 0038 00       		.byte	0
 2115 0039 49       		.uleb128 0x49
 2116 003a 13       		.uleb128 0x13
 2117 003b 00       		.byte	0
 2118 003c 00       		.byte	0
 2119 003d 06       		.uleb128 0x6
 2120 003e 2E       		.uleb128 0x2e
 2121 003f 01       		.byte	0x1
 2122 0040 3F       		.uleb128 0x3f
 2123 0041 19       		.uleb128 0x19
 2124 0042 03       		.uleb128 0x3
 2125 0043 0E       		.uleb128 0xe
 2126 0044 3A       		.uleb128 0x3a
 2127 0045 0B       		.uleb128 0xb
 2128 0046 3B       		.uleb128 0x3b
 2129 0047 05       		.uleb128 0x5
 2130 0048 27       		.uleb128 0x27
 2131 0049 19       		.uleb128 0x19
 2132 004a 11       		.uleb128 0x11
 2133 004b 01       		.uleb128 0x1
 2134 004c 12       		.uleb128 0x12
 2135 004d 06       		.uleb128 0x6
 2136 004e 40       		.uleb128 0x40
 2137 004f 18       		.uleb128 0x18
 2138 0050 9742     		.uleb128 0x2117
 2139 0052 19       		.uleb128 0x19
 2140 0053 01       		.uleb128 0x1
 2141 0054 13       		.uleb128 0x13
 2142 0055 00       		.byte	0
 2143 0056 00       		.byte	0
 2144 0057 07       		.uleb128 0x7
 2145 0058 34       		.uleb128 0x34
 2146 0059 00       		.byte	0
 2147 005a 03       		.uleb128 0x3
 2148 005b 0E       		.uleb128 0xe
 2149 005c 3A       		.uleb128 0x3a
 2150 005d 0B       		.uleb128 0xb
 2151 005e 3B       		.uleb128 0x3b
 2152 005f 05       		.uleb128 0x5
 2153 0060 49       		.uleb128 0x49
 2154 0061 13       		.uleb128 0x13
 2155 0062 02       		.uleb128 0x2
 2156 0063 17       		.uleb128 0x17
 2157 0064 00       		.byte	0
 2158 0065 00       		.byte	0
 2159 0066 08       		.uleb128 0x8
 2160 0067 898201   		.uleb128 0x4109
 2161 006a 00       		.byte	0
 2162 006b 11       		.uleb128 0x11
 2163 006c 01       		.uleb128 0x1
 2164 006d 31       		.uleb128 0x31
 2165 006e 13       		.uleb128 0x13
 2166 006f 00       		.byte	0
 2167 0070 00       		.byte	0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 75


 2168 0071 09       		.uleb128 0x9
 2169 0072 898201   		.uleb128 0x4109
 2170 0075 01       		.byte	0x1
 2171 0076 11       		.uleb128 0x11
 2172 0077 01       		.uleb128 0x1
 2173 0078 31       		.uleb128 0x31
 2174 0079 13       		.uleb128 0x13
 2175 007a 00       		.byte	0
 2176 007b 00       		.byte	0
 2177 007c 0A       		.uleb128 0xa
 2178 007d 8A8201   		.uleb128 0x410a
 2179 0080 00       		.byte	0
 2180 0081 02       		.uleb128 0x2
 2181 0082 18       		.uleb128 0x18
 2182 0083 9142     		.uleb128 0x2111
 2183 0085 18       		.uleb128 0x18
 2184 0086 00       		.byte	0
 2185 0087 00       		.byte	0
 2186 0088 0B       		.uleb128 0xb
 2187 0089 2E       		.uleb128 0x2e
 2188 008a 01       		.byte	0x1
 2189 008b 3F       		.uleb128 0x3f
 2190 008c 19       		.uleb128 0x19
 2191 008d 03       		.uleb128 0x3
 2192 008e 0E       		.uleb128 0xe
 2193 008f 3A       		.uleb128 0x3a
 2194 0090 0B       		.uleb128 0xb
 2195 0091 3B       		.uleb128 0x3b
 2196 0092 05       		.uleb128 0x5
 2197 0093 27       		.uleb128 0x27
 2198 0094 19       		.uleb128 0x19
 2199 0095 49       		.uleb128 0x49
 2200 0096 13       		.uleb128 0x13
 2201 0097 11       		.uleb128 0x11
 2202 0098 01       		.uleb128 0x1
 2203 0099 12       		.uleb128 0x12
 2204 009a 06       		.uleb128 0x6
 2205 009b 40       		.uleb128 0x40
 2206 009c 18       		.uleb128 0x18
 2207 009d 9742     		.uleb128 0x2117
 2208 009f 19       		.uleb128 0x19
 2209 00a0 01       		.uleb128 0x1
 2210 00a1 13       		.uleb128 0x13
 2211 00a2 00       		.byte	0
 2212 00a3 00       		.byte	0
 2213 00a4 0C       		.uleb128 0xc
 2214 00a5 05       		.uleb128 0x5
 2215 00a6 00       		.byte	0
 2216 00a7 03       		.uleb128 0x3
 2217 00a8 0E       		.uleb128 0xe
 2218 00a9 3A       		.uleb128 0x3a
 2219 00aa 0B       		.uleb128 0xb
 2220 00ab 3B       		.uleb128 0x3b
 2221 00ac 05       		.uleb128 0x5
 2222 00ad 49       		.uleb128 0x49
 2223 00ae 13       		.uleb128 0x13
 2224 00af 02       		.uleb128 0x2
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 76


 2225 00b0 17       		.uleb128 0x17
 2226 00b1 00       		.byte	0
 2227 00b2 00       		.byte	0
 2228 00b3 0D       		.uleb128 0xd
 2229 00b4 34       		.uleb128 0x34
 2230 00b5 00       		.byte	0
 2231 00b6 03       		.uleb128 0x3
 2232 00b7 08       		.uleb128 0x8
 2233 00b8 3A       		.uleb128 0x3a
 2234 00b9 0B       		.uleb128 0xb
 2235 00ba 3B       		.uleb128 0x3b
 2236 00bb 05       		.uleb128 0x5
 2237 00bc 49       		.uleb128 0x49
 2238 00bd 13       		.uleb128 0x13
 2239 00be 02       		.uleb128 0x2
 2240 00bf 18       		.uleb128 0x18
 2241 00c0 00       		.byte	0
 2242 00c1 00       		.byte	0
 2243 00c2 0E       		.uleb128 0xe
 2244 00c3 2E       		.uleb128 0x2e
 2245 00c4 00       		.byte	0
 2246 00c5 3F       		.uleb128 0x3f
 2247 00c6 19       		.uleb128 0x19
 2248 00c7 03       		.uleb128 0x3
 2249 00c8 0E       		.uleb128 0xe
 2250 00c9 3A       		.uleb128 0x3a
 2251 00ca 0B       		.uleb128 0xb
 2252 00cb 3B       		.uleb128 0x3b
 2253 00cc 05       		.uleb128 0x5
 2254 00cd 27       		.uleb128 0x27
 2255 00ce 19       		.uleb128 0x19
 2256 00cf 49       		.uleb128 0x49
 2257 00d0 13       		.uleb128 0x13
 2258 00d1 11       		.uleb128 0x11
 2259 00d2 01       		.uleb128 0x1
 2260 00d3 12       		.uleb128 0x12
 2261 00d4 06       		.uleb128 0x6
 2262 00d5 40       		.uleb128 0x40
 2263 00d6 18       		.uleb128 0x18
 2264 00d7 9742     		.uleb128 0x2117
 2265 00d9 19       		.uleb128 0x19
 2266 00da 00       		.byte	0
 2267 00db 00       		.byte	0
 2268 00dc 0F       		.uleb128 0xf
 2269 00dd 34       		.uleb128 0x34
 2270 00de 00       		.byte	0
 2271 00df 03       		.uleb128 0x3
 2272 00e0 08       		.uleb128 0x8
 2273 00e1 3A       		.uleb128 0x3a
 2274 00e2 0B       		.uleb128 0xb
 2275 00e3 3B       		.uleb128 0x3b
 2276 00e4 05       		.uleb128 0x5
 2277 00e5 49       		.uleb128 0x49
 2278 00e6 13       		.uleb128 0x13
 2279 00e7 02       		.uleb128 0x2
 2280 00e8 17       		.uleb128 0x17
 2281 00e9 00       		.byte	0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 77


 2282 00ea 00       		.byte	0
 2283 00eb 10       		.uleb128 0x10
 2284 00ec 898201   		.uleb128 0x4109
 2285 00ef 01       		.byte	0x1
 2286 00f0 11       		.uleb128 0x11
 2287 00f1 01       		.uleb128 0x1
 2288 00f2 31       		.uleb128 0x31
 2289 00f3 13       		.uleb128 0x13
 2290 00f4 01       		.uleb128 0x1
 2291 00f5 13       		.uleb128 0x13
 2292 00f6 00       		.byte	0
 2293 00f7 00       		.byte	0
 2294 00f8 11       		.uleb128 0x11
 2295 00f9 05       		.uleb128 0x5
 2296 00fa 00       		.byte	0
 2297 00fb 03       		.uleb128 0x3
 2298 00fc 0E       		.uleb128 0xe
 2299 00fd 3A       		.uleb128 0x3a
 2300 00fe 0B       		.uleb128 0xb
 2301 00ff 3B       		.uleb128 0x3b
 2302 0100 05       		.uleb128 0x5
 2303 0101 49       		.uleb128 0x49
 2304 0102 13       		.uleb128 0x13
 2305 0103 02       		.uleb128 0x2
 2306 0104 18       		.uleb128 0x18
 2307 0105 00       		.byte	0
 2308 0106 00       		.byte	0
 2309 0107 12       		.uleb128 0x12
 2310 0108 05       		.uleb128 0x5
 2311 0109 00       		.byte	0
 2312 010a 03       		.uleb128 0x3
 2313 010b 08       		.uleb128 0x8
 2314 010c 3A       		.uleb128 0x3a
 2315 010d 0B       		.uleb128 0xb
 2316 010e 3B       		.uleb128 0x3b
 2317 010f 05       		.uleb128 0x5
 2318 0110 49       		.uleb128 0x49
 2319 0111 13       		.uleb128 0x13
 2320 0112 02       		.uleb128 0x2
 2321 0113 18       		.uleb128 0x18
 2322 0114 00       		.byte	0
 2323 0115 00       		.byte	0
 2324 0116 13       		.uleb128 0x13
 2325 0117 2E       		.uleb128 0x2e
 2326 0118 01       		.byte	0x1
 2327 0119 3F       		.uleb128 0x3f
 2328 011a 19       		.uleb128 0x19
 2329 011b 03       		.uleb128 0x3
 2330 011c 0E       		.uleb128 0xe
 2331 011d 3A       		.uleb128 0x3a
 2332 011e 0B       		.uleb128 0xb
 2333 011f 3B       		.uleb128 0x3b
 2334 0120 0B       		.uleb128 0xb
 2335 0121 27       		.uleb128 0x27
 2336 0122 19       		.uleb128 0x19
 2337 0123 11       		.uleb128 0x11
 2338 0124 01       		.uleb128 0x1
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 78


 2339 0125 12       		.uleb128 0x12
 2340 0126 06       		.uleb128 0x6
 2341 0127 40       		.uleb128 0x40
 2342 0128 18       		.uleb128 0x18
 2343 0129 9742     		.uleb128 0x2117
 2344 012b 19       		.uleb128 0x19
 2345 012c 01       		.uleb128 0x1
 2346 012d 13       		.uleb128 0x13
 2347 012e 00       		.byte	0
 2348 012f 00       		.byte	0
 2349 0130 14       		.uleb128 0x14
 2350 0131 34       		.uleb128 0x34
 2351 0132 00       		.byte	0
 2352 0133 03       		.uleb128 0x3
 2353 0134 0E       		.uleb128 0xe
 2354 0135 3A       		.uleb128 0x3a
 2355 0136 0B       		.uleb128 0xb
 2356 0137 3B       		.uleb128 0x3b
 2357 0138 0B       		.uleb128 0xb
 2358 0139 49       		.uleb128 0x49
 2359 013a 13       		.uleb128 0x13
 2360 013b 02       		.uleb128 0x2
 2361 013c 17       		.uleb128 0x17
 2362 013d 00       		.byte	0
 2363 013e 00       		.byte	0
 2364 013f 15       		.uleb128 0x15
 2365 0140 34       		.uleb128 0x34
 2366 0141 00       		.byte	0
 2367 0142 03       		.uleb128 0x3
 2368 0143 0E       		.uleb128 0xe
 2369 0144 3A       		.uleb128 0x3a
 2370 0145 0B       		.uleb128 0xb
 2371 0146 3B       		.uleb128 0x3b
 2372 0147 0B       		.uleb128 0xb
 2373 0148 49       		.uleb128 0x49
 2374 0149 13       		.uleb128 0x13
 2375 014a 02       		.uleb128 0x2
 2376 014b 18       		.uleb128 0x18
 2377 014c 00       		.byte	0
 2378 014d 00       		.byte	0
 2379 014e 16       		.uleb128 0x16
 2380 014f 34       		.uleb128 0x34
 2381 0150 00       		.byte	0
 2382 0151 03       		.uleb128 0x3
 2383 0152 0E       		.uleb128 0xe
 2384 0153 3A       		.uleb128 0x3a
 2385 0154 0B       		.uleb128 0xb
 2386 0155 3B       		.uleb128 0x3b
 2387 0156 0B       		.uleb128 0xb
 2388 0157 49       		.uleb128 0x49
 2389 0158 13       		.uleb128 0x13
 2390 0159 3F       		.uleb128 0x3f
 2391 015a 19       		.uleb128 0x19
 2392 015b 02       		.uleb128 0x2
 2393 015c 18       		.uleb128 0x18
 2394 015d 00       		.byte	0
 2395 015e 00       		.byte	0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 79


 2396 015f 17       		.uleb128 0x17
 2397 0160 01       		.uleb128 0x1
 2398 0161 01       		.byte	0x1
 2399 0162 49       		.uleb128 0x49
 2400 0163 13       		.uleb128 0x13
 2401 0164 01       		.uleb128 0x1
 2402 0165 13       		.uleb128 0x13
 2403 0166 00       		.byte	0
 2404 0167 00       		.byte	0
 2405 0168 18       		.uleb128 0x18
 2406 0169 21       		.uleb128 0x21
 2407 016a 00       		.byte	0
 2408 016b 49       		.uleb128 0x49
 2409 016c 13       		.uleb128 0x13
 2410 016d 2F       		.uleb128 0x2f
 2411 016e 0B       		.uleb128 0xb
 2412 016f 00       		.byte	0
 2413 0170 00       		.byte	0
 2414 0171 19       		.uleb128 0x19
 2415 0172 0F       		.uleb128 0xf
 2416 0173 00       		.byte	0
 2417 0174 0B       		.uleb128 0xb
 2418 0175 0B       		.uleb128 0xb
 2419 0176 49       		.uleb128 0x49
 2420 0177 13       		.uleb128 0x13
 2421 0178 00       		.byte	0
 2422 0179 00       		.byte	0
 2423 017a 1A       		.uleb128 0x1a
 2424 017b 26       		.uleb128 0x26
 2425 017c 00       		.byte	0
 2426 017d 49       		.uleb128 0x49
 2427 017e 13       		.uleb128 0x13
 2428 017f 00       		.byte	0
 2429 0180 00       		.byte	0
 2430 0181 1B       		.uleb128 0x1b
 2431 0182 2E       		.uleb128 0x2e
 2432 0183 00       		.byte	0
 2433 0184 3F       		.uleb128 0x3f
 2434 0185 19       		.uleb128 0x19
 2435 0186 3C       		.uleb128 0x3c
 2436 0187 19       		.uleb128 0x19
 2437 0188 6E       		.uleb128 0x6e
 2438 0189 0E       		.uleb128 0xe
 2439 018a 03       		.uleb128 0x3
 2440 018b 0E       		.uleb128 0xe
 2441 018c 3A       		.uleb128 0x3a
 2442 018d 0B       		.uleb128 0xb
 2443 018e 3B       		.uleb128 0x3b
 2444 018f 0B       		.uleb128 0xb
 2445 0190 00       		.byte	0
 2446 0191 00       		.byte	0
 2447 0192 00       		.byte	0
 2448              		.section	.debug_loc,"",%progbits
 2449              	.Ldebug_loc0:
 2450              	.LLST0:
 2451 0000 08000000 		.4byte	.LVL1
 2452 0004 58000000 		.4byte	.LVL6
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 80


 2453 0008 0100     		.2byte	0x1
 2454 000a 54       		.byte	0x54
 2455 000b 00000000 		.4byte	0
 2456 000f 00000000 		.4byte	0
 2457              	.LLST1:
 2458 0013 00000000 		.4byte	.LVL7
 2459 0017 00000000 		.4byte	.LVL7
 2460 001b 0100     		.2byte	0x1
 2461 001d 50       		.byte	0x50
 2462 001e 00000000 		.4byte	.LVL7
 2463 0022 04000000 		.4byte	.LVL8
 2464 0026 0400     		.2byte	0x4
 2465 0028 F3       		.byte	0xf3
 2466 0029 01       		.uleb128 0x1
 2467 002a 50       		.byte	0x50
 2468 002b 9F       		.byte	0x9f
 2469 002c 04000000 		.4byte	.LVL8
 2470 0030 20000000 		.4byte	.LFE4
 2471 0034 0100     		.2byte	0x1
 2472 0036 50       		.byte	0x50
 2473 0037 00000000 		.4byte	0
 2474 003b 00000000 		.4byte	0
 2475              	.LLST2:
 2476 003f 12000000 		.4byte	.LVL9
 2477 0043 1A000000 		.4byte	.LVL10
 2478 0047 0100     		.2byte	0x1
 2479 0049 53       		.byte	0x53
 2480 004a 00000000 		.4byte	0
 2481 004e 00000000 		.4byte	0
 2482              	.LLST3:
 2483 0052 00000000 		.4byte	.LVL11
 2484 0056 06000000 		.4byte	.LVL12
 2485 005a 0100     		.2byte	0x1
 2486 005c 50       		.byte	0x50
 2487 005d 06000000 		.4byte	.LVL12
 2488 0061 0C000000 		.4byte	.LFE9
 2489 0065 0400     		.2byte	0x4
 2490 0067 F3       		.byte	0xf3
 2491 0068 01       		.uleb128 0x1
 2492 0069 50       		.byte	0x50
 2493 006a 9F       		.byte	0x9f
 2494 006b 00000000 		.4byte	0
 2495 006f 00000000 		.4byte	0
 2496              	.LLST4:
 2497 0073 00000000 		.4byte	.LVL13
 2498 0077 2B000000 		.4byte	.LVL17-1
 2499 007b 0100     		.2byte	0x1
 2500 007d 50       		.byte	0x50
 2501 007e 2B000000 		.4byte	.LVL17-1
 2502 0082 34000000 		.4byte	.LFE11
 2503 0086 0400     		.2byte	0x4
 2504 0088 F3       		.byte	0xf3
 2505 0089 01       		.uleb128 0x1
 2506 008a 50       		.byte	0x50
 2507 008b 9F       		.byte	0x9f
 2508 008c 00000000 		.4byte	0
 2509 0090 00000000 		.4byte	0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 81


 2510              	.LLST5:
 2511 0094 06000000 		.4byte	.LVL14
 2512 0098 2B000000 		.4byte	.LVL17-1
 2513 009c 0100     		.2byte	0x1
 2514 009e 51       		.byte	0x51
 2515 009f 00000000 		.4byte	0
 2516 00a3 00000000 		.4byte	0
 2517              	.LLST6:
 2518 00a7 0A000000 		.4byte	.LVL15
 2519 00ab 2E000000 		.4byte	.LVL18
 2520 00af 0100     		.2byte	0x1
 2521 00b1 54       		.byte	0x54
 2522 00b2 00000000 		.4byte	0
 2523 00b6 00000000 		.4byte	0
 2524              	.LLST7:
 2525 00ba 00000000 		.4byte	.LVL19
 2526 00be 0F000000 		.4byte	.LVL22-1
 2527 00c2 0100     		.2byte	0x1
 2528 00c4 50       		.byte	0x50
 2529 00c5 0F000000 		.4byte	.LVL22-1
 2530 00c9 38000000 		.4byte	.LFE12
 2531 00cd 0400     		.2byte	0x4
 2532 00cf F3       		.byte	0xf3
 2533 00d0 01       		.uleb128 0x1
 2534 00d1 50       		.byte	0x50
 2535 00d2 9F       		.byte	0x9f
 2536 00d3 00000000 		.4byte	0
 2537 00d7 00000000 		.4byte	0
 2538              	.LLST8:
 2539 00db 08000000 		.4byte	.LVL20
 2540 00df 1C000000 		.4byte	.LVL24
 2541 00e3 0100     		.2byte	0x1
 2542 00e5 54       		.byte	0x54
 2543 00e6 00000000 		.4byte	0
 2544 00ea 00000000 		.4byte	0
 2545              	.LLST9:
 2546 00ee 0C000000 		.4byte	.LVL21
 2547 00f2 32000000 		.4byte	.LVL25
 2548 00f6 0100     		.2byte	0x1
 2549 00f8 56       		.byte	0x56
 2550 00f9 00000000 		.4byte	0
 2551 00fd 00000000 		.4byte	0
 2552              	.LLST10:
 2553 0101 02000000 		.4byte	.LVL26
 2554 0105 06000000 		.4byte	.LVL27
 2555 0109 0200     		.2byte	0x2
 2556 010b 30       		.byte	0x30
 2557 010c 9F       		.byte	0x9f
 2558 010d 06000000 		.4byte	.LVL27
 2559 0111 0E000000 		.4byte	.LVL29
 2560 0115 0100     		.2byte	0x1
 2561 0117 54       		.byte	0x54
 2562 0118 10000000 		.4byte	.LVL30
 2563 011c 16000000 		.4byte	.LFE10
 2564 0120 0100     		.2byte	0x1
 2565 0122 54       		.byte	0x54
 2566 0123 00000000 		.4byte	0
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 82


 2567 0127 00000000 		.4byte	0
 2568              	.LLST11:
 2569 012b 00000000 		.4byte	.LVL35
 2570 012f 27000000 		.4byte	.LVL36-1
 2571 0133 0100     		.2byte	0x1
 2572 0135 50       		.byte	0x50
 2573 0136 27000000 		.4byte	.LVL36-1
 2574 013a 4C000000 		.4byte	.LFE14
 2575 013e 0400     		.2byte	0x4
 2576 0140 F3       		.byte	0xf3
 2577 0141 01       		.uleb128 0x1
 2578 0142 50       		.byte	0x50
 2579 0143 9F       		.byte	0x9f
 2580 0144 00000000 		.4byte	0
 2581 0148 00000000 		.4byte	0
 2582              	.LLST12:
 2583 014c 00000000 		.4byte	.LVL38
 2584 0150 06000000 		.4byte	.LVL39
 2585 0154 0100     		.2byte	0x1
 2586 0156 50       		.byte	0x50
 2587 0157 06000000 		.4byte	.LVL39
 2588 015b 08000000 		.4byte	.LVL40
 2589 015f 0200     		.2byte	0x2
 2590 0161 73       		.byte	0x73
 2591 0162 00       		.sleb128 0
 2592 0163 08000000 		.4byte	.LVL40
 2593 0167 0A000000 		.4byte	.LVL41
 2594 016b 0500     		.2byte	0x5
 2595 016d 0C       		.byte	0xc
 2596 016e 28640040 		.4byte	0x40006428
 2597 0172 0A000000 		.4byte	.LVL41
 2598 0176 10000000 		.4byte	.LFE15
 2599 017a 0400     		.2byte	0x4
 2600 017c F3       		.byte	0xf3
 2601 017d 01       		.uleb128 0x1
 2602 017e 50       		.byte	0x50
 2603 017f 9F       		.byte	0x9f
 2604 0180 00000000 		.4byte	0
 2605 0184 00000000 		.4byte	0
 2606              	.LLST13:
 2607 0188 00000000 		.4byte	.LVL42
 2608 018c 10000000 		.4byte	.LVL44
 2609 0190 0100     		.2byte	0x1
 2610 0192 50       		.byte	0x50
 2611 0193 10000000 		.4byte	.LVL44
 2612 0197 38000000 		.4byte	.LFE5
 2613 019b 0400     		.2byte	0x4
 2614 019d F3       		.byte	0xf3
 2615 019e 01       		.uleb128 0x1
 2616 019f 50       		.byte	0x50
 2617 01a0 9F       		.byte	0x9f
 2618 01a1 00000000 		.4byte	0
 2619 01a5 00000000 		.4byte	0
 2620              	.LLST14:
 2621 01a9 0C000000 		.4byte	.LVL43
 2622 01ad 16000000 		.4byte	.LVL46
 2623 01b1 0100     		.2byte	0x1
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 83


 2624 01b3 55       		.byte	0x55
 2625 01b4 16000000 		.4byte	.LVL46
 2626 01b8 2A000000 		.4byte	.LVL48
 2627 01bc 0900     		.2byte	0x9
 2628 01be 75       		.byte	0x75
 2629 01bf 00       		.sleb128 0
 2630 01c0 03       		.byte	0x3
 2631 01c1 00000000 		.4byte	.LANCHOR1
 2632 01c5 1C       		.byte	0x1c
 2633 01c6 9F       		.byte	0x9f
 2634 01c7 00000000 		.4byte	0
 2635 01cb 00000000 		.4byte	0
 2636              	.LLST15:
 2637 01cf 00000000 		.4byte	.LVL49
 2638 01d3 07000000 		.4byte	.LVL50-1
 2639 01d7 0100     		.2byte	0x1
 2640 01d9 50       		.byte	0x50
 2641 01da 07000000 		.4byte	.LVL50-1
 2642 01de 34000000 		.4byte	.LFE13
 2643 01e2 0400     		.2byte	0x4
 2644 01e4 F3       		.byte	0xf3
 2645 01e5 01       		.uleb128 0x1
 2646 01e6 50       		.byte	0x50
 2647 01e7 9F       		.byte	0x9f
 2648 01e8 00000000 		.4byte	0
 2649 01ec 00000000 		.4byte	0
 2650              	.LLST16:
 2651 01f0 00000000 		.4byte	.LVL52
 2652 01f4 13000000 		.4byte	.LVL53-1
 2653 01f8 0100     		.2byte	0x1
 2654 01fa 50       		.byte	0x50
 2655 01fb 13000000 		.4byte	.LVL53-1
 2656 01ff 20000000 		.4byte	.LFE6
 2657 0203 0400     		.2byte	0x4
 2658 0205 F3       		.byte	0xf3
 2659 0206 01       		.uleb128 0x1
 2660 0207 50       		.byte	0x50
 2661 0208 9F       		.byte	0x9f
 2662 0209 00000000 		.4byte	0
 2663 020d 00000000 		.4byte	0
 2664              	.LLST17:
 2665 0211 00000000 		.4byte	.LVL56
 2666 0215 04000000 		.4byte	.LVL57
 2667 0219 0200     		.2byte	0x2
 2668 021b 30       		.byte	0x30
 2669 021c 9F       		.byte	0x9f
 2670 021d 04000000 		.4byte	.LVL57
 2671 0221 0C000000 		.4byte	.LFE16
 2672 0225 0100     		.2byte	0x1
 2673 0227 50       		.byte	0x50
 2674 0228 00000000 		.4byte	0
 2675 022c 00000000 		.4byte	0
 2676              	.LLST18:
 2677 0230 10000000 		.4byte	.LVL62
 2678 0234 27000000 		.4byte	.LVL63-1
 2679 0238 0100     		.2byte	0x1
 2680 023a 50       		.byte	0x50
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 84


 2681 023b 42000000 		.4byte	.LVL64
 2682 023f 59000000 		.4byte	.LVL65-1
 2683 0243 0100     		.2byte	0x1
 2684 0245 50       		.byte	0x50
 2685 0246 00000000 		.4byte	0
 2686 024a 00000000 		.4byte	0
 2687              		.section	.debug_aranges,"",%progbits
 2688 0000 AC000000 		.4byte	0xac
 2689 0004 0200     		.2byte	0x2
 2690 0006 00000000 		.4byte	.Ldebug_info0
 2691 000a 04       		.byte	0x4
 2692 000b 00       		.byte	0
 2693 000c 0000     		.2byte	0
 2694 000e 0000     		.2byte	0
 2695 0010 00000000 		.4byte	.LFB1
 2696 0014 68000000 		.4byte	.LFE1-.LFB1
 2697 0018 00000000 		.4byte	.LFB4
 2698 001c 20000000 		.4byte	.LFE4-.LFB4
 2699 0020 00000000 		.4byte	.LFB8
 2700 0024 10000000 		.4byte	.LFE8-.LFB8
 2701 0028 00000000 		.4byte	.LFB9
 2702 002c 0C000000 		.4byte	.LFE9-.LFB9
 2703 0030 00000000 		.4byte	.LFB11
 2704 0034 34000000 		.4byte	.LFE11-.LFB11
 2705 0038 00000000 		.4byte	.LFB12
 2706 003c 38000000 		.4byte	.LFE12-.LFB12
 2707 0040 00000000 		.4byte	.LFB10
 2708 0044 16000000 		.4byte	.LFE10-.LFB10
 2709 0048 00000000 		.4byte	.LFB3
 2710 004c 68000000 		.4byte	.LFE3-.LFB3
 2711 0050 00000000 		.4byte	.LFB14
 2712 0054 4C000000 		.4byte	.LFE14-.LFB14
 2713 0058 00000000 		.4byte	.LFB15
 2714 005c 10000000 		.4byte	.LFE15-.LFB15
 2715 0060 00000000 		.4byte	.LFB5
 2716 0064 38000000 		.4byte	.LFE5-.LFB5
 2717 0068 00000000 		.4byte	.LFB13
 2718 006c 34000000 		.4byte	.LFE13-.LFB13
 2719 0070 00000000 		.4byte	.LFB6
 2720 0074 20000000 		.4byte	.LFE6-.LFB6
 2721 0078 00000000 		.4byte	.LFB7
 2722 007c 38000000 		.4byte	.LFE7-.LFB7
 2723 0080 00000000 		.4byte	.LFB16
 2724 0084 0C000000 		.4byte	.LFE16-.LFB16
 2725 0088 00000000 		.4byte	.LFB17
 2726 008c 0C000000 		.4byte	.LFE17-.LFB17
 2727 0090 00000000 		.4byte	.LFB18
 2728 0094 20000000 		.4byte	.LFE18-.LFB18
 2729 0098 00000000 		.4byte	.LFB0
 2730 009c E4000000 		.4byte	.LFE0-.LFB0
 2731 00a0 00000000 		.4byte	.LFB2
 2732 00a4 1C000000 		.4byte	.LFE2-.LFB2
 2733 00a8 00000000 		.4byte	0
 2734 00ac 00000000 		.4byte	0
 2735              		.section	.debug_ranges,"",%progbits
 2736              	.Ldebug_ranges0:
 2737 0000 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 85


 2738 0004 68000000 		.4byte	.LFE1
 2739 0008 00000000 		.4byte	.LFB4
 2740 000c 20000000 		.4byte	.LFE4
 2741 0010 00000000 		.4byte	.LFB8
 2742 0014 10000000 		.4byte	.LFE8
 2743 0018 00000000 		.4byte	.LFB9
 2744 001c 0C000000 		.4byte	.LFE9
 2745 0020 00000000 		.4byte	.LFB11
 2746 0024 34000000 		.4byte	.LFE11
 2747 0028 00000000 		.4byte	.LFB12
 2748 002c 38000000 		.4byte	.LFE12
 2749 0030 00000000 		.4byte	.LFB10
 2750 0034 16000000 		.4byte	.LFE10
 2751 0038 00000000 		.4byte	.LFB3
 2752 003c 68000000 		.4byte	.LFE3
 2753 0040 00000000 		.4byte	.LFB14
 2754 0044 4C000000 		.4byte	.LFE14
 2755 0048 00000000 		.4byte	.LFB15
 2756 004c 10000000 		.4byte	.LFE15
 2757 0050 00000000 		.4byte	.LFB5
 2758 0054 38000000 		.4byte	.LFE5
 2759 0058 00000000 		.4byte	.LFB13
 2760 005c 34000000 		.4byte	.LFE13
 2761 0060 00000000 		.4byte	.LFB6
 2762 0064 20000000 		.4byte	.LFE6
 2763 0068 00000000 		.4byte	.LFB7
 2764 006c 38000000 		.4byte	.LFE7
 2765 0070 00000000 		.4byte	.LFB16
 2766 0074 0C000000 		.4byte	.LFE16
 2767 0078 00000000 		.4byte	.LFB17
 2768 007c 0C000000 		.4byte	.LFE17
 2769 0080 00000000 		.4byte	.LFB18
 2770 0084 20000000 		.4byte	.LFE18
 2771 0088 00000000 		.4byte	.LFB0
 2772 008c E4000000 		.4byte	.LFE0
 2773 0090 00000000 		.4byte	.LFB2
 2774 0094 1C000000 		.4byte	.LFE2
 2775 0098 00000000 		.4byte	0
 2776 009c 00000000 		.4byte	0
 2777              		.section	.debug_line,"",%progbits
 2778              	.Ldebug_line0:
 2779 0000 B9020000 		.section	.debug_str,"MS",%progbits,1
 2779      0200CF00 
 2779      00000201 
 2779      FB0E0D00 
 2779      01010101 
 2780              	.LASF10:
 2781 0000 75696E74 		.ascii	"uint16\000"
 2781      313600
 2782              	.LASF65:
 2783 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2783      69744372 
 2783      69746963 
 2783      616C5365 
 2783      6374696F 
 2784              	.LASF24:
 2785 001d 736E7349 		.ascii	"snsIndex\000"
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 86


 2785      6E646578 
 2785      00
 2786              	.LASF34:
 2787 0026 43617053 		.ascii	"CapSense_CSD_SetPrescaler\000"
 2787      656E7365 
 2787      5F435344 
 2787      5F536574 
 2787      50726573 
 2788              	.LASF7:
 2789 0040 6C6F6E67 		.ascii	"long long unsigned int\000"
 2789      206C6F6E 
 2789      6720756E 
 2789      7369676E 
 2789      65642069 
 2790              	.LASF67:
 2791 0057 43617053 		.ascii	"CapSense_CSD_AMuxCH0_Unset\000"
 2791      656E7365 
 2791      5F435344 
 2791      5F414D75 
 2791      78434830 
 2792              	.LASF55:
 2793 0072 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 2793      656E7365 
 2793      5F435344 
 2793      5F6D6173 
 2793      6B546162 
 2794              	.LASF69:
 2795 0089 43617053 		.ascii	"CapSense_CSD_CompCH0_Stop\000"
 2795      656E7365 
 2795      5F435344 
 2795      5F436F6D 
 2795      70434830 
 2796              	.LASF54:
 2797 00a3 43617053 		.ascii	"CapSense_CSD_portTable\000"
 2797      656E7365 
 2797      5F435344 
 2797      5F706F72 
 2797      74546162 
 2798              	.LASF6:
 2799 00ba 6C6F6E67 		.ascii	"long long int\000"
 2799      206C6F6E 
 2799      6720696E 
 2799      7400
 2800              	.LASF0:
 2801 00c8 7369676E 		.ascii	"signed char\000"
 2801      65642063 
 2801      68617200 
 2802              	.LASF50:
 2803 00d4 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 2803      656E7365 
 2803      5F435344 
 2803      5F73656E 
 2803      736F7249 
 2804              	.LASF46:
 2805 00ed 43617053 		.ascii	"CapSense_CSD_Init\000"
 2805      656E7365 
 2805      5F435344 
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 87


 2805      5F496E69 
 2805      7400
 2806              	.LASF4:
 2807 00ff 6C6F6E67 		.ascii	"long int\000"
 2807      20696E74 
 2807      00
 2808              	.LASF70:
 2809 0108 43617053 		.ascii	"CapSense_CSD_IdacCH0_Stop\000"
 2809      656E7365 
 2809      5F435344 
 2809      5F496461 
 2809      63434830 
 2810              	.LASF60:
 2811 0122 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2811      656E7365 
 2811      5F435344 
 2811      5F776964 
 2811      6765744E 
 2812              	.LASF56:
 2813 013c 43617053 		.ascii	"CapSense_CSD_csTable\000"
 2813      656E7365 
 2813      5F435344 
 2813      5F637354 
 2813      61626C65 
 2814              	.LASF16:
 2815 0151 72656731 		.ascii	"reg16\000"
 2815      3600
 2816              	.LASF9:
 2817 0157 75696E74 		.ascii	"uint8\000"
 2817      3800
 2818              	.LASF13:
 2819 015d 646F7562 		.ascii	"double\000"
 2819      6C6500
 2820              	.LASF48:
 2821 0164 43617053 		.ascii	"CapSense_CSD_initVar\000"
 2821      656E7365 
 2821      5F435344 
 2821      5F696E69 
 2821      74566172 
 2822              	.LASF11:
 2823 0179 75696E74 		.ascii	"uint32\000"
 2823      333200
 2824              	.LASF41:
 2825 0180 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 2825      656E7365 
 2825      5F435344 
 2825      5F536361 
 2825      6E456E61 
 2826              	.LASF18:
 2827 01a0 6C6F6E67 		.ascii	"long double\000"
 2827      20646F75 
 2827      626C6500 
 2828              	.LASF29:
 2829 01ac 6D61736B 		.ascii	"mask\000"
 2829      00
 2830              	.LASF31:
 2831 01b1 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 88


 2831      656E7365 
 2831      5F435344 
 2831      5F436C65 
 2831      61725365 
 2832              	.LASF28:
 2833 01cb 706F7274 		.ascii	"port\000"
 2833      00
 2834              	.LASF39:
 2835 01d0 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 2835      656E7365 
 2835      5F435344 
 2835      5F507265 
 2835      5363616E 
 2836              	.LASF8:
 2837 01e5 756E7369 		.ascii	"unsigned int\000"
 2837      676E6564 
 2837      20696E74 
 2837      00
 2838              	.LASF5:
 2839 01f2 6C6F6E67 		.ascii	"long unsigned int\000"
 2839      20756E73 
 2839      69676E65 
 2839      6420696E 
 2839      7400
 2840              	.LASF80:
 2841 0204 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSD.c\000"
 2841      72617465 
 2841      645F536F 
 2841      75726365 
 2841      5C50536F 
 2842              	.LASF59:
 2843 022a 43617053 		.ascii	"CapSense_CSD_analogSwitchDivider\000"
 2843      656E7365 
 2843      5F435344 
 2843      5F616E61 
 2843      6C6F6753 
 2844              	.LASF63:
 2845 024b 43617053 		.ascii	"CapSense_CSD_CompCH0_Enable\000"
 2845      656E7365 
 2845      5F435344 
 2845      5F436F6D 
 2845      70434830 
 2846              	.LASF61:
 2847 0267 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2847      74657243 
 2847      72697469 
 2847      63616C53 
 2847      65637469 
 2848              	.LASF3:
 2849 027e 73686F72 		.ascii	"short unsigned int\000"
 2849      7420756E 
 2849      7369676E 
 2849      65642069 
 2849      6E7400
 2850              	.LASF72:
 2851 0291 4379496E 		.ascii	"CyIntSetVector\000"
 2851      74536574 
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 89


 2851      56656374 
 2851      6F7200
 2852              	.LASF25:
 2853 02a0 73656E73 		.ascii	"sensor\000"
 2853      6F7200
 2854              	.LASF30:
 2855 02a7 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 2855      656E7365 
 2855      5F435344 
 2855      5F446973 
 2855      61626C65 
 2856              	.LASF33:
 2857 02c2 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 2857      656E7365 
 2857      5F435344 
 2857      5F506F73 
 2857      74536361 
 2858              	.LASF37:
 2859 02d8 736C6F74 		.ascii	"slot\000"
 2859      00
 2860              	.LASF53:
 2861 02dd 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 2861      656E7365 
 2861      5F435344 
 2861      5F706354 
 2861      61626C65 
 2862              	.LASF40:
 2863 02f2 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 2863      656E7365 
 2863      5F435344 
 2863      5F536361 
 2863      6E53656E 
 2864              	.LASF71:
 2865 030a 43617053 		.ascii	"CapSense_CSD_IdacCH0_SetValue\000"
 2865      656E7365 
 2865      5F435344 
 2865      5F496461 
 2865      63434830 
 2866              	.LASF17:
 2867 0328 72656733 		.ascii	"reg32\000"
 2867      3200
 2868              	.LASF78:
 2869 032e 43617053 		.ascii	"CapSense_CSD_IdacCH0_SetRange\000"
 2869      656E7365 
 2869      5F435344 
 2869      5F496461 
 2869      63434830 
 2870              	.LASF74:
 2871 034c 43617053 		.ascii	"CapSense_CSD_AMuxCH0_Init\000"
 2871      656E7365 
 2871      5F435344 
 2871      5F414D75 
 2871      78434830 
 2872              	.LASF27:
 2873 0366 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
 2873      656E7365 
 2873      5F435344 
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 90


 2873      5F456E61 
 2873      626C6553 
 2874              	.LASF19:
 2875 0380 73697A65 		.ascii	"sizetype\000"
 2875      74797065 
 2875      00
 2876              	.LASF81:
 2877 0389 453A5C45 		.ascii	"E:\\Embeded System Lab\\ENDSEM-PROJECT\\COMPLETE pr"
 2877      6D626564 
 2877      65642053 
 2877      79737465 
 2877      6D204C61 
 2878 03b9 6F6A6563 		.ascii	"oject\\Workspace-Final\\Design02.cydsn\000"
 2878      745C576F 
 2878      726B7370 
 2878      6163652D 
 2878      46696E61 
 2879              	.LASF47:
 2880 03de 43617053 		.ascii	"CapSense_CSD_Start\000"
 2880      656E7365 
 2880      5F435344 
 2880      5F537461 
 2880      727400
 2881              	.LASF77:
 2882 03f1 43617053 		.ascii	"CapSense_CSD_IdacCH0_SetPolarity\000"
 2882      656E7365 
 2882      5F435344 
 2882      5F496461 
 2882      63434830 
 2883              	.LASF44:
 2884 0412 7363616E 		.ascii	"scanSpeed\000"
 2884      53706565 
 2884      6400
 2885              	.LASF75:
 2886 041c 43617053 		.ascii	"CapSense_CSD_CompCH0_Init\000"
 2886      656E7365 
 2886      5F435344 
 2886      5F436F6D 
 2886      70434830 
 2887              	.LASF21:
 2888 0436 656E4D61 		.ascii	"enMask\000"
 2888      736B00
 2889              	.LASF52:
 2890 043d 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2890      656E7365 
 2890      5F435344 
 2890      5F73656E 
 2890      736F7245 
 2891              	.LASF73:
 2892 045b 4379496E 		.ascii	"CyIntSetPriority\000"
 2892      74536574 
 2892      5072696F 
 2892      72697479 
 2892      00
 2893              	.LASF12:
 2894 046c 666C6F61 		.ascii	"float\000"
 2894      7400
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 91


 2895              	.LASF35:
 2896 0472 70726573 		.ascii	"prescaler\000"
 2896      63616C65 
 2896      7200
 2897              	.LASF42:
 2898 047c 43617053 		.ascii	"CapSense_CSD_GetPrescaler\000"
 2898      656E7365 
 2898      5F435344 
 2898      5F476574 
 2898      50726573 
 2899              	.LASF15:
 2900 0496 72656738 		.ascii	"reg8\000"
 2900      00
 2901              	.LASF1:
 2902 049b 756E7369 		.ascii	"unsigned char\000"
 2902      676E6564 
 2902      20636861 
 2902      7200
 2903              	.LASF2:
 2904 04a9 73686F72 		.ascii	"short int\000"
 2904      7420696E 
 2904      7400
 2905              	.LASF38:
 2906 04b3 77696467 		.ascii	"widget\000"
 2906      657400
 2907              	.LASF64:
 2908 04ba 43617053 		.ascii	"CapSense_CSD_IdacCH0_Enable\000"
 2908      656E7365 
 2908      5F435344 
 2908      5F496461 
 2908      63434830 
 2909              	.LASF79:
 2910 04d6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2910      43313120 
 2910      352E342E 
 2910      31203230 
 2910      31363036 
 2911 0509 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2911      20726576 
 2911      6973696F 
 2911      6E203233 
 2911      37373135 
 2912 053c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2912      66756E63 
 2912      74696F6E 
 2912      2D736563 
 2912      74696F6E 
 2913              	.LASF82:
 2914 0564 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 2914      656E7365 
 2914      5F435344 
 2914      5F497342 
 2914      75737900 
 2915              	.LASF51:
 2916 0578 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2916      656E7365 
 2916      5F435344 
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 92


 2916      5F73656E 
 2916      736F7252 
 2917              	.LASF43:
 2918 058f 43617053 		.ascii	"CapSense_CSD_SetScanSpeed\000"
 2918      656E7365 
 2918      5F435344 
 2918      5F536574 
 2918      5363616E 
 2919              	.LASF32:
 2920 05a9 43617053 		.ascii	"CapSense_CSD_Stop\000"
 2920      656E7365 
 2920      5F435344 
 2920      5F53746F 
 2920      7000
 2921              	.LASF14:
 2922 05bb 63686172 		.ascii	"char\000"
 2922      00
 2923              	.LASF36:
 2924 05c0 43617053 		.ascii	"CapSense_CSD_SetScanSlotSettings\000"
 2924      656E7365 
 2924      5F435344 
 2924      5F536574 
 2924      5363616E 
 2925              	.LASF23:
 2926 05e1 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 2926      656E7365 
 2926      5F435344 
 2926      5F526561 
 2926      6453656E 
 2927              	.LASF58:
 2928 05fc 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 2928      656E7365 
 2928      5F435344 
 2928      5F776964 
 2928      67657452 
 2929              	.LASF57:
 2930 061a 43617053 		.ascii	"CapSense_CSD_idacSettings\000"
 2930      656E7365 
 2930      5F435344 
 2930      5F696461 
 2930      63536574 
 2931              	.LASF26:
 2932 0634 43617053 		.ascii	"CapSense_CSD_Enable\000"
 2932      656E7365 
 2932      5F435344 
 2932      5F456E61 
 2932      626C6500 
 2933              	.LASF20:
 2934 0648 656E6162 		.ascii	"enableInterrupts\000"
 2934      6C65496E 
 2934      74657272 
 2934      75707473 
 2934      00
 2935              	.LASF76:
 2936 0659 43617053 		.ascii	"CapSense_CSD_IdacCH0_Init\000"
 2936      656E7365 
 2936      5F435344 
ARM GAS  C:\Users\aryan\AppData\Local\Temp\ccPeTkna.s 			page 93


 2936      5F496461 
 2936      63434830 
 2937              	.LASF22:
 2938 0673 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 2938      656E7365 
 2938      5F435344 
 2938      5F46696E 
 2938      644E6578 
 2939              	.LASF66:
 2940 068f 43617053 		.ascii	"CapSense_CSD_AMuxCH0_Set\000"
 2940      656E7365 
 2940      5F435344 
 2940      5F414D75 
 2940      78434830 
 2941              	.LASF62:
 2942 06a8 43617053 		.ascii	"CapSense_CSD_IntClock_Start\000"
 2942      656E7365 
 2942      5F435344 
 2942      5F496E74 
 2942      436C6F63 
 2943              	.LASF68:
 2944 06c4 43617053 		.ascii	"CapSense_CSD_IntClock_Stop\000"
 2944      656E7365 
 2944      5F435344 
 2944      5F496E74 
 2944      436C6F63 
 2945              	.LASF45:
 2946 06df 43617053 		.ascii	"CapSense_CSD_SetAnalogSwitchesSource\000"
 2946      656E7365 
 2946      5F435344 
 2946      5F536574 
 2946      416E616C 
 2947              	.LASF49:
 2948 0704 43617053 		.ascii	"CapSense_CSD_csv\000"
 2948      656E7365 
 2948      5F435344 
 2948      5F637376 
 2948      00
 2949              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
